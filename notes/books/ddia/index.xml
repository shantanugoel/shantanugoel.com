<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Designing Data-Intensive Applications on Shantanu's Notesverse</title><link>https://shantanugoel.com/notes/books/ddia/</link><description>Recent content in Designing Data-Intensive Applications on Shantanu's Notesverse</description><generator>Hugo</generator><language>en-us</language><managingEditor>shantanu@shantanugoel.com (Shantanu Goel)</managingEditor><webMaster>shantanu@shantanugoel.com (Shantanu Goel)</webMaster><atom:link href="https://shantanugoel.com/notes/books/ddia/index.xml" rel="self" type="application/rss+xml"/><item><title>Chapter 1: Foundations of Data Systems</title><link>https://shantanugoel.com/notes/books/ddia/chapter-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/notes/books/ddia/chapter-1/</guid><description>Foundations of Data Systems # 3 Important Characteristics of Data Systems # Reliability: System should continue to work correctly even in the face of adversity and maintain same perf levels Scalability: As the system grows, there should be reasonable ways to deal with the growth Maintainability: Different people should be able to work on it productively across time Reliability # This can include:
Performing expected functions correctly Tolerate user mistakes or unexpected inputs Maintain good enough performance under load Prevent unauthorized access and abuse Types of faults:</description></item><item><title>Chapter 2: Data Models and Query Languages</title><link>https://shantanugoel.com/notes/books/ddia/chapter-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/notes/books/ddia/chapter-2/</guid><description>Data Models and Query Languages # Most applications are built by layering one data model on top of another. Each layer hides the complexity of the layer below it by providing a clean data model.
Relational model v/s Document model # SQL based on relational model proposed by Edgar Codd in 1970. Data is organized into relations (tables in SQL) where each relation is an unordered collection of tuples (rows in SQL).</description></item><item><title>Chapter 3: Storage and Retrieval</title><link>https://shantanugoel.com/notes/books/ddia/chapter-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/notes/books/ddia/chapter-3/</guid><description>Storage and Retrieval # TBD</description></item></channel></rss>