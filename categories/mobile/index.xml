<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mobile on</title><link>/categories/mobile/</link><description>Recent content in Mobile on</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 16 Feb 2015 03:00:19 +0000</lastBuildDate><atom:link href="/categories/mobile/index.xml" rel="self" type="application/rss+xml"/><item><title>Weekend Hack: Shoutcast2Dropbox - Automatic Shoutcast Stations To Dropbox Recorder</title><link>/2015/02/16/weekend-hack-shoutcast2dropbox-automatic-shoutcast-stations-to-dropbox-recorder/</link><pubDate>Mon, 16 Feb 2015 03:00:19 +0000</pubDate><guid>/2015/02/16/weekend-hack-shoutcast2dropbox-automatic-shoutcast-stations-to-dropbox-recorder/</guid><description>So I got bored of listening to same old songs on my phone over and over and Rdio announced a streaming plan for India. With a sigh of relief I subscribed immediately and it was stellar at home with its wonderful 32 million song collection and chromecast support to boot. The experience during the commute daily was underwhelming. Couple the spotty airtel data connection with no one station covering all songs I would love and it makes for a frustrating commute with long gaps all over.</description><content>&lt;p>So I got bored of listening to same old songs on my phone over and over and Rdio announced a streaming plan for India. With a sigh of relief I subscribed immediately and it was stellar at home with its wonderful 32 million song collection and chromecast support to boot. The experience during the commute daily was underwhelming. Couple the spotty airtel data connection with no one station covering all songs I would love and it makes for a frustrating commute with long gaps all over. Slacker has a radio station caching feature but unfortunately doesn&amp;rsquo;t support India. So I took things into my own hands and Shoutcast2Dropbox was born this weekend. Details follow below.&lt;/p>
&lt;p>Link:Â &lt;a href="https://github.com/shantanugoel/Shoutcast2Dropbox">https://github.com/shantanugoel/Shoutcast2Dropbox&lt;/a>&lt;/p>
&lt;h1 id="shoutcast2dropbox---automatic-shoutcast-stations-to-dropbox-recorder">&lt;strong>Shoutcast2Dropbox - Automatic Shoutcast Stations To Dropbox Recorder&lt;/strong>&lt;/h1>
&lt;p>This simple script allows to automatically download a specified duration of song collections from different shoutcast stations and then automatically upload them to your dropbox. This can be used to create your own station caching feature with a variety of benefits:&lt;/p>
&lt;ol>
&lt;li>Individual songs instead of one lengthy stream so you can skip forward/backwards among them&lt;/li>
&lt;li>Mix up a variety of different stations instead of listening to a single type (e.g. I mix up different types of rock and metal stations with a few latest hits ones thrown in)&lt;/li>
&lt;li>No buffering/precious mobile data usage as the Dropbox folder can be synced to phone on wifi (I use Dropsync to schedule syncs on home wifi)&lt;/li>
&lt;li>New playlist every day instead of listening to same old stored songs&lt;/li>
&lt;/ol>
&lt;p>I created this for myself one day as I was sick of the many issues that plague streaming music (the ones listed above that are overcome with this script). It may have bugs or may not cover all usecases. I&amp;rsquo;d love to get feedback to fix the bugs and add more features, so feel free to send in your requests.&lt;/p>
&lt;h1 id="dependencies">&lt;strong>Dependencies&lt;/strong>&lt;/h1>
&lt;p>For the script:&lt;/p>
&lt;ol>
&lt;li>Linux Host - (PC/Router/Raspberry Pi/Server etc). Script is written for shell currently but may be adapted for windows. I run it on my router as a cronjob.&lt;/li>
&lt;li>streamripper - Opensource Shoutcast recorder program&lt;/li>
&lt;li>Dropbox Uploader - For Dropbox sync. Linked as submodule in this git repository.&lt;/li>
&lt;/ol>
&lt;h1 id="usage">&lt;strong>Usage&lt;/strong>&lt;/h1>
&lt;p>Once above dependencies are satisfied, run the Dropbox Uploader script and do the steps as mentioned to create a folder for syncing the songs to your Dropbox.
After that, you can run the Shoutcast2Dropbox script as below:&lt;/p>
&lt;p>&lt;code>./Shoutcast2Dropbox.sh &amp;lt;Input File for station lists&amp;gt; &amp;lt;Cumulative Duration to record in seconds&amp;gt; &amp;lt;Output Directory path&amp;gt; &lt;/code>&lt;/p>
&lt;p>Input file should have 1 station url per line. An example file (stations-example.txt) is given in this repository
Duration in seconds is split up into equal durations for each station. e.g. 3600 seconds (1 hour) given here with a station list of 3 means each station will be recorded for 1200 seconds (or 20 minutes).
Output directory is where the songs will be captured to.
Example:&lt;/p>
&lt;p>&lt;code>./Shoutcast2Dropbox.sh stations-example.txt 3600 /home/Shantanu/songs &lt;/code>&lt;/p>
&lt;p>Sync the folder to your phone (See tips section ;) )&lt;/p>
&lt;h1 id="tips">&lt;strong>Tips&lt;/strong>&lt;/h1>
&lt;ol>
&lt;li>
&lt;p>Station urls are not the website urls. You need to get their actual shoutcast stream urls. If they are not present on the website in plain view, generally you can &amp;ldquo;inspect&amp;rdquo; the web page or view source to find those out.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Use aac streams if possible. They are lower size and higher quality compared to mp3s&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Instead of running the script manually, set it up as a cron job to run automatically. I set it up to run every day around noon (so that songs get downloaded by the time I reach home)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Set it up on a low power device which is always on. e.g. I set it up on my router.
i) I had to install a few extras on my router for this to work (e.g. coreutils-stat pkg from entware). You may need to do so as well
ii) I used -k option in script for Dropbox Uploader due to missing ca certificates. You may either choose to install certificates (not a problem on PC but slightly involved on router) or use -k option wherever dropbox uploader commands are used. Didn&amp;rsquo;t check in the k option to avoid security issues by default.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>For listening to fresh playlists every day while on the road with least effort, setup your phone to automatically sync this. I use &amp;ldquo;DropSync&amp;rdquo; and &amp;ldquo;Tasker&amp;rdquo; for this. DropSync allows to sync any dropbox folder to the phone and tasker automates this process while taking care of not disturbing your normal phone use. I set it up like this:
a. Setup DropSync to do only manual sync.
b. In Tasker, create a profile with this conditions:
i) An hourly repeating time event from 10 PM to 6 AM
ii) Wifi is connected instead of mobile data
iii) Location context is home (from another of my profiles. You can instead choose to use your specific home wifi ssid in above step)
iv) Phone is getting charged (so that it doesn&amp;rsquo;t lose power in the middle)
c. Profile enter task is setup to check a variable if sync is done or not. If not done, then trigger the sync and then set the sync done variable.
d. Profile exit task is setup to clear the sync done variable for next day.&lt;/p>
&lt;/li>
&lt;/ol></content></item><item><title>[Xposed Mod] Bypass Exchange Security Policy for Nexus and other AOSP devices</title><link>/2013/10/14/xposed-mod-bypass-exchange-security-policy-for-nexus-4-android-4-3/</link><pubDate>Mon, 14 Oct 2013 14:13:10 +0000</pubDate><guid>/2013/10/14/xposed-mod-bypass-exchange-security-policy-for-nexus-4-android-4-3/</guid><description>Exchange Security Bypass Xposed Mode for Nexus 4/5/7 and other AOSP based devices (Android 4.3 / 4.4)
Update: This has now been tested to work successfully on all stock or nearly stock JellyBean (4.3) and KitKat (4.4) ROMs on Nexus 4 / Nexus 5 / Nexus 7. Other AOSP ROMs like CM11 should work as well.
This mod should be used along with Xposed ( http://forum.xda-developers.com/showthread.php?t=1574401 ). Xposed is this awesome framework developed by rovo89 which allows you to carry out mods to your device without changing any files (well except one &amp;ldquo;app_process&amp;rdquo; as part of the xposed installer).</description><content>&lt;p>Exchange Security Bypass Xposed Mode for Nexus 4/5/7 and other AOSP based devices (Android 4.3 / 4.4)&lt;/p>
&lt;p>&lt;strong>Update:&lt;/strong> This has now been tested to work successfully on all stock or nearly stock JellyBean (4.3) and KitKat (4.4) ROMs on Nexus 4 / Nexus 5 / Nexus 7. Other AOSP ROMs like CM11 should work as well.&lt;/p>
&lt;p>This mod should be used along with Xposed ( &lt;a href="http://forum.xda-developers.com/showthread.php?t=1574401">http://forum.xda-developers.com/showthread.php?t=1574401&lt;/a> ). Xposed is this awesome framework developed by rovo89 which allows you to carry out mods to your device without changing any files (well except one &amp;ldquo;app_process&amp;rdquo; as part of the xposed installer). Moreover, once you install xposed, you don&amp;rsquo;t need root after that for any mods.&lt;/p>
&lt;p>This mod will bypass the Email app from becoming device admin for your phone and prevent it from setting up any security restrictions on your device including pin/password/remote wipe, etc. There are a couple other such mods but they don&amp;rsquo;t work at all or don&amp;rsquo;t work for Nexus 4 and/or Android 4.3&lt;/p>
&lt;p>Instructions for users&lt;/p>
&lt;ul>
&lt;li>Remove your existing email account from phone and reboot&lt;/li>
&lt;li>Install Xposed installer (from link above)&lt;/li>
&lt;li>Install this mod (Download apk from &lt;a href="https://github.com/shantanugoel/ExchangeBypassXposed/blob/master/ExchangeBypassForXposed/ExchangeBypassForXposed.apk">here&lt;/a> )&lt;/li>
&lt;li>Enable the mod in xposed (Preferences for other devices/versions coming Soon)&lt;/li>
&lt;li>Reboot&lt;/li>
&lt;li>Add your email account again. This time, it will ask you that the email
might require security restrictions, say yes to it but it will never actually set the restrictions.&lt;/li>
&lt;li>Done. :)&lt;/li>
&lt;/ul>
&lt;p>Instructions for developers&lt;/p>
&lt;ul>
&lt;li>Read the xda link at the top of this readme and go through basics of xposed development&lt;/li>
&lt;li>Install xposed as an android sdk addon on your system&lt;/li>
&lt;li>Clone this git repo&lt;/li>
&lt;li>Import in Android Studio&lt;/li>
&lt;li>Make changes&lt;/li>
&lt;li>Build :)&lt;/li>
&lt;/ul>
&lt;p>Credits:&lt;/p>
&lt;ul>
&lt;li>rovo89 from xda (for creating xposed)&lt;/li>
&lt;li>mpcjanssen from xda (for original mod)&lt;/li>
&lt;/ul>
&lt;p>Source code is at &lt;a href="https://github.com/shantanugoel/ExchangeBypassXposed">https://github.com/shantanugoel/ExchangeBypassXposed&lt;/a>&lt;/p>
&lt;p>Feel free to send me your queries or suggestions here or at my twitter: &lt;a href="http://twitter.com/shantanugoel">http://twitter.com/shantanugoel&lt;/a>&lt;/p>
&lt;p>&lt;strong>Changelog&lt;/strong>:&lt;/p>
&lt;p>1.5 22-Dec-13
Allow updation of policy keys properly on Exchange server&amp;rsquo;s request otherwise sync may hang&lt;/p>
&lt;p>1.4 16-Dec-13
Fixing the fixes :)&lt;/p>
&lt;p>1.3 15-Dec-13
Fixed random email app crashes&lt;/p>
&lt;p>1.2 14-Dec-13
AOSP ROMs support. Removed some unnecessary logging.&lt;/p>
&lt;p>1.1 28-Nov-13
KitKat support. Tested on Nexus 4, Nexus 5, Nexus 7 2012, Nexus 7 2013&lt;/p>
&lt;p>1.0 14-Oct-13
Initial version. Working for Nexus 4 Android 4.3&lt;/p></content></item><item><title>Odroid U2 Tips: Overscan, emmc Adapter, HDMI-DVI Adapter</title><link>/2013/01/12/odroid-u2-tips-overscan-emmc-adapter-hdmi-dvi-adapter/</link><pubDate>Sat, 12 Jan 2013 17:56:52 +0000</pubDate><guid>/2013/01/12/odroid-u2-tips-overscan-emmc-adapter-hdmi-dvi-adapter/</guid><description>So I&amp;rsquo;ve been spending a few hours on getting my odroid u2 up and running and here are a few tips that I&amp;rsquo;ve come across in the process.
**Overscan:Â **
So, many TVs have this issue that they miss out on displaying the corners of the image put out by the Odroid U2. The phenomenon is called overscan. Now, all you have to do is select settings such as &amp;ldquo;Just Scan&amp;rdquo; or similar on your TV that allows your TV to display image coming from U2 as is.</description><content>&lt;p>So I&amp;rsquo;ve been spending a few hours on getting my odroid u2 up and running and here are a few tips that I&amp;rsquo;ve come across in the process.&lt;/p>
&lt;p>**Overscan:Â **&lt;/p>
&lt;p>So, many TVs have this issue that they miss out on displaying the corners of the image put out by the Odroid U2. The phenomenon is called overscan. Now, all you have to do is select settings such as &amp;ldquo;Just Scan&amp;rdquo; or similar on your TV that allows your TV to display image coming from U2 as is. This setting is called &amp;ldquo;Screen Fit&amp;rdquo; on Samsung TVs but I found something weird. My TV already had this setting set for the picture mode, but still I had the overscan issue. What I had to do was to switch to another mode and then back to Screen Fit and it started working fine.&lt;/p>
&lt;p>&lt;strong>emmc Adapter:&lt;/strong>&lt;/p>
&lt;p>The emmc adapter that hardkernel/odroid folks send out with the board to use with a microsd card reader doesn&amp;rsquo;t seem to work. However, the issue is that it is slightly bigger than a regular microsd and hence doesn&amp;rsquo;t fit properly inside the reader. All I had to do was to file the top edges a bit and then it worked fine.&lt;/p>
&lt;p>&lt;strong>HDMI-DVI Adapter:&lt;/strong>&lt;/p>
&lt;p>Currently I&amp;rsquo;ve attached it to my old Samsung B2030 monitor. A tip btw for B2030 owners (or anyone else having a monitor with only DVI input and not HDMI). Despite many folks (including hardkernel/odroid guys) saying that HDMI to DVI adapters are not supported and won&amp;rsquo;t work, they do work but the thing is that the monitor should be turned on before turning on the U2 otherwise U2 doesn&amp;rsquo;t output anything over the HDMI and the monitor won&amp;rsquo;t display anything.&lt;/p></content></item><item><title>Odroid U2 is here</title><link>/2013/01/12/odroid-u2-is-here/</link><pubDate>Sat, 12 Jan 2013 17:46:57 +0000</pubDate><guid>/2013/01/12/odroid-u2-is-here/</guid><description>So, this little baby landed up in my mailbox a couple of days ago :). The Odroid U2. For those who don&amp;rsquo;t know, it&amp;rsquo;s a cheap dev board based around Samsung&amp;rsquo;s Exynos 4412 SoC and supports Android as well as Ubuntu.
I&amp;rsquo;ve got quite a few things planned on how to use it and will post more about my adventures with the U2 here soon.</description><content>&lt;p>So, this little baby landed up in my mailbox a couple of days ago :). The Odroid U2. For those who don&amp;rsquo;t know, it&amp;rsquo;s a cheap dev board based around Samsung&amp;rsquo;s Exynos 4412 SoC and supports Android as well as Ubuntu.&lt;/p>
&lt;figure class="left" >
&lt;img src="/img/2013/01/2013-01-09-19.05.35-300x225.jpg" />
&lt;/figure>
&lt;p>I&amp;rsquo;ve got quite a few things planned on how to use it and will post more about my adventures with the U2 here soon.&lt;/p></content></item><item><title>Third Party Widgets on Android 4.2 Lock Screen</title><link>/2012/11/14/third-party-widgets-on-android-4-2-lock-screen/</link><pubDate>Wed, 14 Nov 2012 14:46:36 +0000</pubDate><guid>/2012/11/14/third-party-widgets-on-android-4-2-lock-screen/</guid><description>One of the features I was really looking forward to with Android 4.2 was lock screen widgets but when I got the update on my Galaxy Nexus that it only had 5 pre-defined stock widgets that could be added to the lock screen.
I headed over to the Android developers site some time later and was pleasantly surprised to see that actually 3rd party widgets can indeed be added to the lock screen.</description><content>&lt;p>One of the features I was really looking forward to with Android 4.2 was lock screen widgets but when I got the update on my Galaxy Nexus that it only had 5 pre-defined stock widgets that could be added to the lock screen.&lt;/p>
&lt;p>I headed over to the Android developers site some time later and was pleasantly surprised to see that actually 3rd party widgets can indeed be added to the lock screen. They just need a small change for this. They need to add &amp;ldquo;android:widgetCategory=&amp;ldquo;keyguard|home_screen&amp;rdquo;&amp;rdquo; parameter to your xml where the appwidget provider element is defined. Simple enough :)&lt;/p>
&lt;p>If you are the one who doesn&amp;rsquo;t like to wait, you could even change your favorite app&amp;rsquo;s manifest to allow the widget to be added. There are a few more details if you&amp;rsquo;d like to get into the nitty gritty which can be read from over here:Â &lt;a href="http://developer.android.com/guide/topics/appwidgets/index.html">http://developer.android.com/guide/topics/appwidgets/index.html&lt;/a>&lt;/p></content></item><item><title>My Tasker Night Mode Profile For Android</title><link>/2012/10/17/my-tasker-night-mode-profile-for-android/</link><pubDate>Wed, 17 Oct 2012 09:03:08 +0000</pubDate><guid>/2012/10/17/my-tasker-night-mode-profile-for-android/</guid><description>If there are two things that irritate me the most when I go to sleep, they are: Sync notifications going off and battery drained off in the morning (worst case being drained off before alarm time, making me late for work). I used to have a simple profile that turned off auto sync between 11 PM to 7 AM but it didn&amp;rsquo;t always work well because I work past 11 quite a lot and don&amp;rsquo;t usually have a fixed sleep time.</description><content>&lt;p>If there are two things that irritate me the most when I go to sleep, they are: Sync notifications going off and battery drained off in the morning (worst case being drained off before alarm time, making me late for work). I used to have a simple profile that turned off auto sync between 11 PM to 7 AM but it didn&amp;rsquo;t always work well because I work past 11 quite a lot and don&amp;rsquo;t usually have a fixed sleep time. Similarly I get up at different times. Sometimes I&amp;rsquo;m not even home and still the profile runs, making me lose sync.&lt;/p>
&lt;p>(For the impatient, if you want to use it, I&amp;rsquo;ve uploaded my profiles toÂ &lt;a href="https://github.com/shantanugoel/tasker">my github account&lt;/a>.)&lt;/p>
&lt;p>So, I set up and quick and simple but much better working night mode profile. It consists 3 different profiles actually as listed below:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Night Mode -&amp;gt; This actually turns on the night mode based on a host of different combinations listed later in the post.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Alarm Detection -&amp;gt; Detects when the alarm goes off&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Unlock Detection -&amp;gt; Detects when the phone display is unlocked.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Home Detection -&amp;gt; Detects if I&amp;rsquo;m at home&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>The basic premise behind this night mode setup is:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>The phone should detect that I&amp;rsquo;m sleeping by taking a combination of following scenarios:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>The location should be at home (Done by home detection profile using &amp;ldquo;Cell Near&amp;rdquo;. I use this mostly because it is more accurate than network location and works indoors as well which GPS doesn&amp;rsquo;t do and is very light on battery as well)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Time should be between 11 PM to 7 AM (my likely sleep time)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Display should not have been unlocked in the last 30 minutes (i.e. make sure I&amp;rsquo;m not actively using the phone)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It&amp;rsquo;s dark in the room (Make sure that lights are turned off. Need to turn on ambient light sensor to work with screen off in tasker settings for this)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Once all the above conditions are established, my phone is fairly certain by now that I&amp;rsquo;m indeed sleeping :) and turns off auto sync&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The night mode still has to check whether the conditions still exist after every half hour or so (e.g. I might not be sleeping yet but lights turned off to allow my wife to sleep and I didn&amp;rsquo;t fiddle with the phone for some time)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If I unlock the phone any time at night, it should tell my phone immediately that I&amp;rsquo;m not sleeping and it deactivates the night mode (for the next 30 minutes or so when night mode check kicks in again)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>When the alarm goes off, night mode should be stopped since I&amp;rsquo;m obviously awake now&lt;/p>
&lt;/li>
&lt;li>
&lt;p>There are quite a few other checks and balances incorporated to make sure all these 4 profiles don&amp;rsquo;t go out of sync and also do as less as possible to preserve battery.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Tested this setup for past few weeks and it works pretty well. If you want to use it, I&amp;rsquo;ve uploaded my profiles to &lt;a href="https://github.com/shantanugoel/tasker">my github account&lt;/a>.&lt;/p>
&lt;p>Improvements/Changes:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Exchange sync still bypasses the auto sync turn off settings. So need to either buy &amp;ldquo;Synker&amp;rdquo; to control exchange sync directly or figure out a way to connect droidwall to tasker to cut the internet connection for exchange app.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The home mode xml in the account does not have anything in cell tower locations ;), so you need to open it in tasker and scan for your own cell towers&lt;/p>
&lt;/li>
&lt;li>
&lt;p>I just turn off auto sync for me in night mode (want to receive sounds for other notifications, texts etc), you can edit the profile to suit your other needs&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You can change the timings as well as per your needs&lt;/p>
&lt;/li>
&lt;li>
&lt;p>I have some prints done to a file in these profiles, mainly for debugging. You can remove those once you are certain the setup works well for you.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Let me know if you can think of any other ways to make this more robust. I&amp;rsquo;ll post the rest of my tasker profiles as well soon.&lt;/p>
&lt;/li>
&lt;/ul></content></item><item><title>BogusApple.com: Apple Screw Up Saved By Githubber</title><link>/2012/10/01/bogusapple-com-apple-screw-up-saved-by-githubber/</link><pubDate>Mon, 01 Oct 2012 22:16:18 +0000</pubDate><guid>/2012/10/01/bogusapple-com-apple-screw-up-saved-by-githubber/</guid><description>So, I just came across a thread on apple discussion forums and itÂ seems like that Apple has added a new feature in OS X Mountain Lion due to which it redirects a lot of web traffic to a domain called &amp;ldquo;bogusapple.com&amp;rdquo; to make sure that it is failing. Now, the problem is that Apple didn&amp;rsquo;t even register this domain. By design? To make sure that it fails? But if so, it was a very poor design decision because then anyone could have registered it and used it for benefit, like spreading malware or phishing attempts and what not.</description><content>&lt;p>So, I just came across a thread on apple discussion forums and itÂ &lt;a href="https://discussions.apple.com/thread/4380270?start=0&amp;amp;tstart=0">seems like&lt;/a> that Apple has added a new feature in OS X Mountain Lion due to which it redirects a lot of web traffic to a domain called &amp;ldquo;bogusapple.com&amp;rdquo; to make sure that it is failing. Now, the problem is that Apple didn&amp;rsquo;t even register this domain. By design? To make sure that it fails? But if so, it was a very poor design decision because then anyone could have registered it and used it for benefit, like spreading malware or phishing attempts and what not.&lt;/p>
&lt;p>Anyways, the threat is averted for now because a good natured githubber, &lt;a href="https://github.com/blog/1099-jason-salaz-is-a-githubber">Jason Salaz&lt;/a>, registered the domain name and plastered a pretty generic webpage over there which doesn&amp;rsquo;t do much (except give him a bit of web traffic boost).&lt;/p>
&lt;p>After the map fiasco and then this, it looks like Apple is indeed slipping up and things are falling through the cracks. Let&amp;rsquo;s see what Tim Cook has to say about this.&lt;/p></content></item><item><title>My Android NFC Car BT Audio Setup</title><link>/2012/09/30/my-android-nfc-car-bt-audio-setup/</link><pubDate>Sun, 30 Sep 2012 18:16:22 +0000</pubDate><guid>/2012/09/30/my-android-nfc-car-bt-audio-setup/</guid><description>So, my Nexus One&amp;rsquo;s battery finally lost its last legs and I picked up a new Galaxy Nexus to replace it (easy choice, since it&amp;rsquo;s a nexus device and Google sells it for a bargain at their play store). Anyways, I drift. In the mood to try out the NFC capbilities of my newly acquired gadget I thought of doing something about my car audio setup (previously consisting of a stereo line connecting the aux port of the stereo to the headphone out of Nexus one using tasker to start music when connected).</description><content>&lt;p>So, my Nexus One&amp;rsquo;s battery finally lost its last legs and I picked up a new Galaxy Nexus to replace it (easy choice, since it&amp;rsquo;s a nexus device and Google sells it for a bargain at their play store). Anyways, I drift. In the mood to try out the NFC capbilities of my newly acquired gadget I thought of doing something about my car audio setup (previously consisting of a stereo line connecting the aux port of the stereo to the headphone out of Nexus one using tasker to start music when connected).&lt;/p>
&lt;p>Before I go into how I went about it, here is what it does now. When I keep the phone into my car&amp;rsquo;s phone holder, it automatically starts streaming music over BT from my car stereo and then when I keep it in my pocket, it stops.&lt;/p>
&lt;p>Ingredients I used:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>1 Galaxy Nexus&lt;/p>
&lt;/li>
&lt;li>
&lt;p>2 NFC tags (bought from tagstand guys. Makers of the awesome NFC Tasker Launcher app)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>1 male to male stereo cable&lt;/p>
&lt;/li>
&lt;li>
&lt;p>1 Samsung HS3000 BT headset (since my car stereo doesn&amp;rsquo;t have BT. This little headset is awesome because it is cheap (25$ or so at amazon), has a stereo port where you can connect any headset or stereo cable, implements apt-x protocol for high fidelity audio streaming)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Android App: NFC Task Launcher&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Android App: Tasker (NFC task launcher is enough for basic things but my task is a bit more involved)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Android App: Secure Settings plugin for Tasker/Locale&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>So, what I did is this:&lt;/p>
&lt;p>&lt;strong>Hardware&lt;/strong>:&lt;/p>
&lt;p>Pasted one NFC tag to my car phone holder and kept another one in my wallet.&lt;/p>
&lt;p>Connected the HS3000 headset to the car stereo through aux-in and to power through a car charger (it uses a standard micro usb port to charge).&lt;/p>
&lt;p>Stuck the HS3000 near my dashboard. I could have hidden it in dashboard or somewhere but I also wanted to use it to take calls when they come in so I can use its mic for speaking and incoming audio sounds through the car speakers. You can also disconnect the internal battery by popping up the casing so that it turns on and off with the car but it isn&amp;rsquo;t necessary as it anyways turns off if there is no device connected for a while.&lt;/p>
&lt;p>&lt;strong>Software&lt;/strong>:&lt;/p>
&lt;p>Created two tasks in Tasker. First as &amp;ldquo;Car Mode Enter&amp;rdquo; and second as &amp;ldquo;Car Mode Exit&amp;rdquo;. The car mode enter task basically does this:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>If car mode is not already running (based on a variable)&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Turn on Bluetooth (This also auto connects)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Crank up the Media Volume&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If Battery level is above 40%&lt;/p>
&lt;ul>
&lt;li>Keep the screen always on (using Secure Settings)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Else keep the screen on if power is connected (through car charger)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Crank up the brightness if it is day time (so that I can see the screen) and store the old value for restoring later.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If navigation is not on (through another variable set through another profile which monitors if a navigation or maps app is in foreground)&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Load the Music app&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Start playing music&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Turn on the Read SMS profile cuz I&amp;rsquo;m a safe driver :) (Another profile in tasker which reads the incoming SMS&amp;rsquo; sender&amp;rsquo;s name and asks if it should read the text (don&amp;rsquo;t want anyÂ embarrassing ones read out while others are there in my car ;)) and then proceeds to read the text if I speak &amp;ldquo;Yes&amp;rdquo;. For anything else or no input, it doesn&amp;rsquo;t read the text)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>The car mode exit task undoes everything done in the car mode enter task and restores everything to how it was before entering the car mode.&lt;/p>
&lt;p>Also created two tasks in NFC task launcher which just launch the car mode enter and exit tasks when tapped against 1 of the tags and wrote this task to the tags.&lt;/p>
&lt;p>&lt;strong>All together now:&lt;/strong>&lt;/p>
&lt;p>So, we are done now. Now when I enter my car, I place the phone on the holder and nice music starts playing. When I get out, I tap it against my pocket (with the wallet) and everything is back at normal.&lt;/p>
&lt;p>Let me know if you need any more information about the above setup or the tasker profile xml files. I use tasker for automating a whole other bunch of things as well. Will try to post that stuff soon along with any other NFC tricks I try out.&lt;/p></content></item><item><title>SGX 543MP2 vs Mali-400: Is iPhone 4S GPU Really Twice As Strong As SGS 2?</title><link>/2011/10/05/sgx-543mp2-vs-mali-400-is-iphone-4s-gpu-really-twice-as-strong-as-sgs-2/</link><pubDate>Wed, 05 Oct 2011 20:23:23 +0000</pubDate><guid>/2011/10/05/sgx-543mp2-vs-mali-400-is-iphone-4s-gpu-really-twice-as-strong-as-sgs-2/</guid><description>Ever since Apple announced the iPhone 4S having &amp;ldquo;A5&amp;rdquo; processor, everyone has been pointing to the below image from a test run by Anandtech and saying that the iPhone 4S will be twice as strong as the Samsung Galaxy S2. I beg to differ.
While the above test doesn&amp;rsquo;t have any discrepancy, one major thing is that the SGX 543MP2 results are from an iPad 2 (a tablet) while the Mali 400 results are from a smartphone.</description><content>&lt;p>Ever since Apple announced the iPhone 4S having &amp;ldquo;A5&amp;rdquo; processor, everyone has been pointing to the below image from a test run by Anandtech and saying that the iPhone 4S will be twice as strong as the Samsung Galaxy S2. I beg to differ.&lt;/p>
&lt;figure class="left" >
&lt;img src="/img/2011/10/anandtech-gpu-comparison-sgx543mp2-mali400-300x238.png" />
&lt;/figure>
&lt;p>While the above test doesn&amp;rsquo;t have any discrepancy, one major thing is that the SGX 543MP2 results are from an iPad 2 (a tablet) while the Mali 400 results are from a smartphone. Thus, we can&amp;rsquo;t readily take this to directly and accurately predict the comparison results for iPhone 4S because there are other things to consider:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Mali-400 lags behing SGX543MP2 in &amp;ldquo;offscreen&amp;rdquo; tests which are done for resolutions greater than native SGS2 resolution (SGS 2 resolution is 800x480 while test is done at 720p) and brute triangle pushing. Samsung didn&amp;rsquo;t have to optimize their GPU implementation for this because SGS2 was never going to run a game at 720p resolution and would also need to push lesser triangles for similar detail. Hence they could easily make this trade-off to get lesser power consumption and heat generation&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Mali-400 goes hand in hand with SGX543MP2 in all other tests as seen on glbenchmark.com&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It is naive to think that the same SGX543MP2 implementation as iPad 2 will be present in iPhone 4S. Even if iPhone 4S is slated to have &amp;ldquo;A5&amp;rdquo;, a lot depends on the actual clock speeds (CPU and GPU), graphics memory, etc. Apple will do similar trade offs like Samsung (and Apple has already done this with A4 in iPad 1 vs iPhone 4) and the real results would be available only then.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>So, the end result is that we will have the real comparison only when iPhone 4S is out.&lt;/p>
&lt;p>PS: Not that the results matter anyways :P since firstly, the comparisons should now be moving to upcoming Nexus Prime and not SGS2 and secondly, the raw power of these GPUs won&amp;rsquo;t determine much since they cater to two completely different OSs and would have a lot of software and ecosystem dependencies on the user-perceived outcome.&lt;/p></content></item><item><title>Deconstructing The Samsung Nexus Prime Video</title><link>/2011/10/05/deconstructing-the-samsung-nexus-prime-video/</link><pubDate>Wed, 05 Oct 2011 05:59:28 +0000</pubDate><guid>/2011/10/05/deconstructing-the-samsung-nexus-prime-video/</guid><description>Samsung just uploaded a teaser video to Youtube which hints at the upcoming Android phone Nexus Prime with IceCream Sandwich. It has a sideways glance at what people believe is the Nexus Prime. I&amp;rsquo;ll deconstruct the image a bit.
The things to take away from here:
The phone will have a curved display like Nexus S
It has a power button on the side (right side, since it&amp;rsquo;s marked with the power icon)</description><content>&lt;p>Samsung just uploaded a &lt;a href="http://www.youtube.com/watch?v=oM9RO-GAKjE">teaser video&lt;/a> to Youtube which hints at the upcoming Android phone &lt;strong>Nexus Prime&lt;/strong> with IceCream Sandwich. It has a sideways glance at what people believe is the Nexus Prime. I&amp;rsquo;ll deconstruct the image a bit.&lt;/p>
&lt;figure class="left" >
&lt;img src="/img/2011/10/samsung-nexus-prime-leak-1-300x158.jpg" />
&lt;/figure>
&lt;figure class="left" >
&lt;img src="/img/2011/10/samsung-nexus-prime-leak-2-300x158.jpg" />
&lt;/figure>
&lt;p>The things to take away from here:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>The phone will have a curved display like Nexus S&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It has a power button on the side (right side, since it&amp;rsquo;s marked with the power icon)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>The interesting thing however is the 3 dots on the left side&lt;/strong>. People claim that it could be related to camera or volume controls or even speaker grills. But I think that they are for dock connection. Anyone who has owned a Nexus One has seen the same 3 gold dots on the bottom used for dock connection. I believe that on Nexus Prime they have been moved to the side mainly because Prime has (or is supposed to have) a 16:9 screen and hence the optimal placement in a dock would be horizontal and hence the sideways placement.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Let me know what you think :)&lt;/p></content></item><item><title>Swype 3.25 Beta Pre-release Parse Error Solution</title><link>/2011/08/23/swype-3-25-beta-pre-release-parse-error-solution/</link><pubDate>Tue, 23 Aug 2011 18:07:44 +0000</pubDate><guid>/2011/08/23/swype-3-25-beta-pre-release-parse-error-solution/</guid><description>Swype just released their latest beta version 3.25 for Android phones but most of the folks are facing a &amp;ldquo;parse error&amp;rdquo; while trying to update to the latest version. If you are one of such folks, there is a simple solution that I just tried and got working. Instead of updating from the swype installer, you need to update manually. Uninstall your existing swype, then uninstall the existing swype installer on your phone.</description><content>&lt;p>Swype just released their latest beta version 3.25 for Android phones but most of the folks are facing a &amp;ldquo;parse error&amp;rdquo; while trying to update to the latest version. If you are one of such folks, there is a simple solution that I just tried and got working. Instead of updating from the swype installer, you need to update manually. Uninstall your existing swype, then uninstall the existing swype installer on your phone. Then head over to &lt;a href="http://beta.swype.com/android/get">http://beta.swype.com/android/get&lt;/a> (from your android phone) and download and install the new swype installer again. Then open the new swype installer and use it to update to the latest version. Done :). And I must say the new version is pretty spiffy :)&lt;/p></content></item><item><title>Huawei Ideos U8150 Review</title><link>/2011/06/05/huawei-ideos-u8150-review/</link><pubDate>Sun, 05 Jun 2011 15:52:19 +0000</pubDate><guid>/2011/06/05/huawei-ideos-u8150-review/</guid><description>Recently I received Huawei Ideos U8150 phone for review. This is an Android smartphone meant for the entry level market. I had the phone for a few weeks to put it through its paces and here are some of my thoughts about it. I am not going to expand a lot on the general Android points as we all know about it but will concentrate succinctly and to-the-point on the aspects which can make it or break it for this phone against its competition in the similar price ranges.</description><content>&lt;p>Recently I received Huawei Ideos U8150 phone for review. This is an Android smartphone meant for the entry level market. I had the phone for a few weeks to put it through its paces and here are some of my thoughts about it. I am not going to expand a lot on the general Android points as we all know about it but will concentrate succinctly and to-the-point on the aspects which can make it or break it for this phone against its competition in the similar price ranges.&lt;/p>
&lt;figure class="left" >
&lt;img src="/img/uploads/huawei-ideos.gif" />
&lt;/figure>
&lt;p>**Display: ** The display is average and pretty much on par with the other handsets in this range. It&amp;rsquo;s a low resolution QVGA (320x240) screen. While it&amp;rsquo;s usable but not a brilliant one and would give a sublime web browsing experience. The brightness of the display was average as well, nothing to write home about but not below the competition either.&lt;/p>
&lt;p>**Touchscreen: ** A good thing about this handset is that it has a capacitive touchscreen. A few entry level phones skimp out on this and put a resistive touchscreen but not so with Ideos. The screen response is pretty good.&lt;/p>
&lt;p>**Android Version: ** Ideos sports Android 2.2 Froyo which is again a good thing since this is the latest I have seen in any entry/mid-level and most high end phones as well. Gingerbread is still too new and I&amp;rsquo;m happy enough with Froyo. A lot of other phones are still stuck on Eclair 2.1.&lt;/p>
&lt;p>**Camera: ** The camera is ok&amp;rsquo;ish with its 3.2 MP sensor and no LED flash. It works well for well lit subjects but is useless in dark. The quality of photos taken is average as well. Nothing extremely bad but nothing very good as well, just good enough for capturing spontaneous moments when you are not carrying your proper standalone camera with you.&lt;/p>
&lt;p>**Connectivity: ** Ideos has 802.11n wi-fi and 7.2mbps HSDPA 3G for connectivity. wi-fi connected to my router in a snap and it also has hotspot (or wireless tethering) capability for upto 8 devices. 3G connectivity was ok. Speedtest results came out to be similar to my Nexus one over both wi-fi as well as 3G.&lt;/p>
&lt;p>**Built: ** Ideos is built sturdily but looks a bit tacky with its shiny back. But then again, it&amp;rsquo;s hard to find a good looking phone in entry level smartphones which performs according to it&amp;rsquo;s looks as well. I didn&amp;rsquo;t try any drop tests on it but I&amp;rsquo;d fathom it&amp;rsquo;d easily survive any short falls. The phone is also pretty light and small, easy to pocket.&lt;/p>
&lt;p>**Performance: ** Ideos has a Qualcomm MSM7227 processor, rated at a clock speed of 528 MHz. This processor is fairly standard in almost all the entry level devices and is good enough for daily usage and most of the apps. But most games would struggle on it. If you are buying this (or any other entry level smartphone) with the correct expectations of it performing according to it&amp;rsquo;s price range, you shouldn&amp;rsquo;t be disappointed.&lt;/p>
&lt;p>**Web Browsing: ** Web browsing is mediocre on Ideos because of it&amp;rsquo;s low resolution screen, low specc&amp;rsquo;ed processor (which also results in lack of Adobe Flash). If you plan on using the browser for your web needs, don&amp;rsquo;t bet on opening any javascript heavy pages quickly and should look mostly to fill the void by using specific apps for the services you are trying to access.&lt;/p>
&lt;p>**Battery: ** The phone is good on the battery and it was able to last around 1.5-2 days on a single charge for medium usage even though it houses just a 1200 mAh. This is on-par, if not better, than most other phones in this range.&lt;/p>
&lt;p>**GPS: ** The GPS was quick to get a fix and retained it to a good accuracy almost same as my Nexus one. Using Google maps on this phone was a breeze.&lt;/p>
&lt;p>**Other Notes: ** The phone bundles a free 2GB microSD card and also stereo headphones. The headphones are average at best like most other phones and you should really pair it with a cheap set of Creative IEMs that will give you a much better output while staying on a budget.&lt;/p>
&lt;p>**Conclusion: ** While the phone is not a powerhouse in itself, I&amp;rsquo;d rate it pretty good in it&amp;rsquo;s price segment. If I had to buy an Android smartphone on a budget around 8000 INR, it&amp;rsquo;d be a toss up between this and the Samsung Galaxy Pop S5570. So, this is a +1 recommendation from me for this phone.&lt;/p></content></item><item><title>Google Music Beta Latest APK version 3.0.1 for Android</title><link>/2011/05/27/google-music-latest-apk-android-3-0-1/</link><pubDate>Fri, 27 May 2011 03:57:10 +0000</pubDate><guid>/2011/05/27/google-music-latest-apk-android-3-0-1/</guid><description>Google just released the latest version of its Music app that ties into its cloud player service Music Beta. This brings the version upto 3.0.1 and adds a lot of fixes, crashes a lot less and now even works on Samsung Galaxy S with Gingerbread which was broken earlier. If you are outside the US and not able to download the app from the market, then download it from here:http://www.multiupload.com/KIM5LQDL0K</description><content>&lt;p>Google just released the latest version of its Music app Â that ties into its cloud player service Music Beta. This brings the version upto 3.0.1 and adds a lot of fixes, crashes a lot less and now even works on Samsung Galaxy S with Gingerbread which was broken earlier. If you are outside the US and not able to download the app from the market, then download it from here:&lt;a href="http://www.multiupload.com/KIM5LQDL0K">http://www.multiupload.com/KIM5LQDL0K&lt;/a>&lt;/p>
&lt;p>I just tried it on my Nexus One with Stock Gingerbread (2.3.4) and it works awesome. Picked up my music from the Google account immediately and even recognizes the third party equalizers like MusicFx&amp;hellip;&lt;/p>
&lt;p>Don&amp;rsquo;t forget to say Thanks ;)&lt;/p></content></item><item><title>iWebLeaf - India's $35 Android Tablet Spawning Fake Innovators?</title><link>/2011/04/06/iwebleaf-indias-35-android-tablet-spawning-fake-innovators/</link><pubDate>Wed, 06 Apr 2011 18:04:44 +0000</pubDate><guid>/2011/04/06/iwebleaf-indias-35-android-tablet-spawning-fake-innovators/</guid><description>It was just about an year ago that we heard about the $35 Android Tablet from India which would revolutionize the education in developing countries. Mr. Kapil Sibal promoted it with utmost fervor until it was found that the BoM itself of the tablet was more than $50 and none of the guys claimed to have &amp;ldquo;invented&amp;rdquo; it even knew about its existence until a few days before the announcement. Ultimately, it was discovered that the tablet was just a rebranded chinese import which the government wanted to bring down to $35 price point by subsidizing the cost and not by somehow inventing cheaper parts.</description><content>&lt;p>It was just about an year ago that we heard about the $35 Android Tablet from India which would revolutionize the education in developing countries. Mr. Kapil Sibal promoted it with utmost fervor until it was found that the BoM itself of the tablet was more than $50 and none of the guys claimed to have &amp;ldquo;invented&amp;rdquo; it even knew about its existence until a few days before the announcement. Ultimately, it was &lt;a href="http://androidos.in/2010/09/the-truth-about-35-android-tablet-from-indian-government/">discovered&lt;/a> that the tablet was just a rebranded chinese import which the government wanted to bring down to $35 price point by subsidizing the cost and not by somehow inventing cheaper parts. What more proof can we get about it&amp;rsquo;s non existence that it hasn&amp;rsquo;t materialized after so much of time and even the company that was supposed to be making it according to the government (HCL) has said that it has nothing to do with it.&lt;/p>
&lt;p>That was that but it seems like the episode has given a brilliant idea to a few others as well. Import cheap/sub-standard products from China, rebrand them, ask government for subsidy and claim to have &amp;ldquo;invented&amp;rdquo; a revolutionary low cost computing device. &lt;strong>iWebLeaf&lt;/strong> is a case in point. I came across them through a couple of articles where this little company formed by a couple of engineering students has invented two ultra low cost products: A &lt;a href="http://telecomtalk.info/iwebleaf-comes-with-cheapest-3g-data-card-at-rs1300/50814/">3G data card for 1300 INR&lt;/a> (~ $30) and a &lt;a href="http://telecomtalk.info/iwebleaf-refused-funding-to-launch-low-cost-laptop-data-card/60941/">Laptop for 5000 INR&lt;/a> (~ $110).Â I was pleasantly surprised and my initial reaction was to applaud the effort. Then I noticed that these products, although announced for quite some time and having gotten a LOT of mainstream media coverage on almost every news channel, have not come to the market yet. The reasons for the 3G card are unknown but the laptop was said to have been dropped because of lack of Government support (read &amp;ldquo;subsidy&amp;rdquo;).&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>&lt;strong>Disclaimer: Before you read any further, please note that I&amp;rsquo;m an Indian myself and stay in India only (i.e., not a condescending NRI). I am a developer myself and love innovating and innovators and have the greatest respect for all that our country has given to the world. This piece is a rant against only those few individuals who make the rest of the India look bad by claiming authority over fake innovations.&lt;/strong>&lt;/p>
&lt;p>Being a part of the semiconductor industry for quite some time, I was curious to find out how they achieved this feat which no one else including big name companies have been able to do even after years of research (XO-PC). I looked at the purported specs of the laptop and it struck me that yet again, the BoM itself was much more than 5000 INR. When I raised some questions about this, the &amp;ldquo;innovators&amp;rdquo; replied that they are saving all this money because they &amp;ldquo;developed their own processor DXA16&amp;rdquo; which is equivalent to a 1.6GHz Intel Atom. What again raised even more doubts in mind was that they said their processor didn&amp;rsquo;t have anything to do with Intel and they didn&amp;rsquo;t even have to take an X86 license even though they claim windows support for the laptop, which means that their processor MUST be x86 compatible. Secondly, they mentioned that they have got jobs in TCS and CTS and won&amp;rsquo;t continue further. I&amp;rsquo;m completely flummoxed why an under-graduate student who has designed his own commercially viable micro processor in a college lab during a period when other students struggle to just write 10 line assembly programs, would go and join a mass-recruiting services company. If I was him, any company from Intel to TI to Qualcomm to ARM would be ready to hire me for any salary that I demanded. On top of this, they gave weird reasons to drop it that they want to do it only for Orissa and no other state, etc.&lt;/p>
&lt;p>It was also mind-blowing that they made such great inventions but &lt;a href="http://www.iwebleaf.com/">their own website&lt;/a> doesn&amp;rsquo;t have even a single word about these. All they have there is the run of the mill Web-Hosting, SEO, site design, blah blah.&lt;/p>
&lt;p>Anyways, another person on the same forum where I raised the doubts uncovered an ugly truth. Their data card is nothing but a rebranded chinese card. See this link: &lt;a href="http://www.dealextreme.com/p/7-2mbps-hsdpa-3g-usb-2-0-wireless-modem-adapter-with-tf-card-slot-white-50297">Cheap 3G Data Card&lt;/a>.&lt;/p>
&lt;p>Points to note:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>This card has the exact same specs including speeds, features (e.g. same RAM, ROM amounts, sd card etc)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It costs around $35 for a single piece including shipping. So, for bulk purchase, you can easily get it much cheaper and sell it around the $30 price.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It looks exactly the same Â with just an iWebLeaf logo slapped over the version sold by these innovators.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Pics:&lt;/p>
&lt;p>&lt;strong>iWebLeaf Data Card:&lt;/strong>&lt;/p>
&lt;p>&lt;a href="http://tech.shantanugoel.com/uploads/iwebleaf-data-card-1.jpg">&lt;img src="http://tech.shantanugoel.com/uploads/iwebleaf-data-card-1-thumb.jpg" alt="">&lt;/a> &lt;img src="http://tech.shantanugoel.com/uploads/iwebleaf-data-card-2.png" alt="">&lt;/p>
&lt;p>&lt;strong>Chinese Data Card:&lt;/strong>&lt;/p>
&lt;p>&lt;a href="http://tech.shantanugoel.com/uploads/chinese-data-card-1.jpg">&lt;img src="http://tech.shantanugoel.com/uploads/chinese-data-card-1-thumb.jpg" alt="">&lt;/a> &lt;a href="http://tech.shantanugoel.com/uploads/chinese-data-card-2.jpg">&lt;img src="http://tech.shantanugoel.com/uploads/chinese-data-card-2-thumb.jpg" alt="">&lt;/a>&lt;/p>
&lt;p>**Note: **You can also see this video of &lt;a href="http://www.youtube.com/watch?v=wnEhrn1GwiM">iWebLeaf Data Card&lt;/a> and compare it against the rest of the pics on &lt;a href="http://www.dealextreme.com/p/7-2mbps-hsdpa-3g-usb-2-0-wireless-modem-adapter-with-tf-card-slot-white-50297">Deal Extreme site for the chinese card&lt;/a>.&lt;/p>
&lt;p>&lt;strong>Laptop:&lt;/strong> I was even more skeptical about their laptop now. And I was flabbergasted with surprise when I found out that all it took me was around 2 minutes of search for &amp;ldquo;cheap chinese laptop&amp;rdquo; on china trader sites like alibaba/traderkey etc and I stumbled onto a company called Enzo-Tech. If I could do this in 2 minutes, couldn&amp;rsquo;t the rest of the mainstream media folks do a little bit of fact check with their vast resources? They &lt;a href="http://www.alibaba.com/product-gs/371893567/cheap_10_2_inch_mini_laptop.html">produce&lt;/a> a &lt;a href="http://enzo-tech.com/Product.aspx?id=28">10&amp;quot; Mini Laptop&lt;/a> which, just like the data card:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Has the exact same specs as the iWebLeaf laptop (except that they list Atom as the processor instead of DXA16, which is a farce anyways)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Looks exactly the same with just iWebLeaf stickers pasted all over. (Pics below)&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>The only concern here is that even this laptop is not available for the low price that iWebLeaf mentioned. This laptop sells for around $200 in small quantities. If bought for very large quantities (e.g. in thousands or 10s of thousands by a government), the price would come down radically and with a little bit more of subsidy, it can achieve the price that iWebLeaf mentioned. But it would still be &amp;ldquo;cost price&amp;rdquo;. Sale price to end users will have to be much higher due to customs, logistics, handling, shipping, etc even if they were to sell it on a no-profit basis.&lt;/p>
&lt;p>&lt;strong>iWebLeaf Laptop:&lt;/strong>&lt;/p>
&lt;p>&lt;a href="http://tech.shantanugoel.com/uploads/iwebleaf-laptop-1.jpg">&lt;img src="http://tech.shantanugoel.com/uploads/iwebleaf-laptop-1-thumb.jpg" alt="">&lt;/a> &lt;img src="http://tech.shantanugoel.com/uploads/iwebleaf-laptop-2.png" alt=""> &lt;img src="http://tech.shantanugoel.com/uploads/iwebleaf-laptop-3.png" alt="">&lt;/p>
&lt;p>&lt;strong>Enzo-Tech Laptop:&lt;/strong>&lt;/p>
&lt;p>&lt;a href="http://tech.shantanugoel.com/uploads/enzo-tech-laptop-1.jpg">&lt;img src="http://tech.shantanugoel.com/uploads/enzo-tech-laptop-1-thumb.jpg" alt="">&lt;/a> &lt;a href="http://tech.shantanugoel.com/uploads/enzo-tech-laptop-2.jpg">&lt;img src="http://tech.shantanugoel.com/uploads/enzo-tech-laptop-2-thumb.jpg" alt="">&lt;/a>&lt;/p>
&lt;p>**Note: **You can also see this&lt;a href="http://www.youtube.com/watch?v=8gj6pwQKIZc"> video of iWebLeaf Laptop&lt;/a> and compare it against the pics/specs on &lt;a href="http://enzo-tech.com/Product.aspx?id=28">Enzo-Tech&amp;rsquo;s website&lt;/a> and see that it is the same.&lt;/p>
&lt;p>What to make of it? I don&amp;rsquo;t have anything against these guys as entrepreneurs. They have every right to import, rebrand and resell products. A huge number of people and companies do this. What I take offense to, however, is to claim that they invented these things which isn&amp;rsquo;t true and then blame the Government for not allowing them to prosper by not spending the tax money I pay for their benefits. Moreover, this not only shames other &amp;ldquo;True&amp;rdquo; Indian innovators when these fakes are discovered but also sets wrong examples for our budding engineers to choose the shortest path possible to get 15 minutes of fame and then a job instead of really doing something to make the nation proud. I&amp;rsquo;m also yet again dis-illusioned by our mainstream media who will report anything and everything under the sun just to get more eyeballs and TRP without doing any sort of fact-checks. Yes, YOU SO CALLED TECH JOURNALISTS, I am calling you out.&lt;/p>
&lt;p>&lt;strong>In the end, I will make my offer to iWebLeaf guys again as I made to them elsewhere. Prove me wrong and I&amp;rsquo;ll myself heap praises upon you and your products through my blog and all other publications that I influence. Also, I will make sure to hire you in my company with at least 5 times the salary that you are getting in TCS/CTS.&lt;/strong>&lt;/p></content></item><item><title>Google to abandon Android. Spin off separate company</title><link>/2011/04/01/google-to-abandon-android-spin-off-separate-company/</link><pubDate>Fri, 01 Apr 2011 07:03:06 +0000</pubDate><guid>/2011/04/01/google-to-abandon-android-spin-off-separate-company/</guid><description>Now, this is mind blowing. I&amp;rsquo;ve just talked to a pretty reliable source within the Android ranks of Google that Google is going to distance itself legally from Android and spin it off in a separate company. The source said that the move can happen very soon and may be announced at Google I/O conference in May. Although details are sketchy and only very few high profile folks know about it within Google, my source says that the probable reason is increasing worries about legal aspects of Android with respect to Patents and IP law suits.</description><content>&lt;p>Now, this is mind blowing. I&amp;rsquo;ve just talked to a pretty reliable source within the Android ranks of Google that Google is going to distance itself &lt;strong>legally&lt;/strong> from Android and spin it off in a separate company. The source said that the move can happen very soon and may be announced at Google I/O conference in May. Although details are sketchy and only very few high profile folks know about it within Google, my source says that the probable reason is increasing worries about legal aspects of Android with respect to Patents and IP law suits. Google also doesn&amp;rsquo;t want to be held responsible by any of the OEMs using Android when they are targeted by these law suits. So, they arrived at this decision &lt;strong>to create a win-win situation where the new company will still be handed over instructions from MountainView through back channels but liabilities of the company are going to be very limited because they will show zero or no earnings at all.&lt;/strong>&lt;/p>
&lt;p>I can see everyone from Cupertino to Redmond running helter skelter by this move from Google as they will lose one major weapon in their armory in their &amp;ldquo;Take no prisoners&amp;rdquo; war against Android&amp;rsquo;s rapid growth.&lt;/p>
&lt;p>I&amp;rsquo;ll keep you guys updated as I get more details on this.&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>&lt;strong>Update&lt;/strong>: Yes, it is true&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..that all of you saw straight through my pathetic attempt at an april fools joke :P&lt;/p></content></item><item><title>Android/iPhone Beware: WP7 Phones have already sold 12 million devices</title><link>/2010/12/04/androidiphone-beware-wp7-phones-have-already-sold-12-million-devices/</link><pubDate>Sat, 04 Dec 2010 19:16:19 +0000</pubDate><guid>/2010/12/04/androidiphone-beware-wp7-phones-have-already-sold-12-million-devices/</guid><description>According to TechCrunch, that is. TC has a post on its blog right now (from none other than Michael Arrington) that says Toddlers Pick iPhone Over Windows 7 PhonesÂ 10-1. The article says that this is because a toddlers&amp;rsquo; app maker&amp;rsquo;s notes that their app sold 71.5 apps per day on average on the iOS app store, while the number was 7.5 on the WP7 marketplace. Go read the article (it&amp;rsquo;s pretty short) and come back to read the below.</description><content>&lt;p>According to TechCrunch, that is. TC has a post on its blog right now (from none other than Michael Arrington) that says &lt;a href="http://techcrunch.com/2010/12/04/toddlers-pick-iphone-over-windows-7-phones-10-1/">Toddlers Pick iPhone Over Windows 7 PhonesÂ 10-1&lt;/a>. The article says that this is because a toddlers&amp;rsquo; app maker&amp;rsquo;s notes that their app sold 71.5 apps per day on average on the iOS app store, while the number was 7.5 on the WP7 marketplace. Go read the article (it&amp;rsquo;s pretty short) and come back to read the below.&lt;/p>
&lt;p>As I posted in the comments there, the &amp;ldquo;article&amp;rdquo; has fail written all over it. Points to note:&lt;/p>
&lt;ol>
&lt;li>Moms make the choice, not toddlers&lt;/li>
&lt;li>The sample set is too small&lt;/li>
&lt;li>iPhone has been selling for 3 years and WP7 for like 1 month..so D.U.H&lt;/li>
&lt;li>The iPhone apps also sell on iPod/iPad.&lt;/li>
&lt;li>It&amp;rsquo;s not &amp;ldquo;Windows 7 phones&amp;rdquo;, its &amp;ldquo;Windows Phone 7&amp;rdquo; lol. One of the most prominent tech blogs can&amp;rsquo;t even get the name right.&lt;/li>
&lt;li>Acc to TechCrunch, &amp;ldquo;&lt;em>Data like this hints at the total run rate for Win7 phones&lt;/em>&amp;rdquo;, so basically WP7 has already sold around 12 million already (Total iOS devices sold till now is around 120mn acc to Jobs). That&amp;rsquo;s mighty impressive for a one month run.. :P&lt;/li>
&lt;/ol>
&lt;p>On a serious note, I didn&amp;rsquo;t expect this post to be coming from Mike. Or maybe this is like that recent editorial plagiarism scandal where the newspaper editor said that he was tired so he got it written by his juniors.. :P&lt;/p></content></item><item><title>Ad-Free (Paid) Angry Birds For Android</title><link>/2010/12/02/ad-free-paid-angry-birds-android/</link><pubDate>Thu, 02 Dec 2010 13:28:52 +0000</pubDate><guid>/2010/12/02/ad-free-paid-angry-birds-android/</guid><description>Rovio Mobile has been pretty considerate for the Android lovers and has released their Angry Birds game for free on the Android market. Many people love it but quite a few are annoyed by it because Rovio chose to monetize it by in-game advertisements, and that too placed at awkward places which can hinder the gameplay. Many users have also reported that they are being forced to view video ads as well these days.</description><content>&lt;p>Rovio Mobile has been pretty considerate for the Android lovers and has released their Angry Birds game for free on the Android market. Many people love it but quite a few are annoyed by it because Rovio chose to monetize it by in-game advertisements, and that too placed at awkward places which can hinder the gameplay. Many users have also reported that they are being forced to view video ads as well these days. Another drawback is that if there is no network connection (e.g. if you are in a no-signal area, roamin, in-flight, or just don&amp;rsquo;t have a data plan), then the game won&amp;rsquo;t run at all. So far all the queries about this or pleas to have a paid app have been skirted around by Rovio. But this will soon be history.&lt;/p>
&lt;p>One of my friends at work received an email recently from Rovio announcing the new &amp;ldquo;Seasons&amp;rdquo; edition forÂ ChristmasÂ andÂ HalloweenÂ levels. But that is not the important thing, something else is. Read this:&lt;/p>
&lt;blockquote>
&lt;p>Angry Birds Seasons Available For Android&lt;/p>
&lt;p>Today, we bring you Angry Birds Seasons, a special edition spin-off of Angry Birds!&lt;/p>
&lt;p>Season?s Greedings consists of 25 daily surprises for fans of Angry Birds to enjoy while counting down the days until Christmas.&lt;/p>
&lt;p>Included in the game is also the 45-level Halloween special edition, now packaged as a separate episode called Trick Or Treat.&lt;/p>
&lt;p>Angry Birds Seasons is available for Android devices through GetJar and Android Market.&lt;/p>
&lt;p>Payment option and performance Â upgrades to follow&lt;/p>
&lt;p>We are still working on two things for the Angry Birds games on Android:&lt;/p>
&lt;p>First, we are bringing a graphically lighter option in the game, to enable better performance on older phones.&lt;/p>
&lt;p>&lt;strong>Second, we will introduce a payment system to opt-out of advertising.&lt;/strong>&lt;/p>
&lt;p>Both of these upgrades will be included in later updates.&lt;/p>
&lt;/blockquote>
&lt;p>So as you can see, Rovio is about to bring out a paid option for Android folks as well so that we can kill those pigs in peace :)&lt;/p></content></item><item><title>ZDNet Fail. Answer is Stop Tech Blogging</title><link>/2010/11/19/zdnet-fail-answer-is-stop-tech-blogging/</link><pubDate>Fri, 19 Nov 2010 15:45:04 +0000</pubDate><guid>/2010/11/19/zdnet-fail-answer-is-stop-tech-blogging/</guid><description>Just read this article over at zdnet. What it basically says is condensed in these two points:
Android is a failure for Google because it is open and carriers/OEMs are stripping off google search from it and putting replacements like baidu/Bing. (BTW, half the people say Android is fail because it is not open and the other half say it is fail because it is open. Which one is it, please decide ;) )</description><content>&lt;p>Just read this &lt;a href="http://www.zdnet.com/blog/open-source/android-fail-the-answer-is-a-google-phone/7822">article&lt;/a> over at zdnet. What it basically says is condensed in these two points:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Android is a failure for Google because it is open and carriers/OEMs are stripping off google search from it and putting replacements like baidu/Bing. (BTW, half the people say Android is fail because it is not open and the other half say it is fail because it is open. Which one is it, please decide ;) )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The solution is a Google Phone with google branding, sold unlocked at full price.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Let me answer 2nd point first. Dana Blankenhorn, thanks for that nice blast from the past advice. Google already did it with Nexus One, like, one year ago duh..&lt;/p>
&lt;p>Now, on to the first point. Even if lot of people are stripping off Google search, they still have a big share of the mobile search market. They didn&amp;rsquo;t create Android solely to earn from it directly. It was more of a way to ensure that they still have an avenue for mobile revenue which would have otherwise been completely lost (iPhone). Another thing here is that if they didn&amp;rsquo;t keep it open enough for other players, it might have not got such widespread adoption or they might have been killed in US/EU under antitrust laws.&lt;/p>
&lt;p>So, all I can say to Dana and ZDNet is &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&amp;gt; kthxbi :P&lt;/p></content></item><item><title>A short Tablet/Smartphone survey for a project</title><link>/2010/11/15/short-tablet-smartphone-survey-project/</link><pubDate>Mon, 15 Nov 2010 04:10:06 +0000</pubDate><guid>/2010/11/15/short-tablet-smartphone-survey-project/</guid><description>I need a bit of your help in filling out a short survey that I need for a small project of mine that I&amp;rsquo;m doing with a friend. It will take maximum of only 2-3 minutes of your time. Please fill it out below. If you are facing any problems with the survey or have any queries/suggestions etc, please use this contact form to send them to us.
Much Thanks!! :)</description><content>&lt;p>I need a bit of your help in filling out a short survey that I need for a small project of mine that I&amp;rsquo;m doing with a friend. It will take maximum of only 2-3 minutes of your time. Please fill it out below. If you are facing any problems with the survey or have any queries/suggestions etc, please use this &lt;a href="/contact">contact form&lt;/a> to send them to us.&lt;/p>
&lt;p>Much Thanks!! :)&lt;/p></content></item><item><title>The Real Threat Of Windows Phone 7</title><link>/2010/10/28/the-real-threat-of-windows-phone-7/</link><pubDate>Thu, 28 Oct 2010 19:48:34 +0000</pubDate><guid>/2010/10/28/the-real-threat-of-windows-phone-7/</guid><description>Many people say that Windows Phone 7 is a threat to iPhone because they are bringing in a super platform with a choice of multiple designs and multiple carriers with great Enterprise and gaming support and maintaining the lucrative integration that iPhone provides. Many also say that Windows Phone 7 is a threat to Android because it solves the problem of Apple&amp;rsquo;s draconian policies, gives choice to customers and all this without fragmenting the OS all over the place.</description><content>&lt;p>Many people say that Windows Phone 7 is a threat to iPhone because they are bringing in a super platform with a choice of multiple designs and multiple carriers with great Enterprise and gaming support and maintaining the lucrative integration that iPhone provides. Many also say that Windows Phone 7 is a threat to Android because it solves the problem of Apple&amp;rsquo;s draconian policies, gives choice to customers and all this without fragmenting the OS all over the place.&lt;/p>
&lt;p>However, I beg to differ. Windows Phone 7 is a threat to the world wide web and web apps. It plans to help the developers and users by going one up on fragmentation of Android but in the process will fragment the web app world itself. This is because the browser in WP7 is based on Internet Explorer 7. Yes, not IE 9, not IE8, but IE7, which is already four years old now.&lt;/p>
&lt;p>Right now, if you have to do a web app, you can do it in HTML5, CSS3 etc and assume that it will work over most mobile handsets out there. Enter WP7 with its archaic browser and the developer has one more headache to solve. His app will be, in most cases, incompatible with the &amp;ldquo;new&amp;rdquo; platform and so he will have to code another version that works on IE7 as well. This will not only result in wasted time and effort but in fact, the developer may even have to hold back on features that might not work well on this ugly duckling which will hold the whole pack down for God knows how much more time.&lt;/p>
&lt;p>So, there it is. If the Android fragmentation reports are true, you can just buy another handset like an iPhone but this comeback-from-the-grave monster will fragment the mobile web app world itself so that you won&amp;rsquo;t have any reprieve whichever phone you buy. So, I appeal to you. If you want a better mobile future, talk about it, write about it and let Microsoft know that it can and must do better.&lt;/p></content></item><item><title>Is Android Open Source Or Not?</title><link>/2010/10/25/android-open-source-or-not/</link><pubDate>Mon, 25 Oct 2010 11:31:06 +0000</pubDate><guid>/2010/10/25/android-open-source-or-not/</guid><description>Is Android really open source or not? That is the question being asked by almost everyone. A lot of people, especially those influenced by RDF or those who are in the news industry with no idea about OS and open source but were asked by their boss to get a scoop on this pronto, tend to bring up a few keywords and then twist them around in the way they see fit to make sure it says Android isn&amp;rsquo;t open.</description><content>&lt;p>Is Android really open source or not? That is the question being asked by almost everyone. A lot of people, especially those influenced by &lt;a href="http://en.wikipedia.org/wiki/Reality_distortion_field">RDF&lt;/a> or those who are in the news industry with no idea about OS and open source but were asked by their boss to get a scoop on this pronto, tend to bring up a few keywords and then twist them around in the way they see fit to make sure it says Android isn&amp;rsquo;t open. They don&amp;rsquo;t need to be correct, they only need the article to &amp;ldquo;&lt;strong>sound correct&lt;/strong>&amp;rdquo; by picking up sentences out of context or putting quotes only from people who agree with them. This will convince their boss and 99% of their readers who have no idea about all these things either. But the boss is happy he got a story and associated clicks. Readers are happy because they got the points to float around in their next forum flame war. They don&amp;rsquo;t have to read when someone corrects them. They have made their points and rest is all someone making noises like a rat.&lt;/p>
&lt;p>A lot out of the rest of the people, who are indeed informed, make the mistake of thinking that &amp;ldquo;Open Source = GPL&amp;rdquo; or &amp;ldquo;Open Source = Free Software&amp;rdquo;, which is not true. Open source is similar to free software but is one that choses to keep more options open. In short, Free Software Movement, as the one evangelized by FSF, is a subset of open source that tries to achieve freedom of software by restriction.&lt;/p>
&lt;p>Please also note that many people including Steve Jobs confuse people more by interchanging between open and open source. An android phone that you get may not be open, the android market may be open, etc but this discussion is purely about open-source.&lt;/p>
&lt;p>Anyways, with asbestos underwear on, I write this post to speak my mind about this matter by talking about various points thrown up by the above mentioned classes. Since this is going to be a long post, I&amp;rsquo;ll mention here the things it is going to cover:&lt;/p>
&lt;ol>
&lt;li>Allegations against Android&amp;rsquo;s open-source nature. Are they true?&lt;/li>
&lt;li>Does OSI Foundation (&lt;a href="http://www.opensource.org">Open source Initiative&lt;/a>) think that Android is open source?&lt;/li>
&lt;li>Android and open source in layman terms&lt;/li>
&lt;li>Takeaways/conclusion&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Update&lt;/strong>: Updated the article as per Tony and Kasper&amp;rsquo;s comments below. Thanks Kasper and Tony for your valuable inputs.&lt;/p>
&lt;h3 id="android-and-open-source-allegations-and-answers">Android and Open Source: Allegations and Answers&lt;/h3>
&lt;p>&lt;strong>Allegation&lt;/strong>: Google does a lot of development in private for few months and then releases the code to public.
&lt;strong>Answer&lt;/strong>: Almost every open source project I know does this. Do you think every person who works on an open source project pushes his code to the mainline 10 times when re writes a 10 line code? No. He completes the feature, tests it and then pushes it out. Individuals might do it sooner, companies might do it later but everyone pushes out their code when they feel things are fairly ready. So, Google choses to do the &amp;ldquo;push&amp;rdquo; every few months when they think their new feature set is ready. This, of course, is more influenced by the fact that they need to be competitive in the aggressive mobile market and hence not let the competitors know about the exact features but still it is well within the limits of open source. And they are doing it before/with the binary release as well.&lt;/p>
&lt;p>Also to be noted here is the fact that the &amp;ldquo;code dump&amp;rdquo; is done only for major releases. Minor fixes and even features keep trickling into the code base every now and then and these allow others to make fixes as well. e.g. Cyanogen was able to bring &amp;ldquo;802.11n&amp;rdquo; capability and was able to include various fixes including one for wi-fi sleep policies before they actually made into an OTA update for any phone.&lt;/p>
&lt;p>&lt;strong>Allegation&lt;/strong>: Only google employees can check in code to mainline.
&lt;strong>Answer&lt;/strong>: Every open source project has only a select few folks who can check in code. Most of the open source projects start with only their founders having commit access. They may or may not give commit accesses to anyone else. Check out various open source projects on sourceforge, googlecode, etc and you will find this. Most of the projects that do choose to give commit access to others, start doing it after some time when they feel the project is mature enough and they are confident enough in someone else. Android is just a hatchling, around 2 years old. It has begun making strides only now so Google may even choose to take the latter path but I can understand if Google wants to keep this as their control point because of the hustle and bustle of the mobile OS world which is much more rapid and cut throat than the desktop OS and this does not make them closed. Not only that, but seeing how everyone in the mobile world is so trigger happy with suing everyone else, it creates a legal issue for them as they would be the ones to answer if someone else brings this upon them.&lt;/p>
&lt;p>&lt;strong>Allegation&lt;/strong>: Google only accepts their own code into official android and nobody else&amp;rsquo;s.
&lt;strong>Answer&lt;/strong>: This one is hilarious. Obviously, anyone who says this hasn&amp;rsquo;t actually been to review.android.com. Just go their and check whether any merged changes have non-google, non-android email ids. Anyone can upload their patches there but the accepted ones are fairly low. This problem is present in every popular open source project, even the Linux kernel. But is more pronounced in the case of android because Google&amp;rsquo;s android team is much smaller than the number of persons working on other projects and there is red tape of a big company involved. If you want to get your patch in, just like the kernel, you need to engage with them. Talk to them in the relevant bug report, comment the code properly, give them a reason to not avoid your patch. But yes, the process is still very slow and it is eons faster to just contribute to a fork like cyanogenmod. I do hope that google does get better in this regard soon though.&lt;/p>
&lt;p>&lt;strong>Allegation&lt;/strong>: It is not possible to make a full android build from the public code tree of android.
&lt;strong>Answer&lt;/strong>: BS. Cyanogen does just fine with his full AOSP builds. People argue that Google does not release the modem/baseband code but they idiotically fail to realize that the baseband code is not part of Android at all. It is the IP of the baseband manufacturer and is specific to each hardware. Android is just the code that runs on apps hardware. Google does not indeed release the code of their built in google apps (gtalk/gmail etc) though but they are already working towards that and these apps will not be a part of the base Android system anymore. These would be standalone apps and even now you don&amp;rsquo;t need them to make a fully working android build.&lt;/p>
&lt;p>&lt;strong>Allegation&lt;/strong>: &amp;ldquo;Android&amp;rdquo; is a registered trademark and is held by Google.
&lt;strong>Answer&lt;/strong>: Linus holds the trademark for &amp;ldquo;Linux&amp;rdquo;, Mozilla foundation holds the trademark for &amp;ldquo;Firefox&amp;rdquo;, Canonical holds the trademark for &amp;ldquo;Ubuntu&amp;rdquo;. Get the drift? Basically, it is completely possible and allowed for an open source software to be trademarked.&lt;/p>
&lt;p>&lt;strong>Allegation&lt;/strong>: Google doesn&amp;rsquo;t stop the carriers/OEMs from locking down the phones, adding bloatware or custom UIs.
&lt;strong>Answer&lt;/strong>: This is an issue with carriers/OEMs and not Android. Google uses the apache software license (ASL), which is a permissive license (like MIT, BSD, etc) and hence does not stop the carriers from doing such a thing (In fact, this is the very foundation of being open, check the next passage about OSI foundation, point no. 9). Many people say they should, but if they did then they wouldn&amp;rsquo;t be open anymore, would they?
Even Linus Torvalds is against making such a stipulation of not allowing locking of phones and this is the biggest reason why the Linux Kernel (and lot of other open source projects) didn&amp;rsquo;t move to FSF&amp;rsquo;s (&lt;a href="http://www.fsf.org">Free Software Foundation&lt;/a>) GPL v3. I wonder why no one calls the Linux kernel closed hmmmm&amp;hellip;
BTW, if you are so serious about unlocked/rootable phones then buy a dev phone directly from google or get one from Synapse.&lt;/p>
&lt;h3 id="android-and-open-source-osi-foundation">Android and Open Source: OSI Foundation&lt;/h3>
&lt;p>The OSI foundation has a few guidelines to determine whether something is open source or not under their &lt;a href="http://www.opensource.org/osd.html">Open Source Definition&lt;/a>. Android uses the OSI compatible Apache Software License (ASL) but still let&amp;rsquo;s see whether Android comes up to all of them or not. If it is in conflict with even one of the requisites, we will call Android closed.&lt;/p>
&lt;ol>
&lt;li>Allow free redistribution - Check&lt;/li>
&lt;li>Give out un-obfuscated source code - Check&lt;/li>
&lt;li>Allow modifications and derived works - Check&lt;/li>
&lt;li>Allow distribution of modifications (as patches) or modified software as a whole. Can restrict the modified versions from using original name of software - Check&lt;/li>
&lt;li>No discrimination against any person or groups - Check&lt;/li>
&lt;li>No restriction of using the software on any device or field - Check&lt;/li>
&lt;li>No additional license needed - Check&lt;/li>
&lt;li>No product-specific license - Check&lt;/li>
&lt;li>No restriction on software distributed along with original software - Check&lt;/li>
&lt;li>Technology neutral, i.e., no preference for an individual technology or user interface - Check
So, Android is true to each and every point that being open demands to it. In fact, points 9 and 10 are fundamental in making it open but alas, people less oriented with open software tend to term this as being closed (as seen in the last allegation above)&lt;/li>
&lt;/ol>
&lt;h3 id="android-and-open-source-from-a-laymans-view-point">Android and Open Source: From a layman&amp;rsquo;s view point&lt;/h3>
&lt;p>Apart from the above, I would also like to share a few &amp;ldquo;layman-examples&amp;rdquo; which will let you understand for yourself why Android is open:&lt;/p>
&lt;ul>
&lt;li>You can see all the official android OS code without any restrictions&lt;/li>
&lt;li>You can download it, fork it, modify it without asking google&lt;/li>
&lt;li>You can port it to any device without asking google&lt;/li>
&lt;li>You can develop and sell your phone with Android without asking google
Now compare that with any other mobile OS you know.&lt;/li>
&lt;/ul>
&lt;h3 id="android-and-open-source-conclusion">Android and Open Source: Conclusion&lt;/h3>
&lt;p>So, the takeaways from the above wall of text are:&lt;/p>
&lt;ul>
&lt;li>Android is open-source&lt;/li>
&lt;li>Android is permissively open-source instead of being restrictive&lt;/li>
&lt;li>Android can do better in terms of community driven development but is perhaps held back by pace of competition and legalities involved. But, this in no way makes it non-open-source.&lt;/li>
&lt;/ul>
&lt;p>Let me know if you have any corrections or allegations to make :)&lt;/p></content></item><item><title>Android Paid Apps Now Live In India</title><link>/2010/10/05/android-paid-apps-now-live-in-india/</link><pubDate>Tue, 05 Oct 2010 07:35:39 +0000</pubDate><guid>/2010/10/05/android-paid-apps-now-live-in-india/</guid><description>Yes! As of today noon, paid apps are now visible on my Android Nexus One in India. Few salient points (Also, look at the end to see how to get paid apps if you are not able to see them yet):
The marketplace shows approximate prices of each app in Indian Rupees (INR) (Edit: I&amp;rsquo;ve just learned from few tweets that this is a new feature worldwide. People everywhere are now seeing approximate app costs in their local currencies.</description><content>&lt;p>Yes! As of today noon, paid apps are now visible on my Android Nexus One in India. Few salient points (Also, look at the end to see how to get paid apps if you are not able to see them yet):&lt;/p>
&lt;ul>
&lt;li>
&lt;p>The marketplace shows approximate prices of each app in Indian Rupees (INR) (Edit: I&amp;rsquo;ve just learned from few tweets that this is a new feature worldwide. People everywhere are now seeing approximate app costs in their local currencies. Good stuff!)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You can see the paid apps on main list and in the &amp;ldquo;Just In&amp;rdquo; Tab but there is no &amp;ldquo;Top Paid&amp;rdquo; tab available. (**Update: **If you can&amp;rsquo;t see the &amp;ldquo;top paid&amp;rdquo; tab, then go to settings-&amp;gt;Applications-&amp;gt;All-&amp;gt;Market and clear data and cache &amp;amp; launch market app again. You will be able to see top paid tab as well :) )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You can, however, search for any paid app or follow a direct marketplace link fine.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Final payment is done in the original currency of the app developer (e.g. pounds or dollars)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The payment method is credit cards through Google Checkout.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Debit cards won&amp;rsquo;t work for payment. Even though google checkout accepts them, they show up as &amp;ldquo;invalid&amp;rdquo; while buying apps. I presume that this is because of the 24 hour refund feature of Android marketplace.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Carrier Billing is not available though&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Another new thing reported. &amp;ldquo;Update All&amp;rdquo; feature which was so far available only on Froyo ROMs has also been included for devices with older Android versions. I&amp;rsquo;m not sure which all versions have it but it is at least showing up on 2.1 (Eclair) ROMs now.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Let me know if you can see the paid apps as well. If you cannot, try these two things:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Open Phone app and dial &amp;ldquo;*#*#2432546#*#*&amp;rdquo; and wait. You should get a &amp;ldquo;Checkin succeeded&amp;rdquo; notification.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Restart your phone.&lt;/p>
&lt;/li>
&lt;/ol></content></item><item><title>Carrier Billing Behind Android Paid Apps Market Jump?</title><link>/2010/10/01/carrier-billing-behind-android-paid-apps-market-jump/</link><pubDate>Fri, 01 Oct 2010 17:19:51 +0000</pubDate><guid>/2010/10/01/carrier-billing-behind-android-paid-apps-market-jump/</guid><description>We heard the news today that paid apps in Android market place have been extended to 18 new countries. Could &amp;ldquo;Carrier Billing&amp;rdquo; (Allowing your service operator to add the apps&amp;rsquo; price to your cellphone bill) be the reason behind it? I think so. It was long suggested that Google Checkout and corresponding legal issues in using it across various countries was the reason behind the paid apps not being available in those countries.</description><content>&lt;p>We heard the &lt;a href="/2010/10/01/android-paid-apps-india.html">news&lt;/a> today that paid apps in Android market place have been extended to 18 new countries. Could &amp;ldquo;Carrier Billing&amp;rdquo; (Allowing your service operator to add the apps&amp;rsquo; price to your cellphone bill) be the reason behind it? I think so. It was long suggested that Google Checkout and corresponding legal issues in using it across various countries was the reason behind the paid apps not being available in those countries. The, all of us developers got an email from Google on 24th of July about an updated Developers&amp;rsquo; Distribution Agreement, which basically said in clause 13.1 that &amp;ldquo;authorized carriers&amp;rdquo; had been added as an indemnified party in the apps sales.&lt;/p>
&lt;p>What&amp;rsquo;s more is that the agreement had a 30 day period to be accepted (August end), and then just one month after that we got the news of so many new countries being added. Sounds mighty coincidental to me. I think it would have been much easier for google to work through the carriers to allow paid apps than burning through all that red tape for its own google checkout.&lt;/p>
&lt;p>This is good news, if true because carrier billing is much more convenient I think. Plus it can be used even if you do not own a credit card. Let&amp;rsquo;s hope for the best :)&lt;/p></content></item><item><title>Android Paid Apps Available In India</title><link>/2010/10/01/android-paid-apps-india/</link><pubDate>Fri, 01 Oct 2010 03:40:00 +0000</pubDate><guid>/2010/10/01/android-paid-apps-india/</guid><description>Just got a mail from Google that paid apps are being made available in India. HOORAY!!! In addition, developers from 20 more countries can sell apps on market (Unfortunately, no India in this list) and people from 18 more countries can buy paid apps.
This is a big thing because now 32 countries out of 44 where Android has footprint can buy paid apps. This should take away one of the biggest drawbacks that Android marketplace was facing.</description><content>&lt;p>Just got a mail from Google that paid apps are being made available in India. HOORAY!!! In addition, developers from 20 more countries can sell apps on market (Unfortunately, no India in this list) and people from 18 more countries can buy paid apps.&lt;/p>
&lt;p>This is a big thing because now 32 countries out of 44 where Android has footprint can buy paid apps. This should take away one of the biggest drawbacks that Android marketplace was facing.&lt;/p>
&lt;p>This the list that I received:&lt;/p>
&lt;blockquote>
&lt;p>Effective today, developers from 20 additional countries (Argentina, Australia, Belgium, Brazil, Canada, Denmark, Finland, Hong Kong, Ireland, Israel, Mexico, New Zealand, Norway, Portugal, Russia, Singapore, South Korea, Sweden, Switzerland and Taiwan) can now sell paid apps on Android Market. Over the next 2 weeks, users from 18 new countries (Argentina, Brazil, Belgium, Czech Republic, Denmark, Finland, Hong Kong, India, Ireland, Israel, Mexico, Norway, Poland, Portugal, Russia, Singapore, Sweden, and Taiwan) will be able to purchase paid apps from Android Market.&lt;/p>
&lt;/blockquote>
&lt;p>Now, let&amp;rsquo;s hope that Google allows Indian developers to sell their apps soon as well. :)&lt;/p></content></item><item><title>Setup Call Recording With Android App Tasker On Nexus One</title><link>/2010/09/24/setup-call-recording-android-app-tasker-nexus-one/</link><pubDate>Fri, 24 Sep 2010 10:01:16 +0000</pubDate><guid>/2010/09/24/setup-call-recording-android-app-tasker-nexus-one/</guid><description>I wanted to record calls on my Android phone (Nexus one). The easy way would have been to download an app but I like tinkering. And given that I recently bought Tasker, androidâs very own swiss knife, I thought I should give it a run. After just an hour I was able to create my very own call recorder (some time went into trial and error with things as this was my first major task with tasker and also some things didnât work with nexus one, which I will note below).</description><content>&lt;p>I wanted to record calls on my Android phone (Nexus one). The easy way would have been to download an app but I like tinkering. And given that I recently bought &lt;a href="http://tasker.dinglisch.net/">Tasker&lt;/a>, androidâs very own swiss knife, I thought I should give it a run. After just an hour I was able to create my very own call recorder (some time went into trial and error with things as this was my first major task with tasker and also some things didnât work with nexus one, which I will note below). Iâll outline the process to set it up here in as much detail as possible and will also provide the profiles. Please note that I made this setup for nexus one but it should work on pretty much any android phone and, in fact, it might work even better on your phone by making a few tweaks that I will outline as Nexus one doesnât allow jacking into the call streams directly but your phone might.&lt;/p>
&lt;p>So, letâs begin. My visioned scenario is like this:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>When you start a call (incoming or outgoing), i.e., when both the parties have picked up the phone, a notification should appear in the status bar.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Clicking on this notification should start recording the call. It should also give way to another notification now.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>This new notification should stop the call recording when clicked.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If you donât stop the call recording, the recording should automatically stop when the call ends.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>To achieve the steps mentioned above, you will have to create â4â profiles in tasker. The xml files for these profiles are provided in a zip at the end of this article that you can download and import into tasker directly. If you want to understand more about whats going on, here are the details of each profile so that you can understand and modify them according to your needs. These profiles are:&lt;/p>
&lt;p>&lt;strong>Profile 1. Call Started&lt;/strong>&lt;/p>
&lt;p>Tasker description:&lt;/p>
&lt;p>Profile: Call started
Event: Phone Offhook
Enter: 11
Execute, Abort New Task
A0: Variable Clear [ Name:%RECORDING ]
A1: Notify [ Title:Record Call Text: Icon: Number: Permanent: ]&lt;/p>
&lt;p>&lt;strong>Notes:&lt;/strong>&lt;/p>
&lt;p>None&lt;/p>
&lt;p>&lt;strong>Profile 2. Record Call&lt;/strong>&lt;/p>
&lt;p>Tasker description:&lt;/p>
&lt;p>Profile: Record call
Event: Notification Click
Enter: Record Call
Execute, Abort New Task
A0: Notify Cancel [ Title:Record Call Warn Not Exist: ]
A1: Variable Set [ Name:%RECORDING To:1 Do Maths: Append: ]
A2: In-Call Volume [ Level:5 Display: Sound: ]
A3: Speakerphone [ Set:On ]
A4: Flash [ Text:Started Recording Long: ]
A5: Notify [ Title:Stop Record Call Text: Icon: Number: Permanent: ]
A6: Record Audio [ File:shantz/call-%CNUM-%CDATE-%CTIME Source:Microphone MaxSize: ]&lt;/p>
&lt;p>**Notes: **&lt;/p>
&lt;p>Note the steps A2, A3 and A6. Basically Nexus one has a limitation that you cannot record directly from the call streams. So, Iâm doing the recording from the microphone and this works best if the phone is in speakerphone mode. So, Iâm turning up the call volume and setting speakerphone mode in A2 and A3 respectively. You can try tweaking these 2 steps (having different call volumes and not engaging speakerphone mode and you might have passable results without doing these as well). Also, try using âCallâ, âIncoming Callâ, âOutgoing Callâ etc as sources in step A6 instead of microphone to check if your phone supports direct call stream recording. If it does, then you will have excellent recording quality and you can also remove steps A2 and A3.&lt;/p>
&lt;p>&lt;strong>Profile 3. Stop Record Call&lt;/strong>&lt;/p>
&lt;p>Tasker description:&lt;/p>
&lt;p>Profile: Stop record call
Event: Notification Click
Enter: Stop Record Call
Execute, Abort New Task
A0: Record Audio Stop [ ]
A1: Notify Cancel [ Title:Record Call Warn Not Exist: ]
A2: Notify Cancel [ Title:Stop Record Call Warn Not Exist: ]
A3: Flash [ Text:Stopped Recording Long: ]
A4: Variable Clear [ Name:%RECORDING ]
A5: Speakerphone [ Set:Off ]&lt;/p>
&lt;p>**Notes: **&lt;/p>
&lt;p>None&lt;/p>
&lt;p>&lt;strong>Profile 4. Call Complete&lt;/strong>&lt;/p>
&lt;p>Tasker description:&lt;/p>
&lt;p>Profile: Call complete
Event: Phone Idle
Enter: Stop Record Call
Execute, Abort New Task
A0: Record Audio Stop [ ]
A1: Notify Cancel [ Title:Record Call Warn Not Exist: ]
A2: Notify Cancel [ Title:Stop Record Call Warn Not Exist: ]
A3: Flash [ Text:Stopped Recording Long: ]
A4: Variable Clear [ Name:%RECORDING ]
A5: Speakerphone [ Set:Off ]&lt;/p>
&lt;p>**Notes: **&lt;/p>
&lt;p>None&lt;/p>
&lt;p>&lt;strong>&lt;a href="http://tech.shantanugoel.com/resources/downloads/android-tasker-call-record-profiles.zip">Download: Android Tasker Call Record Profiles&lt;/a>&lt;/strong>&lt;/p>
&lt;p>And we are done, you can download the profile xml files in the zip file linked here.&lt;/p>
&lt;p>Let me know if you need any clarifications on the above steps. I would also love to get your suggestions to make this better or if you have any of your own tasker tips and tricks. Iâll be posting more of my tasker adventures soon :)&lt;/p></content></item><item><title>The Great Indian $35 Tablet Hoax?</title><link>/2010/09/13/the-great-indian-35-tablet-hoax/</link><pubDate>Mon, 13 Sep 2010 09:59:42 +0000</pubDate><guid>/2010/09/13/the-great-indian-35-tablet-hoax/</guid><description>Another nail in the coffin before this Android tablet lives to fulfill the Indian kidsâ dreams. Well, not exactly a nail in the coffin. The tablet might still be here, and at the price promised but the thing to note is how low the government can stoop to get bragging rights (and votes). The article elaborates how the IIT/IISC scientists werenât even aware that such a âprojectâ existed and they were invited to be a part of it just a month before Mr.</description><content>&lt;p>&lt;a href="http://ibnlive.in.com/blogs/jaimonjoseph/326/62006/is-indias--35-laptop--really-indian.html">Another nail in the coffin&lt;/a> before this Android tablet lives to fulfill the Indian kidsâ dreams. Well, not exactly a nail in the coffin. The tablet might still be here, and at the price promised but the thing to note is how low the government can stoop to get bragging rights (and votes). The article elaborates how the IIT/IISC scientists werenât even aware that such a âprojectâ existed and they were invited to be a part of it just a month before Mr. Kapil Sibal unveiled the epitome of Indian innovation to the world media, telling everyone with gusto how it was a brainchild of Indiaâs premier institutes backed by the revolutionary and modern government. How the low cost motherboard had been designed and fabricated by students where years of research by experts around the world had failed in projects like OLPC.&lt;/p>
&lt;p>Iâm ashamed of the government. Ashamed that everyone abroad now points at my country and calls us liars. Mr. Sibal, why couldnât you just say that you scored a really nice deal to bring a really good education device to the Indian masses at a cheap price point? Why harp about the innovation and stuff when clearly there wasnât any and the only price cut you and your government had brought on was through a bulk order and subsidies? &lt;strong>Oh right!! Because $35 tablet doesnât have much margins to siphon away any money from and the only place left to fulfill that gap is from âResearch &amp;amp; Developmentâ Money Quota.&lt;/strong>&lt;/p></content></item><item><title>Android App: Wi-Fi Keep Alive updates</title><link>/2010/09/09/android-app-wi-fi-keep-alive-updates/</link><pubDate>Thu, 09 Sep 2010 05:27:27 +0000</pubDate><guid>/2010/09/09/android-app-wi-fi-keep-alive-updates/</guid><description>I pushed out a couple of updates to my android app Wi-Fi Keep alive a few weeks ago (mainly related to fixing the resolution and colors of the widget icons) taking the latest version to 1.4.4. This is just to let you know that it will take a while (a few weeks) more to get the pending updates and requests in to the program. I have been pretty ill for the last few weeks and have only just got back up out of the bed and now my development machine has also gone for a toss.</description><content>&lt;p>I pushed out a couple of updates to my android app Wi-Fi Keep alive a few weeks ago (mainly related to fixing the resolution and colors of the widget icons) taking the latest version to 1.4.4. This is just to let you know that it will take a while (a few weeks) more to get the pending updates and requests in to the program. I have been pretty ill for the last few weeks and have only just got back up out of the bed and now my development machine has also gone for a toss. Iâve bought a new machine a couple of days ago but still have to recover my data from old machine and set it up on the new one along with linux and my standard development environment. Please do continue to report bugs and ask for requests though and Iâll make sure to keep track of them.&lt;/p>
&lt;p>PS: A tiny thing for celebration is that the app crossed 10,000 downloads mark recently within 2 months of its first appearance on the market :) and right now stands arounds 12k mark. Let&amp;rsquo;s see when I get to 50k :)&lt;/p></content></item><item><title>Caution: Stay away from making your Android app free for a short time</title><link>/2010/09/08/caution-stay-away-from-making-your-android-app-free-for-a-short-time/</link><pubDate>Wed, 08 Sep 2010 06:18:36 +0000</pubDate><guid>/2010/09/08/caution-stay-away-from-making-your-android-app-free-for-a-short-time/</guid><description>Just read this over at the Android Developers google forum:
My app had a one-day sale on all platforms and app stores. The price went from 2.99 to free for just today, but now that the sale is over, I need to revert the price back to 2.99. The bad news is, the developer console will not let me change it! I have to pull the app until I can get this resolved.</description><content>&lt;p>Just read this over at the Android Developers google forum:&lt;/p>
&lt;blockquote>
&lt;p>My app had a one-day sale on all platforms and app stores. The price went from 2.99 to free for just today, but now that the sale is over, I need to revert the price back to 2.99. The bad news is, the developer console will not let me change it! I have to pull the app until I can get this resolved. What can I do?&lt;/p>
&lt;/blockquote>
&lt;p>Apparently, google has this clause in itâs developerâs agreement:&lt;/p>
&lt;blockquote>
&lt;p>You may also choose to distribute Products for free. If the Product is free, you will not be charged a Transaction Fee. You may not collect future charges from users for copies of the Products that those users were initially allowed to download for free. This is not intended to prevent distribution of free trial versions of the Product with an &amp;ldquo;upsell&amp;rdquo; option to obtain the full version of the Product: Such free trials for Products are encouraged. However, if you want to collect fees after the free trial expires, you must collect all fees for the full version of the Product through the Payment Processor on the Market. In this Agreement, &amp;ldquo;free&amp;rdquo; means there are no charges or fees of any kind for use of the Product. All fees received by Developers for Products distributed via the Market must be processed by the Market&amp;rsquo;s Payment Processor.&lt;/p>
&lt;/blockquote>
&lt;p>So, basically, once the app is free, it will always be free unless you create a new âfullâ version package and put it up on the market. The solution in the above scenario seems to be that the developer now needs to pull down his previously published app (which is now free), change the package component name and then republish the app. Of course, this means that he loses track of all the data and customers currently associated with the app.&lt;/p>
&lt;p>Iâm not sure whether this is good or bad. From customersâ point of view it looks good and from developersâ point of view it looks bad. I also donât know whether this also applies to reducing the price and then increasing it as I canât put up paid apps in the market yet (though this seems to be allowed as Iâve seen reports of apps increasing their prices). Let me know what you think about this clause (and any clarifications about non-free but fluctuating prices would also be welcome)&lt;/p></content></item><item><title>Solving The Android Permissions And Malware Puzzle</title><link>/2010/08/13/android-permissions-malware/</link><pubDate>Fri, 13 Aug 2010 19:44:59 +0000</pubDate><guid>/2010/08/13/android-permissions-malware/</guid><description>There has been a spate of security reports recently about Android apps being malware or suspicious. Most of these were found baseless but at least one was indeed correct (e.g. The Russian Trojan app). We also know that Android has a very good security model but even then, the rest of the reports also makes one think and focus on why an apps requires the permissions that it states it needs?</description><content>&lt;p>There has been a spate of security reports recently about Android apps being malware or suspicious. Most of these were found baseless but at least one was indeed correct (e.g. The Russian Trojan app). We also know that Android has a very good &lt;a href="/2010/06/26/android-vs-iphone-security-models.html">security model&lt;/a> but even then, the rest of the reports also makes one think and focus on why an apps requires the permissions that it states it needs?&lt;/p>
&lt;p>We all MUST check the permissions that an app requires before installing it and then contemplate what particular feature of the app would require any mentioned permission. The problem here is two part. First is that the permissions can be cryptic. Now, I can understand most of these as I also develop Android apps but I&amp;rsquo;d fathom that a huge majority wouldn&amp;rsquo;t. A simple solution to this would be for Google to provide more details (and probably examples) for each permission. One can say that it is difficult and a UI nightmare to include too much of text into the limited space that the mobile screen gets. My suggestion here would be to keep the existing layout as it is, but when someone clicks on a requested permission, he be taken to a new page which describes the permission in detailed but simple words and also provides examples.&lt;/p>
&lt;p>But this is just the first part of the current problem. The more important issue most apps are facing these days is &amp;ldquo;&lt;strong>permission creep in&lt;/strong>&amp;rdquo;, i.e., they request for permissions they don&amp;rsquo;t really require. This could be because either they are just adding it to their manifest file mistakenly without using them or are taking a long route for solving a problem that should ideally have been solved in a much easier way without requiring excessive permissions. This permission creep in makes even legit apps look bad. e.g. There was this recent case of a &lt;a href="http://techcrunch.com/2010/07/29/android-wallpaper-hack/">wallpaper app&lt;/a> which was crucified by mainstream media all over the world because of the permissions it was using and then it turned out to be just that the developer&amp;rsquo;s method to solve a particular problem (providing &amp;ldquo;favorites&amp;rdquo; and &amp;ldquo;recommended&amp;rdquo; features to users) was long-winded.&lt;!-- raw HTML omitted -->This is quite common today in Android marketplace. e.g. I tried to install the hugely famous &amp;ldquo;Chomp SMS&amp;rdquo; app today and noticed that it requires my &amp;ldquo;location&amp;rdquo; as well. Pretty weird that an SMS app needs my location and when combined with the &amp;ldquo;Internet&amp;rdquo; permission that it requires as well, it made me go &amp;ldquo;hmmm&amp;rdquo; even though it is tried and tested by a huge number of people without issues. Then I realized that it might need the internet permission for ads (since I was downloading the free version) but still a bit doubtful about location, probably that is needed for ads targeting (especially because it wanted my coarse location only, i.e., cell-triangulation location by which it can easily identify my general region or country, which is all what is needed) but I&amp;rsquo;m still not sure. Even the Android Guru &lt;a href="http://commonsware.com/blog/2010/08/12/evernote-why-you-need-think-about-permissions.html">Mark Murphy has similar reservations&lt;/a> about another popular app Evernote.&lt;/p>
&lt;p>The solution? I think Google should make it mandatory for app publishers to explain in the market that why their app needs each of the permissions it requests. This should beÂ concisely explained to the user before installation and then the user-review feature of Android marketplace can take over to determine whether the explanation given is indeed satisfactory enough or not. This would, e.g., make it immediately clear to any potential Chomp SMS users why it needs the location. I&amp;rsquo;m sure this would lead to even more sales for the good and trusted apps as people like me who were skeptical of something can put their doubts to rest. At the same time, it would quickly push the russian trojan like apps down into the oblivion.&lt;/p>
&lt;p>A side effect/benefit of this approach will also be that the app authors would look at the permissions that they use more cautiously and would probably try to weed out the unnecessary ones.&lt;/p>
&lt;p>Another idea that I have in mind is more community based. I&amp;rsquo;m not sure if Google will implement the above idea or even if they do, would they make it mandatory since market already has almost a 100,000 apps without this info. BUT, if someone can take up the mantle of making a community site that documents, with the help of android users, the potential uses of all apps&amp;rsquo; permissions and also raise flags on any app having a permission without any apparent need, this would become a boon to the Android users. AppBrain, are you listening? I think this would be a good addition to your already excellent service.&lt;/p>
&lt;p>What are your ideas about solving the apps and permissions problems and removing the malware scare that looms upon us? Let me know in the comments..&lt;/p></content></item><item><title>Android Dev Tip: App Not Showing on X10 Mini Marketplace</title><link>/2010/08/07/android-dev-tip-app-not-showing-on-x10-mini-marketplace/</link><pubDate>Sat, 07 Aug 2010 21:18:06 +0000</pubDate><guid>/2010/08/07/android-dev-tip-app-not-showing-on-x10-mini-marketplace/</guid><description>Many Android Developers (and users) get confused that why a certain app isn&amp;rsquo;t showing up on the new Xperia X10 Mini (and few other) phones. This happens even if they support all android versions and have published their apps for all countries, so that shouldn&amp;rsquo;t be the issue. I came across this as well when few people mentioned that they couldn&amp;rsquo;t find my app Wi-Fi Keep Alive in the X10 mini marketplace.</description><content>&lt;p>Many Android Developers (and users) get confused that why a certain app isn&amp;rsquo;t showing up on the new Xperia X10 Mini (and few other) phones. This happens even if they support all android versions and have published their apps for all countries, so that shouldn&amp;rsquo;t be the issue. I came across this as well when few people mentioned that they couldn&amp;rsquo;t find my app Wi-Fi Keep Alive in the X10 mini marketplace. On some digging into the android docs and the X10 mini specs, I found the issue.&lt;/p>
&lt;p>The problem is that the X10 mini has a very small screen with only a QVGA resolution. This screen size/resolution wasn&amp;rsquo;t supported by Android until recently and the Android system might not be able to scale resources and layouts designed for other screen sizes well enough to suit the X10 mini. Hence, the Android system designers have chosen that any app which does not declare explicit support for small screens (i.e., the app dev has tested his app on small screens and made any changes, if needed, and then declared that everything works fine in the Android Manifest) then it is considered not compatible by default and hence, the Android marketplace will filter your app out.&lt;/p>
&lt;p>Now, this is a big loss. A lot of X10 minis were sold and there are lot of new low-tier and cheap Android smartphones coming out with this resolution, so it is a significant market share that you can&amp;rsquo;t afford to lose. The solution is simple. If the app does indeed work fine on small screens (or you have fixed it to work), then all you got to do is add the below mentioned line in your AndroidManifest.xml:&lt;/p>
&lt;p>&lt;code>&amp;lt;supports-screens android:smallScreens=&amp;quot;true&amp;quot; /&amp;gt;&lt;/code>&lt;/p>
&lt;p>That&amp;rsquo;s it. Your app should now show up fine in all screen sizes markets. Note that for all other screen sizes and resolutions, Android considers the default support as true and your app will show in those markets even if you don&amp;rsquo;t make any explicit declarations for them. You can read more about this here: &lt;a href="http://developer.android.com/guide/practices/screens_support.html">Supporting Multiple Screens in Android&lt;/a>&lt;/p>
&lt;p>**Update: **&lt;a href="http://www.blundell-apps.com/">Blundell&lt;/a> pointed out in the comments that &lt;a href="http://developer.android.com/guide/practices/screens_support.html%23defaults">Android documentation&lt;/a> says&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>This should mean that small screens should be set as supported by default if you have your minSdk &lt;strong>or&lt;/strong> targetSdk Â set to anything above or equal to 4. However, in my case, my apps had minSdk as 3 but targetSdk as 7 or 8 but still they didn&amp;rsquo;t show up in X10 mini marketplace till I added the smallScreens support to true in my manifest file. If anyone has any ideas about as to why it was like this, please let me know.&lt;/p></content></item><item><title>SSH Tunneling On Android</title><link>/2010/08/02/ssh-tunneling-android/</link><pubDate>Mon, 02 Aug 2010 10:53:36 +0000</pubDate><guid>/2010/08/02/ssh-tunneling-android/</guid><description>If you want to have a secure browsing environment or just want to access your home network securely without exposing extra services to the internet and without the mess that comes with setting up and maintaining a VPN server, ssh tunneling is your rescuer. In this post, I&amp;rsquo;ll tell you how to setup an ssh tunnel to your home network easily. Also look for some bonus tips at the end ;)</description><content>&lt;p>If you want to have a secure browsing environment or just want to access your home network securely without exposing extra services to the internet and without the mess that comes with setting up and maintaining a VPN server, ssh tunneling is your rescuer. In this post, I&amp;rsquo;ll tell you how to setup an ssh tunnel to your home network easily. Also look for some bonus tips at the end ;)&lt;/p>
&lt;p>This article assumes that you have already installed and setup a ssh server (you can probably use openssh). Also, it assumes that the ssh server is accessible from the internet (i.e. you have appropriately forwarded the port on which ssh server is running). I&amp;rsquo;d also recommend that if you do not have a static IP for your home network, then sign up for a dynamic DNS service (I use dyndns.org) so that you can access your home network easily by using a domain name (e.g. myserver.dyndns.org) from outside.&lt;/p>
&lt;p>Now, here is a step by step guide on what to do on your Android Phone (I&amp;rsquo;m doing this on a Nexus one but should be same for you as well):&lt;!-- raw HTML omitted -->1. Install an app called &amp;ldquo;connectbot&amp;rdquo; from the android marketplace. It is a FREE ssh client for android.&lt;/p>
&lt;ol start="2">
&lt;li>Open it and add the IP (or dynamic domain name as suggested above) and the port on which ssh server is running to the bottom and connect.&lt;/li>
&lt;/ol>
&lt;p>&lt;a href="/img/uploads/ssh-tunnel-1.png">&lt;img src="/img/uploads/ssh-tunnel-1-thumb.png" alt="Android SSH Tunnel 1">&lt;/a>&lt;/p>
&lt;ol start="2">
&lt;li>Once connected, press the menu button and select the icon which says &amp;ldquo;Port Forwards&amp;rdquo;&lt;/li>
&lt;/ol>
&lt;p>&lt;a href="/img/uploads/ssh-tunnel-2.png">&lt;img src="/img/uploads/ssh-tunnel-2-thumb.png" alt="Android SSH Tunnel 2">&lt;/a>&lt;/p>
&lt;ol start="3">
&lt;li>On this screen you can configure the ports to be used for tunneling. As you can see I already have my firefly server port configured for music streaming over itunes&amp;rsquo; DAAP protocol. Now, you can press &amp;ldquo;menu&amp;rdquo; button and click on &amp;ldquo;Add ports&amp;rdquo; and go to step 4.&lt;/li>
&lt;/ol>
&lt;p>&lt;a href="/img/uploads/ssh-tunnel-3.png">&lt;img src="/img/uploads/ssh-tunnel-3-thumb.png" alt="Android SSH Tunnel 3">&lt;/a>&lt;/p>
&lt;ol start="4">
&lt;li>You will see the dialog box as shown below. Here you can configure mainly two types of ports.&lt;/li>
&lt;/ol>
&lt;p>&lt;a href="/img/uploads/ssh-tunnel-4.png">&lt;img src="/img/uploads/ssh-tunnel-4-thumb.png" alt="Android SSH Tunnel 4">&lt;/a>&lt;/p>
&lt;p>4a) First is for services that you want to access already running on your home network. e.g. in my case, I have a firefly media server (mt-daapd) running on a port &amp;ldquo;12345&amp;rdquo; and I want to access this just like I was on LAN over my home wi-fi. In such a case, select &amp;ldquo;type&amp;rdquo; as &amp;ldquo;Local&amp;rdquo;, source port as , say &amp;ldquo;56000&amp;rdquo; and destination as &amp;ldquo;ip:port&amp;rdquo; where ip is the your home local area IP of the machine on which the server is running (My server runs on router itself, which has IP 192.168.1.1) and the port is the actual port on which server is running (e.g. 12345 as we mentioned above). After doing this, just open the respective client app on your phone which wants to connect to this server and enter &amp;ldquo;127.0.0.1&amp;rdquo; as the ip and &amp;ldquo;56000&amp;rdquo; as the port to connect to and it will connect to server as if you were on your home network even over 3G or your office wi-fi.&lt;/p>
&lt;p>4b) Secondly, you can use this tunnel to route all traffic to internet through home connection. For this, choose the type as &amp;ldquo;dynamic&amp;rdquo; and source port as, say, &amp;quot; 56001&amp;quot;. You don&amp;rsquo;t need to select a destination port here because any traffic that comes over this tunnel will be routed back to the internet using the destination ip and port as desired, e.g., specified in a browser&amp;rsquo;s address bar.&lt;/p>
&lt;p>**Bonus: **As I promised above, here is the bonus. For media streaming, you can use mt-daapd or firefly server on your home network, especially on a router like asus wl-500 or any other hackable router with custom firmware. For more info about how to set it up, you can check these posts:&lt;a href="/2009/07/03/compiling-latest-firefly-mt-daapd-asus-wl-500w.html"> Latest Firefly server for your router&lt;/a> and &lt;a href="/2010/07/26/firefly-sqlite-error-unable-to-open-database-file-solution.html">firefly sqlite error solution&lt;/a>. Â For android side things, install the &amp;ldquo;DAAP Client&amp;rdquo; app from the market place and click on &amp;ldquo;Add server&amp;rdquo; option and follow step 4a as mentioned above. And there it is, your own music streaming service anywhere in the world, over edge/3G or any other network :)&lt;/p></content></item><item><title>Camera LED As Flashlight on Non-Rooted Android Phones</title><link>/2010/07/30/camera-led-flashlight-non-rooted-android-phones/</link><pubDate>Fri, 30 Jul 2010 09:31:08 +0000</pubDate><guid>/2010/07/30/camera-led-flashlight-non-rooted-android-phones/</guid><description>We all know that Android does not allow the camera LED to be controlled directly from apps and hence, you cannot use the camera LED as a Torch or Flashlight unless you are rooted. There are many flashlight apps on the Android Market Place but none of them will work for you if you don&amp;rsquo;t have a rooted phone. BUT this changed recently. I use a brilliant app called &amp;ldquo;quick settings&amp;rdquo; which keeps an icon in the notification bar and I can pull it down and change any settings without leaving other apps.</description><content>&lt;p>We all know that Android does not allow the camera LED to be controlled directly from apps and hence, you cannot use the camera LED as a Torch or Flashlight unless you are rooted. There are many flashlight apps on the Android Market Place but none of them will work for you if you don&amp;rsquo;t have a rooted phone. BUT this changed recently. I use a brilliant app called &amp;ldquo;quick settings&amp;rdquo; which keeps an icon in the notification bar and I can pull it down and change any settings without leaving other apps. It has a flashlight function but so far it used to work by turning on the screen with a white screen, which was a less than ideal solution. I upgraded to the latest version a few days ago (1.9.4 p1). While messing around with the settings, I wandered across the flashlight settings which allows you to choose what kind of flashlight you want. Now, I&amp;rsquo;m not sure whether this setting was present earlier or not but I decided to give it a try and chose LED instead of screen (Screenshot below):&lt;/p>
&lt;p>&lt;a href="/img/uploads/quick-settings-flash-android-settings.png">&lt;img src="/img/uploads/quick-settings-flash-android-settings-thumb.png" alt="Android Quick Settings Flashlight LED Settings">&lt;/a>&lt;/p>
&lt;p>Once done, I went back to the main screen and pressed the flashlight icon in the top right (Screen shot below) and voila! my camera LED switched on. I&amp;rsquo;m a happy camper now as this is a life saver many times. Try this out for yourself by searching for &amp;ldquo;Quick Settings&amp;rdquo; in the market and let me know if it works on your phone too (mine is a nexus one).&lt;/p>
&lt;p>&lt;a href="/img/uploads/quick-settings-flash-android-main-screen.png">&lt;img src="/img/uploads/quick-settings-flash-android-main-screen-thumb.png" alt="Android Quick Settings">&lt;/a>&lt;/p></content></item><item><title>Android App Wi-Fi Keep Alive updated to 1.4.1</title><link>/2010/07/22/android-app-wi-fi-keep-alive-updated-1-4-0/</link><pubDate>Thu, 22 Jul 2010 16:58:07 +0000</pubDate><guid>/2010/07/22/android-app-wi-fi-keep-alive-updated-1-4-0/</guid><description>Update: Made a minor update for a small bug that can make wi-fi keep reconnecting in quick succession.
Pushed out a new update to my Android App Wi-Fi Keep Alive today. This update brings in another work around for the issue where the wi-fi is alive on the phone and it is also connected to the network but is somehow unable to send/receive any packets to the network. The new work around will automatically re-associate your phone with the wi-fi router if it detects such a situation.</description><content>&lt;p>&lt;strong>Update:&lt;/strong> Made a minor update for a small bug that can make wi-fi keep reconnecting in quick succession.&lt;/p>
&lt;p>Pushed out a new update to my Android App Wi-Fi Keep Alive today. This update brings in another work around for the issue where the wi-fi is alive on the phone and it is also connected to the network but is somehow unable to send/receive any packets to the network. The new work around will automatically re-associate your phone with the wi-fi router if it detects such a situation. This seems to make it work properly again for sometime. When it fails again, the workaround kicks in automatically again. This is not an ideal &amp;ldquo;fix&amp;rdquo; as such because streaming apps like Pandora radio etc might have a hiccup because of this but it is unavoidable as of now and atleast the notifications for mails and other things etc will work fine because this state stops even the mobile data network from taking over since the phone perceives that wi-fi is connected but is not working actually.&lt;/p>
&lt;p>The other things include support for small screen devices like Xperia X10 mini, some optimizations for size and speed, some icon sizes and UI tweaks for compatibility with different screen sizes and android versions. Please try it out from the market as usual and let me know how it goes.&lt;/p></content></item><item><title>BadTokenException Error In Android Dialog</title><link>/2010/07/08/badtokenexception-android-dialog-getapplicationcontext/</link><pubDate>Thu, 08 Jul 2010 11:24:14 +0000</pubDate><guid>/2010/07/08/badtokenexception-android-dialog-getapplicationcontext/</guid><description>If you are creating a custom Dialog for Android, and following the Android Developersâ Creating Dialogs tutorial, then most likely you would have faced a Force Close with this exception showing up in logcat. I did too. Although I figured it out quickly, it might not be easy to find out for many, so posting it here for reference. Basically, the code given in the tutorial goes something like this:</description><content>&lt;p>If you are creating a custom Dialog for Android, and following the &lt;a href="http://developer.android.com/guide/topics/ui/dialogs.html">Android Developersâ Creating Dialogs&lt;/a> tutorial, then most likely you would have faced a Force Close with this exception showing up in logcat. I did too. Although I figured it out quickly, it might not be easy to find out for many, so posting it here for reference. Basically, the code given in the tutorial goes something like this:&lt;/p>
&lt;pre tabindex="0">&lt;code>Context mContext = getApplicationContext();
Dialog dialog = new Dialog(mContext);
dialog.setContentView(R.layout.custom_dialog);
dialog.setTitle(&amp;#34;Custom Dialog&amp;#34;);
TextView text = (TextView) dialog.findViewById(R.id.text);
text.setText(&amp;#34;Hello, this is a custom dialog!&amp;#34;);
ImageView image = (ImageView) dialog.findViewById(R.id.image);
image.setImageResource(R.drawable.android);
&lt;/code>&lt;/pre>&lt;p>All looks well, but when you execute it, you will get a Force Close. The error appearing in logcat would be something like this:&lt;/p>
&lt;pre tabindex="0">&lt;code>Uncaught handler: thread main exiting due to uncaught exception
android.view.WindowManager$BadTokenException: Unable to add window -- token null is not for an application
&lt;/code>&lt;/pre>&lt;p>It isnât apparent immediately that what is causing this error. The very first line in the code âContext mContext = getApplicationContext();â is the culprit.&lt;/p>
&lt;p>&lt;strong>Solution:&lt;/strong> Just replace âgetApplicationContext()â with âthisâ (i.e. âContext mContext = this;â ) and it will work fine.&lt;/p>
&lt;p>&lt;strong>Explanation:&lt;/strong> As to why this is exactly an issue, Iâm a bit fuzzy about it myself but this much Iâm sure that the contexts that you get with getApplicationContext and this are different. On reading about this function from Android SDK help:&lt;/p>
&lt;blockquote>
&lt;p>Return the context of the single, global Application object of the current process. This generally should only be used if you need a Context whose lifecycle is separate from the current context, that is tied to the lifetime of the process rather than the current component.&lt;/p>
&lt;/blockquote>
&lt;p>I think this would mean is that getApplicationContext returns a context which is for the application itself and not the activity, while âthisâ would give you the context of the activity in which you are creating the dialog. I think since it is the activity which is associated with the UI (and for whom the window has been created), using the application context would have caused the crash here.&lt;/p></content></item><item><title>Android App: Wi-Fi Keep Alive Updated to 1.2.0</title><link>/2010/07/03/android-app-wi-fi-keep-alive-updated-to-1-2-0/</link><pubDate>Sat, 03 Jul 2010 22:46:36 +0000</pubDate><guid>/2010/07/03/android-app-wi-fi-keep-alive-updated-to-1-2-0/</guid><description>Just finished uploading the new version 1.2.0 of my android app Wi-Fi Keep Alive to the Android market. This version has a lot of optimizations and also a few workarounds to overcome the issues few guys were facing with Android&amp;rsquo;s in-built handling of wi-fi sleep policies.
Changes done in this version:
Added workarounds to take care of sleep policies not working on some phones
Optimized the code a bit for faster operations</description><content>&lt;p>Just finished uploading the new version 1.2.0 of my android app Wi-Fi Keep Alive to the Android market. This version has a lot of optimizations and also a few workarounds to overcome the issues few guys were facing with Android&amp;rsquo;s in-built handling of wi-fi sleep policies.&lt;/p>
&lt;p>Changes done in this version:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Added workarounds to take care of sleep policies not working on some phones&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Optimized the code a bit for faster operations&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Added Configuration screens to widgets (pops up whenever widget is added)&lt;/p>
&lt;/li>
&lt;/ul></content></item><item><title>Android App: Wi-Fi Keep Alive</title><link>/2010/06/28/android-app-wi-fi-keep-alive/</link><pubDate>Mon, 28 Jun 2010 15:25:48 +0000</pubDate><guid>/2010/06/28/android-app-wi-fi-keep-alive/</guid><description>I just wrote my second Android App. This again was to scratch an itch of mine but it seems to have become a bit popular already (My first app &amp;ldquo;Quick Sync Settings&amp;rdquo; did around 400 downloads in 20 days but this one has already surpassed that in less than one day). This app basically allows you to change the wi-fi sleep policy on android so that you can keep your wi-fi connected even if the phone goes to sleep (i.</description><content>&lt;p>I just wrote my second Android App. This again was to scratch an itch of mine but it seems to have become a bit popular already (My first app &amp;ldquo;Quick Sync Settings&amp;rdquo; did around 400 downloads in 20 days but this one has already surpassed that in less than one day). This app basically allows you to change the wi-fi sleep policy on android so that you can keep your wi-fi connected even if the phone goes to sleep (i.e. screen turns off). What&amp;rsquo;s more is that I&amp;rsquo;ve added a widget to it so you don&amp;rsquo;t even have to go into the app. Just tap on the widget to cycle through the settings.&lt;/p></content></item><item><title>Android vs iPhone: Security Models</title><link>/2010/06/25/android-vs-iphone-security-models/</link><pubDate>Fri, 25 Jun 2010 22:02:49 +0000</pubDate><guid>/2010/06/25/android-vs-iphone-security-models/</guid><description>Android and iPhone OS (iOS) have been at loggerheads for quite some time now. This is a take on which has a better security model to protect its users. I thought of writing it up because there have been a lot of discussions around me lately about which platform is more secure and I keep repeating the same points over and over at every one of them, so thought that in future I&amp;rsquo;ll just point them to this page :P</description><content>&lt;p>Android and iPhone OS (iOS) have been at loggerheads for quite some time now. This is a take on which has a better security model to protect its users. I thought of writing it up because there have been a lot of discussions around me lately about which platform is more secure and I keep repeating the same points over and over at every one of them, so thought that in future I&amp;rsquo;ll just point them to this page :P&lt;/p>
&lt;p>&lt;strong>Disclaimer:&lt;/strong>&lt;/p>
&lt;p>A. I don&amp;rsquo;t guarantee this post to be absolutely correct as I&amp;rsquo;m no security researcher or expert but I do have some interest in this field and I&amp;rsquo;ve been a developer for some time now on different architectures and OSs especially at OS/driver level and that too in the mobile devices field, so I &amp;ldquo;might&amp;rdquo; actually be right about a few things here and there..&lt;/p>
&lt;p>B. I&amp;rsquo;m an android user myself but not of the fanboy variety. I&amp;rsquo;ll be happy to switch camps any day I get something that appeals to me better. I have love and hate points for almost all platforms available but I&amp;rsquo;m using android because &amp;ldquo;for me&amp;rdquo; it&amp;rsquo;s love points slightly outnumber the hate points.&lt;/p>
&lt;p>OK, on with the points then. Here is the table that I created for this showing points I considered and which side wins each. Don&amp;rsquo;t start flaming me though just by seeing the table :P I will be discussing the points as well below it.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Android
iPhone&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>1. Distribution Medium Security:&lt;/strong> Apple vets every application that is put on the app store while Google&amp;rsquo;s Market Place is unrestricted. How does this affect you security wise?&lt;/p>
&lt;p>**a.Â Approval Process: **The biggest myth is that the vetting process is what will save you from malware on app store. IT WON&amp;rsquo;T. The Apple app approval process isn&amp;rsquo;t defined anywhere but in general it just states that it checks for apps to do what they say they will do. But they don&amp;rsquo;t check the source code of the apps and static analysis of binaries can only take you so far (Heck, they have even been inept at catching a whole lot of apps that were using their disallowed private apis which can be found easily using simple tools) . So, anyone actually wanting to write a malware can do it trivially by making the malicious code to run after the app has been approved. The trigger could be time based or could even be done over the web remotely. The app could even have encrypted payloads or download new pieces of code over the web and run them.Â So, we can safely say that approval process is something that can&amp;rsquo;t make things secure for you that way.&lt;/p>
&lt;p>&lt;strong>Result: No one wins&lt;/strong>&lt;/p>
&lt;p>**
**&lt;/p>
&lt;p>&lt;strong>b. Phishing:&lt;/strong> This is where App store can protect you if someone put an app claiming to be from someone that it isn&amp;rsquo;t. e.g. Someone could make an app that claims to be from &amp;ldquo;Bank of America&amp;rdquo;. In apple&amp;rsquo;s case, I&amp;rsquo;m 99.99% sure that the app won&amp;rsquo;t pass the screening but in Android&amp;rsquo;s case, there won&amp;rsquo;t be any hassles for it to reach the marketplace. It could be pulled soon after as google learns about it but still even one person&amp;rsquo;s damage here is much more than what would have happend on iPhone.&lt;/p>
&lt;p>&lt;strong>Result: iPhone wins&lt;/strong>&lt;/p>
&lt;p>**
**&lt;/p>
&lt;p>&lt;strong>2. Local Security:&lt;/strong> What about the security in the OS itself once an app is on your phone? This is an important question because 1.) As I noted above, Apple&amp;rsquo;s app screening process isn&amp;rsquo;t robust enough to catch malware 2.) People can bypass the official distribution medium easily. Android allows to install apps from other sources on most phones by just enabling an option and a huge number of people jailbreak their iPhones and get/use this capability.&lt;/p>
&lt;p>&lt;strong>a. Permissions:&lt;/strong> On Android, an app has to explicitly declare what capabilities/data of the phone it wants to access/use and the user has to explicitly give it those permissions before it is allowed to install, irrespective of from where/how this app is being installed. So, it works even if you are installing the app from your SD card and even if you have rooted your phone. On iPhone, there is no such mechanism of restricting apps. All apps are equal and can access a lot of resources unhindered without the user knowing. So, while installing a single player only game on android you can immediately be suspicious if the app is asking for internet connection or access to your contacts data but on iPhone you will not come to know about this.&lt;/p>
&lt;p>&lt;strong>Result: Android wins&lt;/strong>&lt;/p>
&lt;p>**
**&lt;/p>
&lt;p>&lt;strong>b. Environment:&lt;/strong> On both platforms, the apps run in their own sandboxes with unique uuids&lt;/p>
&lt;p>&lt;strong>Result: Tie&lt;/strong>&lt;/p>
&lt;p>**
**&lt;/p>
&lt;p>&lt;strong>3. Open vs Closed:&lt;/strong> Most of the Android code is open source while for iOS, only darwin kernel and some other things like webkit etc are open source. Now, this in itself doesn&amp;rsquo;t gurantee to make Android secure but its code does get a lot of scrutiny from open source community as well as lot of other big name companies with commercial interests in Android which allows it to find and fix more bugs and loopholes than iPhone can.&lt;/p>
&lt;p>&lt;strong>Result: Slight win for Android&lt;/strong>&lt;/p>
&lt;p>**
**&lt;/p>
&lt;p>&lt;strong>4. App development model:&lt;/strong> Most apps for Android are written in java while those in iPhone are written in C/Objective-C. While I&amp;rsquo;m myself a big time C lover (Majority of my coding is in C/CPP) but it is indeed a very unforgiving language where you need to be very careful with what you write and has much greater chances of exploits, .e.g, Buffer overflows, as compared to java (Interestingly, all the jailbreaks for iPhone OS have been done using such exploits and have been made available day 0/day 1 mostly.)&lt;/p>
&lt;p>&lt;strong>Result: Slight win for Android&lt;/strong>&lt;/p>
&lt;p>**
**&lt;/p>
&lt;p>&lt;strong>5. Damage Control:&lt;/strong> What if an app actually got through everything on any of these platforms and started spreading? Both of these platforms have kill switches in the hands of Google/Apple which they can use to remove such malicious apps from the users&amp;rsquo; phones remotely.&lt;/p>
&lt;p>&lt;strong>Result: Tie&lt;/strong>&lt;/p>
&lt;p>**
**&lt;/p>
&lt;p>Summary: Well, there is no clear winner. Apple is quite good when it comes to protecting you from phishing (though that advantage goes away if you jailbreak and use alternative means to install apps) and Android has a real sound local security system (though it also has the flaw that users might not always understand why an app is requesting a certain critical permission and install it anyways). So, take your pick and let me know what you picked :) and please do tell me if I&amp;rsquo;m wrong in any of my points or missed out on something that needs to be compared.&lt;/p></content></item><item><title>How To Debug Android Widgets</title><link>/2010/06/13/how-to-debug-android-widgets/</link><pubDate>Sun, 13 Jun 2010 18:42:42 +0000</pubDate><guid>/2010/06/13/how-to-debug-android-widgets/</guid><description>For most new android app developers (like me), it is a bit puzzling how to debug the android widgets or how to put a breakpoint in an android widget code. For normal applications, it is quite simple as when you press &amp;ldquo;debug&amp;rdquo; on the eclipse toolbar, it launches the emulator (or connects to existing emulator/device), syncs your application and launches its main activity and puts the control in your hands if you have put a breakpoint.</description><content>&lt;p>For most new android app developers (like me), it is a bit puzzling how to debug the android widgets or how to put a breakpoint in an android widget code. For normal applications, it is quite simple as when you press &amp;ldquo;debug&amp;rdquo; on the eclipse toolbar, it launches the emulator (or connects to existing emulator/device), syncs your application and launches its main activity and puts the control in your hands if you have put a breakpoint. For widgets, it seems a bit tricky because there is no activity to be launched, so eclipse just syncs your widget&amp;rsquo;s apk and installs it and that&amp;rsquo;s it. So, is it possible or not to debug widget code? and if yes, then is it very difficult? Fortunately, it is possible and very easy to do but just slightly less intuitive and I couldn&amp;rsquo;t find any information about it at Android developers website and learnt it by just fumbling around for a few minutes so thought of posting here for the benefit of other newbies like me.&lt;/p>
&lt;p>So, all you need to debug your widget code is almost same as what you do for normal applications. Just follow the below steps:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Press &amp;ldquo;debug&amp;rdquo; on the eclipse menu (or &amp;ldquo;run&amp;rdquo; it doesn&amp;rsquo;t seem to matter)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Once the widget apk is sync&amp;rsquo;ed and installed onto your emulator/device, switch your eclipse workspace to DDMS mode. You can either do this by pressing the &amp;ldquo;DDMS&amp;rdquo; labeled button on your top right corner or if you can&amp;rsquo;t find it, then do it by going to &amp;ldquo;Window-&amp;gt;Open Perspective-&amp;gt;DDMS&amp;rdquo;.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Select the process name of your widget from the list of processes shown. By default, this list appears at top left of DDMS window. (See screenshot below). If you can&amp;rsquo;t see your widget&amp;rsquo;s process name in the list, it is possible that the widget is not added to the home screen yet. So, do so.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Press the green debug button above the process list (See screenshot below)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>And that&amp;rsquo;s it. Now, if you had put a breakpoint in the code, do something that executes that piece of the code.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;a href="/img/uploads/debug-android-widget-eclipse.png">&lt;img src="/img/uploads/debug-android-widget-eclipse-thumb.png" alt="Screenshot to show how to debug android widgets in eclipse">&lt;/a>&lt;/p>
&lt;p>Let me know if this helped you out or if you see anything that I missed out. Happy coding :)&lt;/p></content></item><item><title>Android App: Quickly Open Accounts &amp; Sync Settings</title><link>/2010/06/12/android-app-quickly-open-accounts-sync-settings/</link><pubDate>Sat, 12 Jun 2010 21:19:35 +0000</pubDate><guid>/2010/06/12/android-app-quickly-open-accounts-sync-settings/</guid><description>Just a small post to let you know that I just published a small app in the android market, which scratches an itch of mine and I thought probably it will be help others too. It basically provides a quick, one-click access to the accounts and sync settings of Android. The use case for me was that I need to enable/disable syncing for my work email while I&amp;rsquo;m at work every day as I am already in front of my office PC so don&amp;rsquo;t need to waste battery and be annoyed by mail notifications on phone but still need to keep google calendar syncing.</description><content>&lt;p>Just a small post to let you know that I just published a small app in the android market, which scratches an itch of mine and I thought probably it will be help others too. It basically provides a quick, one-click access to the accounts and sync settings of Android. The use case for me was that I need to enable/disable syncing for my work email while I&amp;rsquo;m at work every day as I am already in front of my office PC so don&amp;rsquo;t need to waste battery and be annoyed by mail notifications on phone but still need to keep google calendar syncing. To do this I had to spend too many clicks and long-presses to get to the accounts settings, so made this app. Let me know if you like it.&lt;/p></content></item><item><title>Apple is Magical: Daniel Eran Gilder is the Living Proof</title><link>/2010/06/10/apple-magical-dan-eran-gilder/</link><pubDate>Thu, 10 Jun 2010 04:49:53 +0000</pubDate><guid>/2010/06/10/apple-magical-dan-eran-gilder/</guid><description>Update: Removed the post as the person in consideration has contacted me with the explanation of what went down. Iâm not sure if it is completely true or this is just as a response to this post but anyways, as I had contended in the original post that it was a stupid little thing that didnât really warrant any attention or a post but I still did it just because Iâm weird, so in the light of the developments, I think itâs best to remove the rants and focus on actual discussion.</description><content>&lt;p>Update: Removed the post as the person in consideration has contacted me with the explanation of what went down. Iâm not sure if it is completely true or this is just as a response to this post but anyways, as I had contended in the original post that it was a stupid little thing that didnât really warrant any attention or a post but I still did it just because Iâm weird, so in the light of the developments, I think itâs best to remove the rants and focus on actual discussion. Iâll be discussing the points put out by Dan over his blog or might make a post about them here..&lt;/p></content></item><item><title>Android Froyo And Nexus One: Everything We Know</title><link>/2010/05/23/android-froyo-nexus-one/</link><pubDate>Sun, 23 May 2010 17:44:18 +0000</pubDate><guid>/2010/05/23/android-froyo-nexus-one/</guid><description>This is an effort from my side to consolidate everything about Android Froyo with respect to Nexus One. It is mainly concentrated towards listing the features/fixes that we have seen in Froyo that weren&amp;rsquo;t announced in Google I/O, things that work with nexus one, things that don&amp;rsquo;t and possible fixes/workarounds known, what the announced features actually feel like in real use etc.** Will keep updating this post as I get more info, get more fixes, etc.</description><content>&lt;p>This is an effort from my side to consolidate everything about Android Froyo with respect to Nexus One. It is mainly concentrated towards listing the features/fixes that we have seen in Froyo that weren&amp;rsquo;t announced in Google I/O, things that work with nexus one, things that don&amp;rsquo;t and possible fixes/workarounds known, what the announced features actually feel like in real use etc.** Will keep updating this post as I get more info, get more fixes, etc. Please do let me know if I&amp;rsquo;ve missed something or there is some new development that should be updated here.**&lt;/p>
&lt;p>**UPDATED: **&lt;/p>
&lt;p>&lt;strong>27-MAY-2010 (Added things missing since Eclair and few other notes)&lt;/strong>&lt;/p>
&lt;p>&lt;strong>25-MAY-2010 (Added market missing apps fix, 802.11n and other features)&lt;/strong>&lt;/p>
&lt;p>&lt;strong>24-MAY-2010 (Added more un-announced features/fixes/changes)&lt;/strong>&lt;/p>
&lt;p>&lt;strong>To start with, just a quick recap of things that were announced and their look/feel/working in real use (First is the announced feature and then after &amp;ldquo;:&amp;rdquo; is the effect that we see)&lt;/strong>&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>Feature/Fix&lt;/strong>&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>Real Effects seen by us&lt;/strong>&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>Remarks&lt;/strong>&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>JIT for Dalvik JVM&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Apps are quite fast, visible difference animation effects, scrolling, games etc&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>None&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Better Exchange support with calendar sync/GAL /remote wipe/account-auto-discovery/administation&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Works as advertised&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Exchange support still not upto the mark. e.g. No support for selective folder sync, subfolders are not synced automatically, no phone number/location for GAL contacts, no âmove to folderâ, no search, etc.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Backup Application data/settings/history in cloud&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Yet to experience&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>I&amp;rsquo;ve enabled the settings for this but haven&amp;rsquo;t switched to another ROM yet or figured out how to test it in some other way.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Cloud Messaging to activate intents&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Works as advertised&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>very cool feature. Try out this chrome extension to send links from chrome to your phone: &lt;a href="http://code.google.com/p/chrometophone/">Chrome2Phone&lt;/a>&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>USB Tethering and Portable Wireless Hotspot&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Works as advertised&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Real skin-saver. Works great and easily.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Javascript V8 Engine for Android Browser&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Much faster javascript execution&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Much better browsing experience noted.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>HTML5 support/Device Access (Camera/Accelerometer etc) through Browser&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Work In Progress. See Remarks&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Contrary to what many people tell you, this is still not there. HTML5 support is an ongoing thing and device access through browser would be present in Gingerbread (Next Android iteration, supposedly 3.0)&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Better Voice Input Integration&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>&amp;ldquo;Seems&amp;rdquo; better.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Now, I don&amp;rsquo;t have any tangible means to measure this but it seems to be working relatively better and it even seems to understand my non-US accent much better.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Flash 10.1 beta support&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Works as advertised&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Almost every flash functionality in all sites I visited work ok. Please note that you need to install Flash from market as it doesn&amp;rsquo;t come &amp;ldquo;built-in&amp;rdquo;. Just search for &amp;ldquo;Adobe&amp;rdquo; in market.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Install apps on SD card&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Not tested.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>This feature requires support from apps to integrate this and currently no apps support it. There is a command that you can run from adb shell &amp;ldquo;adb shell pm setInstallLocation 2&amp;rdquo; but it will cause &amp;ldquo;all&amp;rdquo; your apps to install to the card plus users report problems on missing apps as SD card is not available immediately at boot up.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Better global search integration for apps&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Works as advertised&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Now, apps can allow search to search within their data. Right now the official twitter app supports this and you can search your timeline from the main android search itself.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Update all apps in one click/automatic updates&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Works as advertised&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>None.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Stream music from PC to phone&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Yet to test.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>None. As pointed out by Hugo, it is not clear yet that this is supposed to be part of Froyo or GingerBread.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Improved crash reporting to developers&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Works as advertised&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Really useful to the developers as it sends complete report about the environment and stack trace etc.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Purchase music/apps on android market and push directly to device Over The Air&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Yet to test&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>New market website that allows this hasn&amp;rsquo;t appeared yet. As pointed out by Hugo, it is not clear yet that this is supposed to be part of Froyo or GingerBread.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>Now, we move on to things that weren&amp;rsquo;t announced but we found them in the updates. This may be because these pieces were too small or specific to nexus one to have warranted a place in the Google I/O keynote.&lt;/strong>&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>Feature/Fix&lt;/strong>&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>Remarks&lt;/strong>&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Erratic/Crazy Touchscreen behaviour fixes&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>This is about the erratic behaviour of the touchscreen that sometimes all the touches were being registered at the wrong places and one had to tap twice on the power button to fix it. So far, it seems that this has been fixed.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Multi-touch fixes&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>This seems to be a hardware problem and there are no &amp;ldquo;fixes&amp;rdquo; to it as such but there seems to be a new touchscreen API in the 2.2 Froyo SDK that google is encouraging developers to use to alleviate this issue somewhat by doing some filtering/scaling within the Android framework.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>SMS App fix&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>The messaging app had a nagging issue that many times it showed the first few words of a text message as the sender instead of the actual number/sender. This seems to be fixed now.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Capacitive Touch Button fix&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Nexus one was quite famous for its mal-functioning cap-touch buttons that didn&amp;rsquo;t seem to register the touches of a user. We had to press slightly above them most times to register a touch. This seems to be fixed now and feels much better.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Multi-Color Trackball&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>The nexus one trackball can now display multiple colors instead of just white. e.g. a nee facebook update received makes it glow blue :)&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Better Camera/Gallery Interface&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>The new camera/gallery interface is just awesome and much easier to use. Feature wise I think the new options are focus settings, zoom settings and storage location quick switch, flash on during video recording for night video capture. I must also mention that auto-flash works much better now as earlier it used to almost always fire even in quite ample light but that maybe just me.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>Now, on our list are things/apps that don&amp;rsquo;t work or issues that plague the new update. We will also be listing the workarounds/fixes if known for them.&lt;/strong>&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>Issues&lt;/strong>&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>Fix/Workaround/Remarks&lt;/strong>&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Seesmic app keeps giving &amp;ldquo;Connection error&amp;rdquo; with froyo&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Simple fix is to delete your existing account in seesmic. Setup a new account and uncheck &amp;ldquo;Secure connection&amp;rdquo; in advanced setup.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Swype doesn&amp;rsquo;t work&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Just uninstall swype and swype installer and download/install them again and it will work.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Pure Calendar doesn&amp;rsquo;t work&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>New versions have been released to make them work&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Android market doesn&amp;rsquo;t show a lot of apps&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>As of now, android market is not showing a lot of paid/copy-protected apps on the market for froyo users. There is a workaround for root users available here: &lt;a href="http://forum.xda-developers.com/showthread.php?t=687371">http://forum.xda-developers.com/showthread.php?t=687371&lt;/a>&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Worse radio/3G performance&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Several users at modaco/xda-devs report worse performance with 3G. They say downgrading back to previous radio fixes this but try it at your own risk.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>Things missing since previous versions (i.e. Eclair):&lt;/strong>&lt;/p>
&lt;p>(Thanks to Marc for suggestion)&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>Things missing&lt;/strong>&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>No â.comâ button on the default Android keyboard&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>The final part of this post is for things that were rumored to be in the Froyo update for nexus one but aren&amp;rsquo;t present:&lt;/strong>&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>**Rumored Feature/fix **(Not present in Nexus One Froyo Update)&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>FM Radio Receiver&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>FM Transmitter&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>That&amp;rsquo;s it for now. This is a huge post and I must have missed out on a lot of things for sure. So, if you remember something that I have missed or something has changed over past few days after I wrote/updated this post, please do let me know in comments.&lt;/p></content></item><item><title>Android Froyo Update File</title><link>/2010/05/22/android-froyo-update/</link><pubDate>Sat, 22 May 2010 19:36:34 +0000</pubDate><guid>/2010/05/22/android-froyo-update/</guid><description>Just a quick post to tell you how to update your Nexus One to Android 2.2 Froyo immediately without waiting for google to send it to you OTA.
Download this file from google&amp;rsquo;s servers: http://android.clients.google.com/packages/passion/signed-passion-FRF50-from-ERE27.1e519a24.zip
After that just follow the below mentioned steps:
Put it on your SD card and rename to update.zip
Power off then hold trackball and press power again to boot into recovery
Go to Bootloader -&amp;gt; Recovery</description><content>&lt;p>Just a quick post to tell you how to update your Nexus One to Android 2.2 Froyo immediately without waiting for google to send it to you OTA.&lt;/p>
&lt;p>Download this file from google&amp;rsquo;s servers: &lt;a href="http://android.clients.google.com/packages/passion/signed-passion-FRF50-from-ERE27.1e519a24.zip">http://android.clients.google.com/packages/passion/signed-passion-FRF50-from-ERE27.1e519a24.zip&lt;/a>&lt;/p>
&lt;p>After that just follow the below mentioned steps:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Put it on your SD card and rename to update.zip&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Power off then hold trackball and press power again to boot into recovery&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Go to Bootloader -&amp;gt; Recovery&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Press power button + Vol. Increase&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Apply the update&lt;/p>
&lt;/li>
&lt;/ol></content></item><item><title>The Future Of Cell-Phones Is Here</title><link>/2008/11/23/the-future-of-cell-phones-is-here/</link><pubDate>Sun, 23 Nov 2008 21:00:59 +0000</pubDate><guid>/2008/11/23/the-future-of-cell-phones-is-here/</guid><description>My company had a video contest a few days ago (which yours-truly won by a handsome margin :) ). The topic was âFuture of Wirelessâ as perceived by the employees but with the catch that it had to be done in just 10 seconds or less.
Now, everyone know that there is rarely a moment when I can think like a normal, sane person, and hence took a rather âalternativeâ look at what the future holds for us.</description><content>&lt;p>My company had a video contest a few days ago (which yours-truly won by a handsome margin :) ). The topic was âFuture of Wirelessâ as perceived by the employees but with the catch that it had to be done in just 10 seconds or less.&lt;/p>
&lt;p>Now, everyone know that there is rarely a moment when I can think like a normal, sane person, and hence took a rather âalternativeâ look at what the future holds for us. (Hint: âMine is biggerâ jokes are gonna be in fashion again ;) ). Take a look below and donât forget to leave your comments on how you liked it. So, without further ado, I present to you â&lt;strong>Welcome ToÂ A Phone-Y Future&lt;/strong>â.
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/fMhRPIPBJ3w?autoplay=0&amp;controls=1&amp;end=0&amp;loop=0&amp;mute=0&amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"
>&lt;/iframe>
&lt;/div>
&lt;/p>
&lt;p>&lt;strong>NOTE: If you like it, you can &lt;a href="http://digg.com/submit?phase=2&amp;amp;url=http%3A%2F%2Ftech.shantanugoel.com%2F2008%2F11%2F24%2Fthe-future-of-cell-phones-is-here.html&amp;amp;title=The%20Future%20Of%20Cell-Phones%20Is%20Here">digg &lt;/a>, &lt;a href="http://www.reddit.com/r/funny/comments/7fa2x/the_future_of_cellphones_is_here/">reddit&lt;/a> or &lt;a href="http://www.stumbleupon.com/submit?url=http%3A%2F%2Ftech.shantanugoel.com%2F2008%2F11%2F24%2Fthe-future-of-cell-phones-is-here.html&amp;amp;title=The%20Future%20Of%20Cell-Phones%20Is%20Here">stumble&lt;/a> it&lt;/strong>&lt;/p></content></item></channel></rss>