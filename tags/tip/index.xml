<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tip on</title><link>/tags/tip/</link><description>Recent content in Tip on</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 27 Mar 2009 14:00:50 +0000</lastBuildDate><atom:link href="/tags/tip/index.xml" rel="self" type="application/rss+xml"/><item><title>TIP: Perforce - Sync Files In A Label Without Deleting Previous Files</title><link>/2009/03/27/p4perforce-sync-files-label-without-deleting-previous/</link><pubDate>Fri, 27 Mar 2009 14:00:50 +0000</pubDate><guid>/2009/03/27/p4perforce-sync-files-label-without-deleting-previous/</guid><description>If you have used perforce, you&amp;rsquo;d have definitely come across a situation where you wanted to sync files belonging to two different labels, but as soon as you sync the second label, the files from the first label get deleted. P4 help suggests the following ways to achieve this:
p4 sync @label1,label2
or something like
`p4 sync @label1,@label2``
But I&amp;rsquo;ve found that depending on the perforce version you are using, the above commands might not work.</description><content>&lt;p>If you have used perforce, you&amp;rsquo;d have definitely come across a situation where you wanted to sync files belonging to two different labels, but as soon as you sync the second label, the files from the first label get deleted. P4 help suggests the following ways to achieve this:&lt;/p>
&lt;p>&lt;code>p4 sync @label1,label2&lt;/code>&lt;/p>
&lt;p>or something like&lt;/p>
&lt;p>`p4 sync @label1,@label2``&lt;/p>
&lt;p>But I&amp;rsquo;ve found that depending on the perforce version you are using, the above commands might not work. So, here is a tip that will always work for you irrespective of which version you are using:&lt;/p>
&lt;p>&lt;code>p4 files @label | cut --delimiter=&amp;quot; &amp;quot; -f1 | p4 -x - sync -n&lt;/code>&lt;/p>
&lt;p>It is as simple as that. Let me know what are your perforce tips..&lt;/p></content></item><item><title>An Idea Is All You Need</title><link>/2008/04/12/an-idea-is-all-you-need-2/</link><pubDate>Sat, 12 Apr 2008 15:43:32 +0000</pubDate><guid>/2008/04/12/an-idea-is-all-you-need-2/</guid><description>Everyone wants to make a name for himself. Everyone wants to do something new and extra-ordinary. People like me (read software engineers) want to develop &amp;ldquo;something&amp;rdquo; cool. BUT, the stage where most of them go wrong is the very first one. Most of them think that the road to develop something cool starts from a particular &amp;ldquo;language&amp;rdquo; or a tool. But I beg to differ. I say the first stage is &amp;ldquo;The Idea&amp;rdquo;.</description><content>&lt;p>Everyone wants to make a name for himself. Everyone wants to do something new and extra-ordinary. People like me (read software engineers) want to develop &amp;ldquo;something&amp;rdquo; cool. BUT, the stage where most of them go wrong is the very first one. Most of them think that the road to develop something cool starts from a particular &amp;ldquo;language&amp;rdquo; or a tool. But I beg to differ. I say the first stage is &amp;ldquo;The Idea&amp;rdquo;.&lt;/p>
&lt;p>Most of my friends and others around me think that having a particular skill set is very important to develop something the world hasn&amp;rsquo;t seen till now. And for this they end up reading through piles of books, which claim to make them a master in C, C++, PHP, Python, Web 2.0 and what not. This is all OK, but the problem is, when they have gone through the books, done all the exercises, made all the samle projects, then they have a question in their minds &amp;ldquo;Now What&amp;rdquo;?&lt;/p>
&lt;p>What I think is that this question should have been asked in the very beginning of the journey. And it should have been answered by the occurrence of a new idea.&lt;/p>
&lt;p>Don&amp;rsquo;t get me wrong. I&amp;rsquo;m all for reading books, developing skill sets, learning new technologies, etc. But the only point I want to make is that all this is a &amp;ldquo;means&amp;rdquo; to give your &amp;ldquo;idea&amp;rdquo; a shape. They are not where your story begins. What if you spent a lot of time acquiring perl skills and then when (and if) you get your brilliant idea, you find out that the best way to implement it would be using C. Are you back to square one? No. Skills acquired are never a waste. &amp;ldquo;Concepts&amp;rdquo; developed can easily be applied to the new tool that you have to use.&lt;/p>
&lt;p>But one more thing, its again not a hard rule that now you should just sit in your chair all day long and keep thinking. I bet its much harder to get the idea stream flowing that way. Ideas don&amp;rsquo;t have a pattern that they follow while coming into your mind. They may come to you any place unexpected (I get most of mine while bathing ;-) ).&lt;/p>
&lt;p>But there is something you can do to ensure that your brain gets accustomed to recognize an idea when you do get it. So, while you are reading through that book on C programming, don&amp;rsquo;t just get engrossed in typing out the exact source code that&amp;rsquo;s fed to you. &amp;ldquo;Think&amp;rdquo; about whether is that enough? Can you make some modification to it so that it becomes more efficient? Can you tweak it a bit to do more than its already doing?&lt;/p>
&lt;p>Keep your eyes open when you go around your daily chores. Think when you open your door whether wouldn&amp;rsquo;t it be nice if the door could recognize you are there and open itself. There&amp;rsquo;s your idea. And while you are at it, think wouldn&amp;rsquo;t it be even nicer if your home would have poured you a cool drink itself when you enter it?&lt;/p>
&lt;p>Now, tell me whether you would like to wait to think about these ideas till you read the book&amp;rsquo;s epilogue, or do you want to start thinking now?&lt;/p></content></item><item><title>Ubuntu TIP: Extending Nautilus, Scripting Your Way To UI Bliss</title><link>/2008/03/09/ubuntu-tip-extending-nautilus-scripting-your-way-to-ui-bliss/</link><pubDate>Sun, 09 Mar 2008 16:10:18 +0000</pubDate><guid>/2008/03/09/ubuntu-tip-extending-nautilus-scripting-your-way-to-ui-bliss/</guid><description>I&amp;rsquo;m back from my vacation and this is a smallish post before we return to our regular programming (I&amp;rsquo;m full of puns ).
Rahul (my friend and guest author on this blog) introduced me to an old-but-useful trick a few days ago that I didn&amp;rsquo;t know about. It&amp;rsquo;s about customizing nautilus to display a context menu that has a few of your chosen scripts to weave their magic on the selected object.</description><content>&lt;p>I&amp;rsquo;m back from my vacation and this is a smallish post before we return to our regular programming (I&amp;rsquo;m full of puns &lt;img src="/img/uploads/smile3.gif" alt=""> ).&lt;/p>
&lt;p>Rahul (my friend and guest author on this blog) introduced me to an old-but-useful trick a few days ago that I didn&amp;rsquo;t know about. It&amp;rsquo;s about customizing nautilus to display a context menu that has a few of your chosen scripts to weave their magic on the selected object. And the procedure to do this is summarized in just two steps:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Write your script.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Save it in ~/.gnome2/nautilus-scripts and make it executable&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Of course, if you don&amp;rsquo;t know scripting the first step itself is quite daunting, but you can get a lot of pre-cooked scripts on the internet by searching for &amp;ldquo;&lt;a href="http://www.google.com/search?hl=en&amp;amp;q=nautilus+scripts&amp;amp;btnG=Google+Search">nautilus scripts&lt;/a>&amp;rdquo;. e.g. take a look at &lt;a href="http://g-scripts.sourceforge.net/">g-scripts homepage&lt;/a>.&lt;/p>
&lt;p>To get you started immediately, here is a crude example to open a terminal/console window in any folder/path through right-click menu:&lt;/p>
&lt;hr>
&lt;p>Step 1) Write your script (any scripting language: shell, perl, python, etc):&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>Step 2) Save it in ~/.gnome2/nautilus-scripts, name it as &amp;ldquo;Terminal&amp;rdquo; and make it executable.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;!-- raw HTML omitted -->
&lt;/blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;p>Step 3) Now, you should see a &amp;ldquo;Scripts&amp;rdquo; option in your right-click menu as shown below. Clicking on &amp;ldquo;Terminal&amp;rdquo; will open a new terminal window with the present working directory being set to the selected folder.&lt;/p>
&lt;/blockquote>
&lt;/blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;p>&lt;a href="/img/uploads/nautilus_scripts.png">&lt;img src="/img/uploads/nautilus_scripts_thumb.jpg" alt="Nautilus_scripts">&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;/blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;p>&lt;strong>Note:&lt;/strong> If you don&amp;rsquo;t see the &amp;ldquo;scripts&amp;rdquo; menu option (or your script name in the extended menu), then just run&lt;/p>
&lt;/blockquote>
&lt;/blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;!-- raw HTML omitted -->
&lt;/blockquote>
&lt;/blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;p>Let me know if you face any problems with this or have any other questions.&lt;/p>
&lt;/blockquote>
&lt;/blockquote>
&lt;/blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;/blockquote>
&lt;/blockquote>
&lt;/blockquote></content></item><item><title>Ubuntu TIP: Automating Package Installation â€“ apt-get to the rescue</title><link>/2008/03/06/ubuntu-tip-automating-package-installation--apt-get-to-the-rescue/</link><pubDate>Thu, 06 Mar 2008 03:30:20 +0000</pubDate><guid>/2008/03/06/ubuntu-tip-automating-package-installation--apt-get-to-the-rescue/</guid><description>Admin Note: Rahul is a long time friend of mine, and is a well known geek amongst his friends and colleagues. I&amp;rsquo;m happy to announce that he will be enriching this site from time-to-time as a guest editor/author. First up is a small tid-bit of a script that he wrote to ease up his life between installations and reinstallations of everyone&amp;rsquo;s favourite OS: Ubuntu. Over to his post..
Have you ever had to reinstall your ubuntu installation, and then bear the pain of manually installing the applications you&amp;rsquo;ve come to love (i mean use :)) everyday?</description><content>&lt;p>&lt;strong>Admin Note:&lt;/strong> Rahul is a long time friend of mine, and is a well known geek amongst his friends and colleagues. I&amp;rsquo;m happy to announce that he will be enriching this site from time-to-time as a guest editor/author. First up is a small tid-bit of a script that he wrote to ease up his life between installations and reinstallations of everyone&amp;rsquo;s favourite OS: Ubuntu. Over to his post..&lt;/p>
&lt;p>Have you ever had to reinstall your ubuntu installation, and then bear the pain of manually installing the applications you&amp;rsquo;ve come to love (i mean use :)) everyday? If yes, then cheer up buddy, because all you really need is some magic (read scripting), some typing and spend some time digging the package names of your favourite applications.&lt;/p>
&lt;p>To get started, you&amp;rsquo;ll need to type the package information in a configuration file. The format of the file is really simple&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Any line starting with a # is ignored&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Blank lines are ignored&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Any other line, the first word is taken as the package name you want to install&lt;/p>
&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;!-- raw HTML omitted -->
&lt;/blockquote>
&lt;p>In case you do not specify the configFile (e.g. package-names.lst), it will bug you to manually enter packages names :D.&lt;/p>
&lt;p>What this script does is&lt;/p>
&lt;blockquote>
&lt;blockquote>
&lt;/blockquote>
&lt;/blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;ol>
&lt;li>read package names from the file specified (or bug user for package names in case filename is not specified)&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;/blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;ol start="2">
&lt;li>install these packages&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;/blockquote>
&lt;p>That&amp;rsquo;s it. And if everything runs fine, you should have a system will all your beloved apps installed.&lt;/p>
&lt;p>The below snippet from the sample configuration file would install the packages â€“ hardinfo, gmountiso, devilspie and nautilus-open-terminal. The lines for sysinfo and istanbul would be ignored. In case you later wish to install these packages, all you need to do is uncomment the line, and run the script again :).&lt;/p>
&lt;blockquote>
&lt;blockquote>
&lt;!-- raw HTML omitted -->
&lt;/blockquote>
&lt;/blockquote>
&lt;p>Note:&lt;/p>
&lt;blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;/blockquote>
&lt;/blockquote>
&lt;/blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;ol>
&lt;li>The script will fail in case the package cannot be found using the repositories enabled on your system.&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;/blockquote>
&lt;/blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;ol start="2">
&lt;li>In case you use additional repositories, you must add these manually to your apt configuration file, and do&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;/blockquote>
&lt;/blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;!-- raw HTML omitted -->
&lt;/blockquote>
&lt;/blockquote>
&lt;/blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;ol start="3">
&lt;li>The hard part is not the installation, but setting up the applications to your likings :D&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;/blockquote>
&lt;/blockquote>
&lt;/blockquote></content></item></channel></rss>