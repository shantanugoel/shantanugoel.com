<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Google Chrome on</title><link>/tags/google-chrome/</link><description>Recent content in Google Chrome on</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 23 Sep 2011 09:12:06 +0000</lastBuildDate><atom:link href="/tags/google-chrome/index.xml" rel="self" type="application/rss+xml"/><item><title>Adding Lyrics to SharkZapper for Grooveshark</title><link>/2011/09/23/adding-lyrics-to-sharkzapper-for-grooveshark/</link><pubDate>Fri, 23 Sep 2011 09:12:06 +0000</pubDate><guid>/2011/09/23/adding-lyrics-to-sharkzapper-for-grooveshark/</guid><description>I bet all of you know about grooveshark, the awesome music service. And sharkzapper is a cool chrome extension that puts the control and information about anything playing in your grooveshark chrome tab into a little button on the address bar. It is a very good extension but I felt that what it was missing was lyrics. Before I could comment on the extension&amp;rsquo;s chrome market page, I noticed that it has a github repository.</description><content>&lt;p>I bet all of you know about grooveshark, the awesome music service. And sharkzapper is a cool chrome extension that puts the control and information about anything playing in your grooveshark chrome tab into a little button on the address bar. It is a very good extension but I felt that what it was missing was lyrics. Before I could comment on the extension&amp;rsquo;s chrome market page, I noticed that it has a github repository. &amp;ldquo;Open Source&amp;rdquo;, oh joy. So, I forked the repository and after some hacking around, I&amp;rsquo;ve now added support for automatic searching and fetching of the currently playing song into the sharkzapper popup window and it updates itself whenever the song changes.&lt;/p>
&lt;p>What was even cooler that I learnt a bit about using YQL in the process :)&lt;/p>
&lt;p>I&amp;rsquo;ve sent in a pull request to the author of the extension to the original author of the extension to merge this code. In the meanwhile, if you would like to try this out, you can hit up my &lt;strong>&lt;a href="https://github.com/shantanugoel/sharkzapper">github repository&lt;/a>&lt;/strong>, download the code and install into chrome by enabling developer mode and choosing &amp;ldquo;Load unpacked extension&amp;rdquo;.&lt;/p>
&lt;p>Happy listening :)&lt;/p></content></item><item><title>Chrome Script/Extension installation error: Could not read source file</title><link>/2011/09/19/chrome-scriptextension-installation-error-could-not-read-source-file/</link><pubDate>Mon, 19 Sep 2011 16:58:00 +0000</pubDate><guid>/2011/09/19/chrome-scriptextension-installation-error-could-not-read-source-file/</guid><description>This is a solution to the issue that I faced today while installing a javascript file from userscripts.org as an extension into google chrome (Yes, Chrome supports installing greasemonkey javascripts as extensions). I had already installed this script once into my browser earlier but when I tried installing it again today, it started giving me a weird error &amp;ldquo;Could not read source file&amp;rdquo;. I tried all possible means, like putting it on a different server, installing from local disk, changing versions, deleting all cache, etc but still the issue persisted.</description><content>&lt;p>This is a solution to the issue that I faced today while installing a javascript file from userscripts.org as an extension into google chrome (Yes, Chrome supports installing greasemonkey javascripts as extensions). I had already installed this script once into my browser earlier but when I tried installing it again today, it started giving me a weird error &amp;ldquo;Could not read source file&amp;rdquo;. I tried all possible means, like putting it on a different server, installing from local disk, changing versions, deleting all cache, etc but still the issue persisted.&lt;/p>
&lt;p>Finally looking into the source code of the chromium browser svn repository, I got a clue. What google chrome does when you install a script as installation is that it first downloads the script, then it calls a function ConvertUserScriptToExtension to convert the script into a google chrome compatible script and then installs it. Now, since I had already installed this script once, I found that the script was already existing in my downloads directory, so while downloading chrome renames it to &lt;!-- raw HTML omitted -->(1).js (i.e., appends a number to it to distinguish from the original file). But it seems like that the path sent to the conversion function still uses the original name/path and it somehow finds that the older file is not the downloaded one but also doesn&amp;rsquo;t know which is the current downloaded one and hence fails with an error &amp;ldquo;Could not read source file&amp;rdquo;.&lt;/p>
&lt;p>Solution: Pretty simple. Just delete the original file present in your download directory and then try installing the script and it will install fine :)&lt;/p></content></item></channel></rss>