<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Transparent Dns Proxy on</title><link>/tags/transparent-dns-proxy/</link><description>Recent content in Transparent Dns Proxy on</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 17 Sep 2016 17:14:43 +0000</lastBuildDate><atom:link href="/tags/transparent-dns-proxy/index.xml" rel="self" type="application/rss+xml"/><item><title>Indian ISP ACT Fibernet blocks bit.ly. Does DNS Hijacking</title><link>/2016/09/17/indian-isp-act-fibernet-blocks-bit-ly-does-dns-hijacking/</link><pubDate>Sat, 17 Sep 2016 17:14:43 +0000</pubDate><guid>/2016/09/17/indian-isp-act-fibernet-blocks-bit-ly-does-dns-hijacking/</guid><description>TLDR;
Indian ISP ACT Fibernet (aka Beam Telecom) hijacks its users&amp;rsquo; DNS requests (even when using public DNS servers like Google or OpenDNS) and blocks websites through this method. This has huge implications beyond website blocking and you can&amp;rsquo;t rely on anything that you are browsing anymore though there are ways available to make yourself safe.
Aside: Indian ISPs are blocking benign/collateral damage sites now like bit.ly for ACT and behance.</description><content>&lt;h2 id="hahahugoshortcode269s0hbhb">
&lt;figure class="left" >
&lt;img src="/img/2016/09/censored.jpg" alt="Censored!" />
&lt;/figure>
&lt;/h2>
&lt;p>&lt;strong>TLDR;&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>Indian ISP ACT Fibernet (aka Beam Telecom) hijacks its users&amp;rsquo; DNS requests (even when using public DNS servers like Google or OpenDNS) and blocks websites through this method. This has huge implications beyond website blocking and you can&amp;rsquo;t rely on anything that you are browsing anymore though there are ways available to make yourself safe.&lt;/p>
&lt;p>Aside: Indian ISPs are blocking benign/collateral damage sites now like bit.ly for ACT and behance.net for Airtel. Pretty soon most of web will be blocked in India at this rate.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Update:&lt;/strong> It seems that some folks on ACT do not see the block/DNS hijack. So far, they all seem to be on dynamic IP. It could be either that the hijacking is being done only for static IP folks or for specific IP ranges. Please comment here or tweet to me @shantanugoel if you are on ACT but do not see the block and/or dns hijack.&lt;/p>
&lt;p>&lt;strong>Update 2:&lt;/strong> Got a call from ACT team and they&amp;rsquo;ve unblocked bit.ly this morning. However, DNS hijacking, the primary problem, still seems to be there for many users.&lt;/p>
&lt;h2 id="the-whole-shebang">&lt;strong>The Whole shebang&lt;/strong>&lt;/h2>
&lt;p>URL/website blocking is not new in India and ISPs causing it show up in weird ways is not new as well like we saw not too long ago:&lt;/p>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">So, we figured this out finally. &lt;a href="https://twitter.com/Cloudflare?ref_src=twsrc%5Etfw">@CloudFlare&lt;/a> is not really doing an MITM here but getting MITM&amp;#39;ed by airtel &lt;a href="https://t.co/Htild9sWIv">https://t.co/Htild9sWIv&lt;/a>&lt;/p>&amp;mdash; Shantanu Goel (@shantanugoel) &lt;a href="https://twitter.com/shantanugoel/status/753275683359461376?ref_src=twsrc%5Etfw">July 13, 2016&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;p>We&amp;rsquo;ve come to expect such things happen already for sites which may host pirated content like TPB and other torrents sites, etc. But &amp;ldquo;shocked&amp;rdquo; or &amp;ldquo;surprised&amp;rdquo; would be understatements of what I felt when I saw that a generic url shortener like bit.ly was blocked as well. All I was trying to see was a benign backstory about CitrusPay founders shared by someone on twitter and BAM!&lt;/p>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">Now, bit.ly has been blocked in India. FML. Block everything. Block the internet itself BC. &lt;a href="https://t.co/e5MFLVXIao">pic.twitter.com/e5MFLVXIao&lt;/a>&lt;/p>&amp;mdash; Shantanu Goel (@shantanugoel) &lt;a href="https://twitter.com/shantanugoel/status/777074151450304513?ref_src=twsrc%5Etfw">September 17, 2016&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;figure class="left" >
&lt;img src="/img/2016/09/Selection_054.png" />
&lt;/figure>
&lt;h2 id="something-bigger-than-blocking">Something bigger than blocking&lt;/h2>
&lt;p>But the rage didn&amp;rsquo;t stop at this.&lt;/p>
&lt;p>I tried the usual way of adding &amp;ldquo;https&amp;rdquo; to bypass the block but it was highly unusual to see another error which said bit.ly closed my connection. I was sure bit.ly supports https as I could see on my Airtel connection. So this was weird.&lt;/p>
&lt;figure class="left" >
&lt;img src="/img/2016/09/Selection_056-300x160.png" />
&lt;/figure>
&lt;p>I tried a simple ping to bit.ly and well well well! It turns out, I am not even connecting to bit.ly at all but one of the servers of my ISP itself. The other sites like google.com were being resolved correctly.&lt;/p>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">Well, I&amp;#39;ll be damned :o bit.ly is pointing to &lt;a href="https://t.co/Yp6tdKp23o">https://t.co/Yp6tdKp23o&lt;/a> &lt;a href="https://t.co/thTD2dvEv3">pic.twitter.com/thTD2dvEv3&lt;/a>&lt;/p>&amp;mdash; Shantanu Goel (@shantanugoel) &lt;a href="https://twitter.com/shantanugoel/status/777081685305270272?ref_src=twsrc%5Etfw">September 17, 2016&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;p>This &amp;ldquo;might&amp;rdquo; have been okay/explained away if I was using my ISP&amp;rsquo;s DNS servers (even though it&amp;rsquo;d be unethical in my book even then). But I was NOT using ISP&amp;rsquo;s DNS servers in the first place (who does that, seriously?).&lt;/p>
&lt;p>I was using google&amp;rsquo;s public DNS servers at my router as well as PC level and resolve.conf is set to use localhost. So I was pretty sure I am using the google dns and I shouldn&amp;rsquo;t have got a fake IP back. &lt;strong>This was an even bigger red flag!&lt;/strong>&lt;/p>
&lt;p>I ran the nslookup on bit.ly through an online service and it gave me the correct bit.ly server IPs but running nslookup on my PC or even on my router gave me back the fake IP.
&lt;figure class="left" >
&lt;img src="/img/2016/09/Selection_057-300x197.png" />
&lt;/figure>
&lt;/p>
&lt;figure class="left" >
&lt;img src="/img/2016/09/058-300x189.png" />
&lt;/figure>
&lt;h2 id="transparent-dns-proxy--dns-hijacking">Transparent DNS Proxy / DNS Hijacking&lt;/h2>
&lt;figure class="left" >
&lt;img src="/img/2016/09/transparent-dns-proxy-300x185.png" />
&lt;/figure>
&lt;p>This is how (bad) ISPs do this. They look for all traffic on port 53 (the DNS port) and don&amp;rsquo;t let them go to the actual DNS server and fulfill it from their own DNS servers, thus forcing you to go to a location of their bidding.&lt;/p>
&lt;p>In my case, I tried running the various &amp;ldquo;DNS leak tests&amp;rdquo;/&amp;ldquo;Transparent Proxy detection&amp;rdquo; tests but they all came out fine. Because my ISP is doing something clever here. I am assuming that they look at all the addresses that you are trying to reach, and then serve the ones they are interested in from their servers while passing on the rest of the requests to your originally intended dns server.&lt;/p>
&lt;p>How these tests work is that they see your IP, then ask your browser to connect to some specific server (like 7325abcd.mydnsleaktest.com) and see the IP which is actually touching their dns servers to query that address. I looked at these results and they all showed google to be the one connecting to them and so that seemed fine.&lt;/p>
&lt;p>Luckily, my ISP is not doing this (cannot do this?) for the opendns test and it detected the proxying immediately.&lt;/p>
&lt;figure class="left" >
&lt;img src="/img/2016/09/Selection_059-300x78.png" />
&lt;/figure>
&lt;h2 id="implicationshow-to-protect-yourself">Implications/How to protect yourself&lt;/h2>
&lt;p>The situation is grim now because your ISP can control everything you visit on the internet and you wouldn&amp;rsquo;t even know. You could be sending all your searches to your ISP, giving your passwords to them through fake sites, or they could silently replace the script/css etc servers and track all of your behavior, the implications are endless.&lt;/p>
&lt;p>But all is not lost. There are a few ways to protect yourself from this:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Add the IP manually to your hosts file&lt;/strong>: (H/T https://twitter.com/electron0zero). This is the simplest way as it will bypass even connecting to DNS server at all. But is cumbersome as you have to manually add each site and also update it if the IP changes.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Get a VPN.&lt;/strong> I prefer this the least though because it is expensive, slow, and in general problematic to setup everywhere.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>**Reroute your DNS requests to some other non-standard port. **You will need to have a bit of iptables know-how for this and a router good enough to give you this access. But your ISP can&amp;rsquo;t (?) monitor every port for DNS traffic. Theoretically they could though.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Use DNSCrypt&lt;/strong>. This is my recommended method and what I chose to save myself. This is good in future as well to save you from other DNS attacks. From DNScrypt.org&lt;/p>
&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>DNSCrypt is a protocol that authenticates communications between a DNS client and a DNS resolver. It prevents DNS spoofing. It uses cryptographic signatures to verify that responses originate from the chosen DNS resolver and haven&amp;rsquo;t been tampered with.&lt;/p>
&lt;/blockquote>
&lt;p>Depending on your machines/routers, it can range from easy to difficult. On my Asus RT-N66U with custom firmware, all it took was one line of opkg command to install it and another few lines to start it up at boot and configure dnsmasq to use it.&lt;/p>
&lt;h2 id="closing">Closing&lt;/h2>
&lt;p>It&amp;rsquo;s not closed yet. I am talking to my ISP to figure this out and see if they will accept removing this kind of malpractice (I don&amp;rsquo;t think they will. But one has to try!). Please do share this to raise awareness. If you have any queries or any other information about this, please do get in touch with me on &lt;a href="https://twitter.com/shantanugoel">@shantanugoel&lt;/a>&lt;/p>
&lt;p>As an aside, this also means that there is an order out to block bit.ly as well and other ISPs may follow suite soon :|&lt;/p></content></item></channel></rss>