<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Electronics on</title><link>/tags/electronics/</link><description>Recent content in Electronics on</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 03 Aug 2014 15:33:12 +0000</lastBuildDate><atom:link href="/tags/electronics/index.xml" rel="self" type="application/rss+xml"/><item><title>Browser controlled Raspberry Pi Camera Car</title><link>/2014/08/03/browser-controlled-raspberry-pi-camera-car/</link><pubDate>Sun, 03 Aug 2014 15:33:12 +0000</pubDate><guid>/2014/08/03/browser-controlled-raspberry-pi-camera-car/</guid><description>Spent this weekend building a remote controlled car with a live camera feed with a Raspberry Pi doing the communication and brains duty. Pretty nice real time movement control and camera pan/tilt control through websockets with a live stream feeding back to any browser directly from the car through mjpg-streamer
(PS: Video is at the bottom of the post. Browser/video on TV courtesy ChromeCast. Casted my Nexus 5 screen to the TV simultaneously while controlling the car :) )</description><content>&lt;p>Spent this weekend building a remote controlled car with a live camera feed with a Raspberry Pi doing the communication and brains duty. Pretty nice real time movement control and camera pan/tilt control through websockets with a live stream feeding back to any browser directly from the car through mjpg-streamer&lt;/p>
&lt;p>(PS: Video is at the bottom of the post. Browser/video on TV courtesy ChromeCast. Casted my Nexus 5 screen to the TV simultaneously while controlling the car :) )&lt;/p>
&lt;p>Code: &lt;a href="https://github.com/shantanugoel/raspi-car">https://github.com/shantanugoel/raspi-car&lt;/a>&lt;/p>
&lt;figure class="left" >
&lt;img src="/img/2014/08/2014-08-03-03.44.32-300x225.jpg" />
&lt;/figure>
&lt;figure class="left" >
&lt;img src="/img/2014/08/2014-08-03-03.44.40-300x225.jpg" />
&lt;/figure>
&lt;p>&lt;strong>HW Used:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Dagu Chassis (Includes motors/tires and the plates)&lt;/li>
&lt;li>Dagu Pan/Tilt kit (Servos and brackets to mount the camera)&lt;/li>
&lt;li>Dagu Mini Driver (Arduino clone + Motor driver)&lt;/li>
&lt;li>Raspberry Pi (Model B but any could be used)&lt;/li>
&lt;li>A netgear ethernet to wifi adapter (Since I didn&amp;rsquo;t have the raspi cam so had to save a USB port and use this instead of USB wifi adapter)&lt;/li>
&lt;li>A cheap old USB webcam&lt;/li>
&lt;li>6 AA Cells&lt;/li>
&lt;li>A sony portable charger to power the raspberry pi and wifi adapter&lt;/li>
&lt;li>Wires/Screws/Spacers/Tools (lots of them)&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Features:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Control the car from any browser&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Can control motion as well as camera pan/tilt from browser using virtual joysticks (Requires multitouch to do pan/tilt as second joystick is needed for this)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Streams back video from car camera to the browser&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Can rotate left/right while being completely stationary&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Can have multiple connections to the car (not recommended for controlling)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Uses websockets for control and response is almost instantaneous like regular toy cars.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Responsive touch-anywhere joysticks using virtualjoystick (&lt;a href="https://github.com/jeromeetienne/virtualjoystick.js">https://github.com/jeromeetienne/virtualjoystick.js&lt;/a>)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>HW Setup overview:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Raspberry Pi connects to the USB webcam and Dagu Mini driver through second USB port (for serial comm)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Raspberry Pi powered by micro USB through portable charger&lt;/p>
&lt;/li>
&lt;li>
&lt;p>DAGU mini driver powered through a 6 AA battery pack (which powers the motors/servos as well)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Servos connected to Digital Pins 2 and 4&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Motors connected to Pins 8-11&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Wifi adapter powered through portable charger and connected to Pi through ethernet port&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>SW Setup Overview:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Use any Raspberry Pi software image. I used vanilla raspbian&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Get all my code from my github: &lt;a href="https://github.com/shantanugoel/raspi-car">https://github.com/shantanugoel/raspi-car&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Compile and start mjpg-streamer using mjpg-streamer.sh (Compilation not needed if using my repo as I included a compiled version of mjpg-streamer and needed plugins)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Start websockets and Dagu communication driver back end: controller.py (python controller.py)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Open browser to &lt;code>http://rpi:8090&lt;/code> (or &lt;code>http://&amp;lt;RaspberryPiIPAddress&amp;gt;:8090&lt;/code>) from any device&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Touch anywhere to start controlling the car. Left half of screen corresponds to car movement joystick. Right half of screen corresponds to camera pan/tilt joystick. You can use either one of them or both simultaneously.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Some Important Points:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Found that you can&amp;rsquo;t use standard Servo library along with DC motors as it disables the PWM on pins 9 &amp;amp; 10 as it uses Timer 1 (Should have read the manual in the first place :| )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Used ServoTimer2 library to avoid this (since it uses timer 2) but it didn&amp;rsquo;t compile. Got it compiling and is added to my github repo as well so you can use it too.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ServoTimer2 disables use of digital pin 3 for servo. So had to use pin 4 for tilt&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Raspberry Pi has a back power connection somehow through its full USB port :o Avoid this as much as possible and power on the Pi first and then the battery pack on the Dagu mini driver&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The Sony portable charger is pretty nice and the power on/off button actually came in handy though I generally detested it otherwise. This helped in turning off the Pi (CP-F10 L is the model name if you want)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>There is a nice voltage monitor on the Dagu on analog pin 7. This helps in keeping track of the battery levels and can be used to shutdown the car when needed.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Servos get driven by the USB power as well but motors require battery power for sure&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/0OENujtgdg0?autoplay=0&amp;controls=1&amp;end=0&amp;loop=0&amp;mute=0&amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"
>&lt;/iframe>
&lt;/div></content></item></channel></rss>