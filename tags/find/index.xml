<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Find on Shantanu Vs The World</title><link>https://shantanugoel.com/tags/find/</link><description>Recent content in Find on Shantanu Vs The World</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>shantanu@shantanugoel.com (Shantanu Goel)</managingEditor><webMaster>shantanu@shantanugoel.com (Shantanu Goel)</webMaster><lastBuildDate>Tue, 03 Mar 2009 13:30:00 +0000</lastBuildDate><atom:link href="https://shantanugoel.com/tags/find/index.xml" rel="self" type="application/rss+xml"/><item><title>[TIP] Add Directories Recursively To Perforce (P4) Depot</title><link>https://shantanugoel.com/2009/03/03/add-directories-recursively-to-perforce-p4-depot/</link><pubDate>Tue, 03 Mar 2009 13:30:00 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2009/03/03/add-directories-recursively-to-perforce-p4-depot/</guid><description>Perforce is an excellent revision control system for the code but the GUIs (P4WIN and P4V) are too slow to be productive. Hence, I like to do most of my work through command lines. Now, the other day I needed to add a directory and all its subdirectories and files to the repository (or perforce depot). This is a trivial task through the GUI. Just drag the top level directory onto the changelist area and the GUI takes care of everything but there is no straightforward way to do this through command line, until, I discovered the &amp;ldquo;-x&amp;rdquo; option of P4.</description><content>&lt;p>Perforce is an excellent revision control system for the code but the GUIs (P4WIN and P4V) are too slow to be productive. Hence, I like to do most of my work through command lines. Now, the other day I needed to add a directory and all its subdirectories and files to the repository (or perforce depot). This is a trivial task through the GUI. Just drag the top level directory onto the changelist area and the GUI takes care of everything but there is no straightforward way to do this through command line, until, I discovered the &amp;ldquo;-x&amp;rdquo; option of P4. So, here it is how to achieve this. Run the following command after cd&amp;rsquo;ing to the directory you want to add:&lt;/p>
&lt;p>For Unix/Linux (or if you have the unix utils installed in windows through GNUWin32, UnixUtils or Cygwin):&lt;/p>
&lt;p>&lt;code>find . -type f -print | p4 -x - add&amp;lt;/blockquote&amp;gt;&lt;/code>&lt;/p>
&lt;p>For Windows:&lt;/p>
&lt;p>&lt;code>dir /b /s /a-d | p4 -x - add&amp;lt;/blockquote&amp;gt;&lt;/code>&lt;/p>
&lt;p>If you have your own tips and tricks about perforce to carry out tasks easily that do not seem so simple in the first go through command line, please do let me know.&lt;/p></content></item><item><title> TIP: Automating Website Backups - Part IIb (Reducing Backup Size Contd.)</title><link>https://shantanugoel.com/2008/02/28/tip-automating-website-backups-part-iib-reducing-backup-size-contd/</link><pubDate>Thu, 28 Feb 2008 04:00:00 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2008/02/28/tip-automating-website-backups-part-iib-reducing-backup-size-contd/</guid><description>Last time, I had told you about how to reduce the backup size. Well, this is a short note further developing on the approaches discussed there. Basically, telling tar to backup only those files which have changed. For this, Linux has a command “find” which I am very fond of. You can give it a option “-newer” followed by a f”filename” and it will return the names of the files that are newer than filename.</description><content>&lt;p>&lt;a href="http://tech.shantanugoel.com/2008/02/25/tip-automating-website-backups-part-ii-reducing-backup-size.html">Last time&lt;/a>, I had told you about how to reduce the backup size. Well, this is a short note further developing on the approaches discussed there. Basically, telling tar to backup only those files which have changed. For this, Linux has a command “find” which I am very fond of. You can give it a option “-newer” followed by a f”&lt;em>filename&lt;/em>” and it will return the names of the files that are newer than &lt;em>filename&lt;/em>.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>So, the command given above will find all the files that have changed since you took the backup “&lt;em>backup_x.tgz&lt;/em>” and store those filenames and paths into “_files.txt”. _The “-type f” option makes sure that only filenames are listed and not directory names, because tar creates a lot of issues when presented with directory names (Explore yourself about this).&lt;/p>
&lt;p>Now, all we have to do is give this “&lt;em>files.txt&lt;/em>” to tar as an input to tell it which files to archive.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;!-- raw HTML omitted -->
&lt;/blockquote>
&lt;p>The “-T files.txt” option makes this happen. Moreover, I have introduced 2 new options here, that were not present in our last part. They are:&lt;/p>
&lt;blockquote>
&lt;blockquote>
&lt;/blockquote>
&lt;/blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;ul>
&lt;li>p – Tells tar to preserve file permissions&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;/blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;ul>
&lt;li>G – Tells tar to ignore any file read errors etc and continue&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;/blockquote>
&lt;p>Apart from this, you can also take a look at the “-mtime x” option for find command which lets you specify to list files which have changed in past x days. There are other similar options available for find. Look at “man find” and take your pick. Similar options exist for tar, but I have had a lot of weird issues using them, so I’d recommend sticking with this two step process of “find” followed by “tar”.&lt;/p>
&lt;p>Now, the above mentioned commands and options can be used in innumerous ways and combinations to achieve your perfect balance of space and ease of use etc for backups. I’ll list down a sample script here, that will make a full backup on every first day of the week, and then make incremental backups over each day for rest 6 days. So, you’ll save a lot of space (more than 5 times), but you will have to use all 7 backup files to make a full restore. (I’m listing just the backup part, you can add the “mutt” command yourself, for e-mailing as mentioned in &lt;a href="http://tech.shantanugoel.com/2008/02/17/tip-automating-website-backups.html">Part I&lt;/a>)&lt;/p>
&lt;blockquote>
&lt;blockquote>
&lt;!-- raw HTML omitted -->
&lt;/blockquote>
&lt;/blockquote>
&lt;p>That’s it for today. Lemme know if you have any doubts, or if you would like to see any other questions answered in this series. The question that will be answered next time is:&lt;/p>
&lt;p>**Q2: **Cron? Using tar, making up the script file is enough command line for me. Isn’t there an easy way?&lt;/p></content></item></channel></rss>