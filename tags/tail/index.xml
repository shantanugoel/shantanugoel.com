<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tail on Shantanu Vs The World</title><link>https://shantanugoel.com/tags/tail/</link><description>Recent content in Tail on Shantanu Vs The World</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>shantanu@shantanugoel.com (Shantanu Goel)</managingEditor><webMaster>shantanu@shantanugoel.com (Shantanu Goel)</webMaster><lastBuildDate>Wed, 23 Dec 2009 18:10:44 +0000</lastBuildDate><atom:link href="https://shantanugoel.com/tags/tail/index.xml" rel="self" type="application/rss+xml"/><item><title>Continuous Monitoring With Tail Fails</title><link>https://shantanugoel.com/2009/12/23/continuous-monitor-tail-fails/</link><pubDate>Wed, 23 Dec 2009 18:10:44 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2009/12/23/continuous-monitor-tail-fails/</guid><description>If you can&amp;rsquo;t get tail command to continuously monitor a file, then read on. I was working on a script yesterday, a part of which depended on continuous monitoring of a text file. I had used our trusty old &amp;ldquo;tail&amp;rdquo; command for this but while testing by manually putting in some data into the file, it was failing but curiously it was working fine when used in actual scenario. Befuddled, I did a simple test.</description><content>&lt;p>If you can&amp;rsquo;t get tail command to continuously monitor a file, then read on. I was working on a script yesterday, a part of which depended on continuous monitoring of a text file. I had used our trusty old &amp;ldquo;tail&amp;rdquo; command for this but while testing by manually putting in some data into the file, it was failing but curiously it was working fine when used in actual scenario. Befuddled, I did a simple test. I created a simple text file &amp;ldquo;a.txt&amp;rdquo; with a few lines of data and then ran the following command.&lt;/p>
&lt;p>&lt;code>tail -f a.txt&lt;/code>&lt;/p>
&lt;p>It showed the last few lines of the file and kept waiting. So far so good. Then I opened the file in vim editor, wrote a few more lines, saved the file and then waited but nothing in the window that was running the tail command. Thinking that the data might be buffered and not flushed to the disc yet, I ran the sync command but still nothing.&lt;/p>
&lt;p>Then I got a hint that when I used the &amp;ldquo;-F&amp;rdquo; or &amp;ldquo;&amp;ndash;follow=name&amp;rdquo; option instead of &amp;ldquo;-f&amp;rdquo;, the tail command was able to detect the change just fine, the only problem being that in this mode, it prints the last few lines again, not just the newly added line. The main difference in these new options is that tail command tracks the file for changes by its name and not by the file descriptor, and then it dawned on me. The problem is not in the tail command but my testing method itself. When I save the file opened in vim, it creates a new file with a new inode while the one opened by tail is still the old one (which is now a temporary file which has actually been deleted). When I quit tail, then the kernel deletes the file automatically. This is also confirmed by running &amp;ldquo;lsof | grep a.txt&amp;rdquo; (lsof lists the open files and then we find the ones related to a.txt). The output shown is;&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>tail 11966 shantanu 3r REG 8,6 8 224954 /home/shantanu/dev/perl/plot/a.txt~ (deleted)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vim 12576 shantanu 9u REG 8,6 12288 210918 /home/shantanu/dev/perl/plot/.a.txt.swp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>which shows what we had discussed above. This gets worked around when I use the -F option because then tail periodically reopens the file by name and reads it again, thus bypassing the above issue. Then I simply tried running tail again on the same file and doing something like &amp;ldquo;echo abc &amp;raquo; a.txt&amp;rdquo; and I could see the behaviour as expected with tail immediately detecting the change and displaying it in its window. Hope this helps if you have been pulling out your hair thinking you have gone crazy as your favourite little tool that you have been using for so many years has suddenly stopped working and no one else apart from you is even complaining :P&lt;/p></content></item></channel></rss>