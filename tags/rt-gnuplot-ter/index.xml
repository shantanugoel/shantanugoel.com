<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rt-Gnuplot-Ter on</title><link>/tags/rt-gnuplot-ter/</link><description>Recent content in Rt-Gnuplot-Ter on</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 29 Dec 2009 11:15:51 +0000</lastBuildDate><atom:link href="/tags/rt-gnuplot-ter/index.xml" rel="self" type="application/rss+xml"/><item><title>Real Time Data Plotting with GNUPlot</title><link>/2009/12/29/real-time-plot-gnuplot/</link><pubDate>Tue, 29 Dec 2009 11:15:51 +0000</pubDate><guid>/2009/12/29/real-time-plot-gnuplot/</guid><description>I wrote this script a few days ago to plot real-time / streaming data with gnuplot. The motivation was that I needed to test a piece of code for a touchscreen driver that I had written at work. The issue was that the UI wasn’t quite ready yet, so I wanted to test just the driver to be working fine. Now, the very first thought for the software to use that came to me was “gnuplot” but I found that it can’t really do this in an easy way.</description><content>&lt;p>I wrote this script a few days ago to plot real-time / streaming data with gnuplot. The motivation was that I needed to test a piece of code for a touchscreen driver that I had written at work. The issue was that the UI wasn’t quite ready yet, so I wanted to test just the driver to be working fine. Now, the very first thought for the software to use that came to me was “gnuplot” but I found that it can’t really do this in an easy way. A colleague suggested me to use “replot” command with gnuplot. I whipped out my perl hat and a few hours later, voila!! my very own real time data plotter was ready. Now, I can stream data from any program to this script or provide the data on STDIN and can see the data being plotted continuously. BTW, it was awesome to see all the shapes that I drew on my target board’s LCD touchscreen to come alive on my PC monitor almost instantaneously.&lt;/p>
&lt;p>I call it “rtgnuplotter”. A weird name I know :P, but I just wanted to refer to it as a real time data plotter based on gnuplot.&lt;/p>
&lt;p>I’d love to hear from you if you found it useful. Please send in your bug reports and feature requests and I’d be glad if you could spread a word about it amongst your data-loving friends :)&lt;/p></content></item><item><title>RT-GNUPlot-ter</title><link>/2009/12/29/real-time-streaming-data-plot-gnuplot/</link><pubDate>Tue, 29 Dec 2009 10:52:56 +0000</pubDate><guid>/2009/12/29/real-time-streaming-data-plot-gnuplot/</guid><description>This is a script to plot streaming / real-time data (i.e. plot the points as the data comes in) with gnuplot. The script is written in perl and works in windows as well as linux. Please read on to see the requirements, installation, usage and download link. I should also thank my colleague Rabindra Mandal, who gave me the initial idea and Thanassis Tsiodras, whose script I looked at before creating mine (though mine is quite different in nature.</description><content>&lt;p>This is a script to plot streaming / real-time data (i.e. plot the points as the data comes in) with gnuplot. The script is written in perl and works in windows as well as linux. Please read on to see the requirements, installation, usage and download link. I should also thank my colleague Rabindra Mandal, who gave me the initial idea and &lt;a href="http://users.softlab.ece.ntua.gr/~ttsiod/gnuplotStreaming.html">Thanassis Tsiodras&lt;/a>, whose script I looked at before creating mine (though mine is quite different in nature. Tsiodras&amp;rsquo; script is for &amp;ldquo;moving&amp;rdquo; data like things with limitless ranges, while mine is more for data that has limitless occurences within a limited range as my main motivation behind it was to plot touchscreen data)&lt;/p>
&lt;p>&lt;strong>Note:&lt;/strong>&lt;/p>
&lt;p>You are free to download, install, modify and use this script for any commercial/non-commercial purposes. However, if you modify the script and/or re-distribute it, I’d like to request you to keep the attribution to me as the author intact in the script as well as provide a credit/linkback to this page in associated files/webpages etc.&lt;/p>
&lt;p>&lt;strong>I’d also be happy if you can send me your modifications to fix any bugs or add new features and would be glad to incorporate them and host them here if you want.&lt;/strong>&lt;/p>
&lt;p>You can also send in any bug reports or feature requests by posting a comment below.&lt;/p>
&lt;p>&lt;strong>Requirements:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://www.perl.org/get.html">Perl&lt;/a> (Tested on v5.6.1 and v5.10. If you have linux, this might already be installed. For Windows, please click on the link.)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.gnuplot.info/download.html">gnuplot&lt;/a> (Tested with v 4.2.6)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Installation:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Install the above mentioned requirements&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Make sure that you can run “perl” and “gnuplot” commands (“pgnuplot” instead of “gnuplot” if you have windows) in your shell/command prompt. If you see an issue, add the path to the executables for these to your environment variables.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Download the below linked zip file and unzip it to any location (preferably to a place where you have write permissions as a normal user).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Usage:&lt;/strong>&lt;/p>
&lt;p>The script is named rtgnuplotter.pl. The various details regarding its usage are as below:&lt;/p>
&lt;p>Input Parameters:&lt;/p>
&lt;pre tabindex="0">&lt;code>-xrange min:max (Optional) Horizantal Range
-yrange min:max (Optional) Vertical Range
-invertx        (Optional) Invert horizontal Axis
-inverty        (Optional) Invert Vertical Axis
-hex            (Optional) Input data is in hex (without leading 0x)
-joindots       (Optional) Data points are connected with lines
-h\\-help\\-v     (Optional) Print usage and version info&amp;lt;/blockquote&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Input Data: The input data for rtgnuplotter is expected to be two space separated numbers, the first number being for x axis and second for y axis. Each set of coordinates denoting a point to be plotted should be on a new line. Hexadecimal as well as decimal numbers are supported. For Hexadecimal input, use the “-hex” option but the numbers should not have “0x” prefix.&lt;/p>
&lt;p>Usage: All the options for rtgnuplotter are optional. You can run it with/without any options and it will wait for you to provide input on standard input. You can also pipe data into the script from another program using “|”. Few examples of the usage are:&lt;/p>
&lt;pre tabindex="0">&lt;code>perl rtgnuplotter.pl
tail -f mydata.log | grep --line-buffered “Data Points” | sed --unbuffered ‘s/.*x=\([0-9.-]*\).*y=\([0-9.-]*\).*/\1 \2/&amp;#39; | perl rtgnuplotter.pl&amp;lt;/blockquote&amp;gt;
&lt;/code>&lt;/pre>&lt;p>In the second example above, we get the data being written to a logfile by some other program, grep for the lines that have our points, then extract just the numbers with sed and then pass them to rtgnuplotter. Please note that “&amp;ndash;line-buffered” and “&amp;ndash;unbuffered” options used with grep and sed respectively, are important, otherwise you might not see your data being plotted immediately.&lt;/p>
&lt;p>The zip file also contains a test file “inp.pl” that you can use to test the script. inp.pl generates some random numbers To run the test, just cd to the place where you unzipped the file and run the command line given in 2nd example in one command window and “perl inp.pl &amp;gt; temp.txt” in another.&lt;/p>
&lt;p>&lt;em>Lost the files in a server move and not available anymore&lt;/em>&lt;/p></content></item></channel></rss>