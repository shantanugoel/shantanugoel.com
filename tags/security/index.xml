<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Security on Shantanu Vs The World</title><link>https://shantanugoel.com/tags/security/</link><description>Recent content in Security on Shantanu Vs The World</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 13 Mar 2017 16:46:24 +0530</lastBuildDate><atom:link href="https://shantanugoel.com/tags/security/index.xml" rel="self" type="application/rss+xml"/><item><title>Bypass ISP DNS hijack by changing DNS port on Ubiquiti USG router</title><link>https://shantanugoel.com/2017/03/13/bypass-isp-dns-hijack-ubiquiti-ubnt-usg/</link><pubDate>Mon, 13 Mar 2017 16:46:24 +0530</pubDate><guid>https://shantanugoel.com/2017/03/13/bypass-isp-dns-hijack-ubiquiti-ubnt-usg/</guid><description>&lt;h2 id="the-background">The Background&lt;/h2>
&lt;p>We talked earlier about how certain &lt;a href="https://shantanugoel.com/2016/09/17/indian-isp-act-fibernet-blocks-bit-ly-does-dns-hijacking/">ISPs block websites by using DNS hijack methods&lt;/a> and I had recommended using DNSCrypt to bypass it. Well, as part of my home network overhaul, I moved over from the consumer grade (but still decent enough) Asus router over to Ubiquiti stack which, among other things, lead me to use their &amp;ldquo;Unify Security Gateway (USG)&amp;rdquo; as the router. Now, this router is pretty decent and is running Ubiquiti&amp;rsquo;s EdgeOS (derived from Vyatta OS, which in turn is based on linux/debian). You can install and tweak a lot of stuff through command line if you&amp;rsquo;d like but alas there&amp;rsquo;s no dnscrypt-proxy available for it.&lt;/p></description><content>&lt;h2 id="the-background">The Background&lt;/h2>
&lt;p>We talked earlier about how certain &lt;a href="https://shantanugoel.com/2016/09/17/indian-isp-act-fibernet-blocks-bit-ly-does-dns-hijacking/">ISPs block websites by using DNS hijack methods&lt;/a> and I had recommended using DNSCrypt to bypass it. Well, as part of my home network overhaul, I moved over from the consumer grade (but still decent enough) Asus router over to Ubiquiti stack which, among other things, lead me to use their &amp;ldquo;Unify Security Gateway (USG)&amp;rdquo; as the router. Now, this router is pretty decent and is running Ubiquiti&amp;rsquo;s EdgeOS (derived from Vyatta OS, which in turn is based on linux/debian). You can install and tweak a lot of stuff through command line if you&amp;rsquo;d like but alas there&amp;rsquo;s no dnscrypt-proxy available for it.&lt;/p>
&lt;p>I had the below options now to overcome my ISP&amp;rsquo;s DNS hijacking:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Compile dnscrypt manually and use it&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Run dnscrypt on another server/device internally (maybe my NAS or the ubiquiti cloudkey or something)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Use one of the other options I had originally discussed (hosts file, VPN, alternate port)&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>I rejected the first option as it meant setting up a cross compilation environment just for one program and also it may be hard to keep up in future. The 2nd option wasn&amp;rsquo;t too good either as I didn&amp;rsquo;t want my network infrastructure&amp;rsquo;s basic need of DNS to depend on another device which may not be as resilient due to other regular use. From the other earlier discussed alternatives, I didn&amp;rsquo;t want to do the manual upkeep of hosts file or fall into the expensive/slow/insecure trap of VPNs. So I settled on the next best solution of using an alternate port for my DNS queries, with the hope that the ISP is dumb (or cost conscious) enough to rely only on port number to higjack DNS and not use DPI for it (even though &lt;a href="https://shantanugoel.com/2017/01/24/act-fibernet-deep-packet-inspection-blocking-sites/">they do use DPI for at least some types of blocking&lt;/a>).&lt;/p>
&lt;h2 id="testing-the-waters">Testing the Waters&lt;/h2>
&lt;p>First thing was to try whether this would even work or not. So I tried it easily by querying for a blocked torrent site first through ISP&amp;rsquo;s DNS servers, then OpenDNS servers on default DNS port (53) and then Open DNS servers on port 5353 (Yes, OpenDNS responds to dns queries on 5353 as well, fortunately.)&lt;/p>
&lt;figure class="left" >
&lt;img src="https://shantanugoel.com/img/2017/03/dns-queries-thumb.jpg" />
&lt;/figure>
&lt;p>In the first 2 attempts, the IP returned was my ISP&amp;rsquo;s hijacked reply (pointing to their own generic server that they use to respond to blocked site requests) but in the last one (using port 5353), the DNS request went unmodified and came back with the real IP of the website. Success!&lt;/p>
&lt;h2 id="configuring-the-usg">Configuring the USG&lt;/h2>
&lt;p>So, on to the real deal. USG does have a UI option in the Unify Controller software to set custom DNS servers. However, it takes only IPs and not ports. This is understandable as I found out after going through resolv.conf manpages and several old discussions. resolv.conf&amp;rsquo;s support for alternate ports has been discussed several times and rejected in favor of other system wide solutions.&lt;/p>
&lt;p>I had a thought to use iptables to forward all requests going out to WAN port 53 to port 5353. But, this is like using a shotgun to pop balloons. Firewall solutions like this should be used rarely as they strain the traffic processing as they build up quickly.&lt;/p>
&lt;p>USG uses dnsmasq though, so there was hope. DNSmasq allows to set ports as well for nameservers as per its manpage. So, the problem statement was thus as below:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Don&amp;rsquo;t use resolv.conf at all (to avoid ISP&amp;rsquo;s DNS servers or any other DNS servers leaking traffic onto port 53)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Set OpenDNS nameserver ip/port in dnsmasq for all sites (Generally folks use it for specific sites, but the configuration syntax is flexible enough to mould it anyways and we can set it as a generic server too)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>There&amp;rsquo;s no UI option for this though, so you&amp;rsquo;ve to drop down to the CLI. Launch an ssh session to the USG ip and use the credentials that you&amp;rsquo;ve set in the unify controller to log in. Then run the below set of commands. The procedure is slightly different from a regular linux box (where you&amp;rsquo;d directly edit dnsmasq.conf) due to the specific nature of config management of ubiquiti devices.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span># Switch to configuration mode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ configure
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Below commands will generate the appropriate dnsmasq.conf automaticall
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Don&amp;#39;t use resolve.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ set service dns forwarding options &amp;#34;no-resolv&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Set the opendns nameserver for all sites
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ set service dns forwarding options &amp;#34;server=208.67.222.222#5353&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Generate the config files, save and exit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ commit;save;exit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now, you can try browsing (or doing nslookup) for the blocked website and it&amp;rsquo;ll go through succesfully. Note that like all other CLI changes for USG, the above changes can be lost whenever you make some other config change through UI or update USG firmware. To make it persistent across such events, you need to follow the &lt;a href="https://help.ubnt.com/hc/en-us/articles/215458888-UniFi-How-to-further-customize-USG-configuration-with-config-gateway-json">config.gateway json process&lt;/a>.&lt;/p></content></item><item><title>Indian ISP ACT Fibernet blocks bit.ly. Does DNS Hijacking</title><link>https://shantanugoel.com/2016/09/17/indian-isp-act-fibernet-blocks-bit-ly-does-dns-hijacking/</link><pubDate>Sat, 17 Sep 2016 17:14:43 +0000</pubDate><guid>https://shantanugoel.com/2016/09/17/indian-isp-act-fibernet-blocks-bit-ly-does-dns-hijacking/</guid><description>&lt;h2 id="hahahugoshortcode271s0hbhb">
&lt;figure class="left" >
&lt;img src="https://shantanugoel.com/img/2016/09/censored.jpg" alt="Censored!" />
&lt;/figure>
&lt;/h2>
&lt;p>&lt;strong>TLDR;&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>Indian ISP ACT Fibernet (aka Beam Telecom) hijacks its users&amp;rsquo; DNS requests (even when using public DNS servers like Google or OpenDNS) and blocks websites through this method. This has huge implications beyond website blocking and you can&amp;rsquo;t rely on anything that you are browsing anymore though there are ways available to make yourself safe.&lt;/p>
&lt;p>Aside: Indian ISPs are blocking benign/collateral damage sites now like bit.ly for ACT and behance.net for Airtel. Pretty soon most of web will be blocked in India at this rate.&lt;/p></description><content>&lt;h2 id="hahahugoshortcode271s0hbhb">
&lt;figure class="left" >
&lt;img src="https://shantanugoel.com/img/2016/09/censored.jpg" alt="Censored!" />
&lt;/figure>
&lt;/h2>
&lt;p>&lt;strong>TLDR;&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>Indian ISP ACT Fibernet (aka Beam Telecom) hijacks its users&amp;rsquo; DNS requests (even when using public DNS servers like Google or OpenDNS) and blocks websites through this method. This has huge implications beyond website blocking and you can&amp;rsquo;t rely on anything that you are browsing anymore though there are ways available to make yourself safe.&lt;/p>
&lt;p>Aside: Indian ISPs are blocking benign/collateral damage sites now like bit.ly for ACT and behance.net for Airtel. Pretty soon most of web will be blocked in India at this rate.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Update:&lt;/strong> It seems that some folks on ACT do not see the block/DNS hijack. So far, they all seem to be on dynamic IP. It could be either that the hijacking is being done only for static IP folks or for specific IP ranges. Please comment here or tweet to me @shantanugoel if you are on ACT but do not see the block and/or dns hijack.&lt;/p>
&lt;p>&lt;strong>Update 2:&lt;/strong> Got a call from ACT team and they&amp;rsquo;ve unblocked bit.ly this morning. However, DNS hijacking, the primary problem, still seems to be there for many users.&lt;/p>
&lt;h2 id="the-whole-shebang">&lt;strong>The Whole shebang&lt;/strong>&lt;/h2>
&lt;p>URL/website blocking is not new in India and ISPs causing it show up in weird ways is not new as well like we saw not too long ago:&lt;/p>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">So, we figured this out finally. &lt;a href="https://twitter.com/Cloudflare?ref_src=twsrc%5Etfw">@CloudFlare&lt;/a> is not really doing an MITM here but getting MITM&amp;#39;ed by airtel &lt;a href="https://t.co/Htild9sWIv">https://t.co/Htild9sWIv&lt;/a>&lt;/p>&amp;mdash; Shantanu Goel (@shantanugoel) &lt;a href="https://twitter.com/shantanugoel/status/753275683359461376?ref_src=twsrc%5Etfw">July 13, 2016&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;p>We&amp;rsquo;ve come to expect such things happen already for sites which may host pirated content like TPB and other torrents sites, etc. But &amp;ldquo;shocked&amp;rdquo; or &amp;ldquo;surprised&amp;rdquo; would be understatements of what I felt when I saw that a generic url shortener like bit.ly was blocked as well. All I was trying to see was a benign backstory about CitrusPay founders shared by someone on twitter and BAM!&lt;/p>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">Now, bit.ly has been blocked in India. FML. Block everything. Block the internet itself BC. &lt;a href="https://t.co/e5MFLVXIao">pic.twitter.com/e5MFLVXIao&lt;/a>&lt;/p>&amp;mdash; Shantanu Goel (@shantanugoel) &lt;a href="https://twitter.com/shantanugoel/status/777074151450304513?ref_src=twsrc%5Etfw">September 17, 2016&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;figure class="left" >
&lt;img src="https://shantanugoel.com/img/2016/09/Selection_054.png" />
&lt;/figure>
&lt;h2 id="something-bigger-than-blocking">Something bigger than blocking&lt;/h2>
&lt;p>But the rage didn&amp;rsquo;t stop at this.&lt;/p>
&lt;p>I tried the usual way of adding &amp;ldquo;https&amp;rdquo; to bypass the block but it was highly unusual to see another error which said bit.ly closed my connection. I was sure bit.ly supports https as I could see on my Airtel connection. So this was weird.&lt;/p>
&lt;figure class="left" >
&lt;img src="https://shantanugoel.com/img/2016/09/Selection_056-300x160.png" />
&lt;/figure>
&lt;p>I tried a simple ping to bit.ly and well well well! It turns out, I am not even connecting to bit.ly at all but one of the servers of my ISP itself. The other sites like google.com were being resolved correctly.&lt;/p>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">Well, I&amp;#39;ll be damned :o bit.ly is pointing to &lt;a href="https://t.co/Yp6tdKp23o">https://t.co/Yp6tdKp23o&lt;/a> &lt;a href="https://t.co/thTD2dvEv3">pic.twitter.com/thTD2dvEv3&lt;/a>&lt;/p>&amp;mdash; Shantanu Goel (@shantanugoel) &lt;a href="https://twitter.com/shantanugoel/status/777081685305270272?ref_src=twsrc%5Etfw">September 17, 2016&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;p>This &amp;ldquo;might&amp;rdquo; have been okay/explained away if I was using my ISP&amp;rsquo;s DNS servers (even though it&amp;rsquo;d be unethical in my book even then). But I was NOT using ISP&amp;rsquo;s DNS servers in the first place (who does that, seriously?).&lt;/p>
&lt;p>I was using google&amp;rsquo;s public DNS servers at my router as well as PC level and resolve.conf is set to use localhost. So I was pretty sure I am using the google dns and I shouldn&amp;rsquo;t have got a fake IP back. &lt;strong>This was an even bigger red flag!&lt;/strong>&lt;/p>
&lt;p>I ran the nslookup on bit.ly through an online service and it gave me the correct bit.ly server IPs but running nslookup on my PC or even on my router gave me back the fake IP.
&lt;figure class="left" >
&lt;img src="https://shantanugoel.com/img/2016/09/Selection_057-300x197.png" />
&lt;/figure>
&lt;/p>
&lt;figure class="left" >
&lt;img src="https://shantanugoel.com/img/2016/09/058-300x189.png" />
&lt;/figure>
&lt;h2 id="transparent-dns-proxy--dns-hijacking">Transparent DNS Proxy / DNS Hijacking&lt;/h2>
&lt;figure class="left" >
&lt;img src="https://shantanugoel.com/img/2016/09/transparent-dns-proxy-300x185.png" />
&lt;/figure>
&lt;p>This is how (bad) ISPs do this. They look for all traffic on port 53 (the DNS port) and don&amp;rsquo;t let them go to the actual DNS server and fulfill it from their own DNS servers, thus forcing you to go to a location of their bidding.&lt;/p>
&lt;p>In my case, I tried running the various &amp;ldquo;DNS leak tests&amp;rdquo;/&amp;ldquo;Transparent Proxy detection&amp;rdquo; tests but they all came out fine. Because my ISP is doing something clever here. I am assuming that they look at all the addresses that you are trying to reach, and then serve the ones they are interested in from their servers while passing on the rest of the requests to your originally intended dns server.&lt;/p>
&lt;p>How these tests work is that they see your IP, then ask your browser to connect to some specific server (like 7325abcd.mydnsleaktest.com) and see the IP which is actually touching their dns servers to query that address. I looked at these results and they all showed google to be the one connecting to them and so that seemed fine.&lt;/p>
&lt;p>Luckily, my ISP is not doing this (cannot do this?) for the opendns test and it detected the proxying immediately.&lt;/p>
&lt;figure class="left" >
&lt;img src="https://shantanugoel.com/img/2016/09/Selection_059-300x78.png" />
&lt;/figure>
&lt;h2 id="implicationshow-to-protect-yourself">Implications/How to protect yourself&lt;/h2>
&lt;p>The situation is grim now because your ISP can control everything you visit on the internet and you wouldn&amp;rsquo;t even know. You could be sending all your searches to your ISP, giving your passwords to them through fake sites, or they could silently replace the script/css etc servers and track all of your behavior, the implications are endless.&lt;/p>
&lt;p>But all is not lost. There are a few ways to protect yourself from this:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Add the IP manually to your hosts file&lt;/strong>: (H/T https://twitter.com/electron0zero). This is the simplest way as it will bypass even connecting to DNS server at all. But is cumbersome as you have to manually add each site and also update it if the IP changes.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Get a VPN.&lt;/strong> I prefer this the least though because it is expensive, slow, and in general problematic to setup everywhere.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>**Reroute your DNS requests to some other non-standard port. **You will need to have a bit of iptables know-how for this and a router good enough to give you this access. But your ISP can&amp;rsquo;t (?) monitor every port for DNS traffic. Theoretically they could though.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Use DNSCrypt&lt;/strong>. This is my recommended method and what I chose to save myself. This is good in future as well to save you from other DNS attacks. From DNScrypt.org&lt;/p>
&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>DNSCrypt is a protocol that authenticates communications between a DNS client and a DNS resolver. It prevents DNS spoofing. It uses cryptographic signatures to verify that responses originate from the chosen DNS resolver and haven&amp;rsquo;t been tampered with.&lt;/p>
&lt;/blockquote>
&lt;p>Depending on your machines/routers, it can range from easy to difficult. On my Asus RT-N66U with custom firmware, all it took was one line of opkg command to install it and another few lines to start it up at boot and configure dnsmasq to use it.&lt;/p>
&lt;h2 id="closing">Closing&lt;/h2>
&lt;p>It&amp;rsquo;s not closed yet. I am talking to my ISP to figure this out and see if they will accept removing this kind of malpractice (I don&amp;rsquo;t think they will. But one has to try!). Please do share this to raise awareness. If you have any queries or any other information about this, please do get in touch with me on &lt;a href="https://twitter.com/shantanugoel">@shantanugoel&lt;/a>&lt;/p>
&lt;p>As an aside, this also means that there is an order out to block bit.ly as well and other ISPs may follow suite soon :|&lt;/p></content></item><item><title>Solving The Android Permissions And Malware Puzzle</title><link>https://shantanugoel.com/2010/08/13/android-permissions-malware/</link><pubDate>Fri, 13 Aug 2010 19:44:59 +0000</pubDate><guid>https://shantanugoel.com/2010/08/13/android-permissions-malware/</guid><description>&lt;p>There has been a spate of security reports recently about Android apps being malware or suspicious. Most of these were found baseless but at least one was indeed correct (e.g. The Russian Trojan app). We also know that Android has a very good &lt;a href="https://shantanugoel.com/2010/06/26/android-vs-iphone-security-models.html">security model&lt;/a> but even then, the rest of the reports also makes one think and focus on why an apps requires the permissions that it states it needs?&lt;/p></description><content>&lt;p>There has been a spate of security reports recently about Android apps being malware or suspicious. Most of these were found baseless but at least one was indeed correct (e.g. The Russian Trojan app). We also know that Android has a very good &lt;a href="https://shantanugoel.com/2010/06/26/android-vs-iphone-security-models.html">security model&lt;/a> but even then, the rest of the reports also makes one think and focus on why an apps requires the permissions that it states it needs?&lt;/p>
&lt;p>We all MUST check the permissions that an app requires before installing it and then contemplate what particular feature of the app would require any mentioned permission. The problem here is two part. First is that the permissions can be cryptic. Now, I can understand most of these as I also develop Android apps but I&amp;rsquo;d fathom that a huge majority wouldn&amp;rsquo;t. A simple solution to this would be for Google to provide more details (and probably examples) for each permission. One can say that it is difficult and a UI nightmare to include too much of text into the limited space that the mobile screen gets. My suggestion here would be to keep the existing layout as it is, but when someone clicks on a requested permission, he be taken to a new page which describes the permission in detailed but simple words and also provides examples.&lt;/p>
&lt;p>But this is just the first part of the current problem. The more important issue most apps are facing these days is &amp;ldquo;&lt;strong>permission creep in&lt;/strong>&amp;rdquo;, i.e., they request for permissions they don&amp;rsquo;t really require. This could be because either they are just adding it to their manifest file mistakenly without using them or are taking a long route for solving a problem that should ideally have been solved in a much easier way without requiring excessive permissions. This permission creep in makes even legit apps look bad. e.g. There was this recent case of a &lt;a href="http://techcrunch.com/2010/07/29/android-wallpaper-hack/">wallpaper app&lt;/a> which was crucified by mainstream media all over the world because of the permissions it was using and then it turned out to be just that the developer&amp;rsquo;s method to solve a particular problem (providing &amp;ldquo;favorites&amp;rdquo; and &amp;ldquo;recommended&amp;rdquo; features to users) was long-winded. This is quite common today in Android marketplace. e.g. I tried to install the hugely famous &amp;ldquo;Chomp SMS&amp;rdquo; app today and noticed that it requires my &amp;ldquo;location&amp;rdquo; as well. Pretty weird that an SMS app needs my location and when combined with the &amp;ldquo;Internet&amp;rdquo; permission that it requires as well, it made me go &amp;ldquo;hmmm&amp;rdquo; even though it is tried and tested by a huge number of people without issues. Then I realized that it might need the internet permission for ads (since I was downloading the free version) but still a bit doubtful about location, probably that is needed for ads targeting (especially because it wanted my coarse location only, i.e., cell-triangulation location by which it can easily identify my general region or country, which is all what is needed) but I&amp;rsquo;m still not sure. Even the Android Guru &lt;a href="http://commonsware.com/blog/2010/08/12/evernote-why-you-need-think-about-permissions.html">Mark Murphy has similar reservations&lt;/a> about another popular app Evernote.&lt;/p>
&lt;p>The solution? I think Google should make it mandatory for app publishers to explain in the market that why their app needs each of the permissions it requests. This should be concisely explained to the user before installation and then the user-review feature of Android marketplace can take over to determine whether the explanation given is indeed satisfactory enough or not. This would, e.g., make it immediately clear to any potential Chomp SMS users why it needs the location. I&amp;rsquo;m sure this would lead to even more sales for the good and trusted apps as people like me who were skeptical of something can put their doubts to rest. At the same time, it would quickly push the russian trojan like apps down into the oblivion.&lt;/p>
&lt;p>A side effect/benefit of this approach will also be that the app authors would look at the permissions that they use more cautiously and would probably try to weed out the unnecessary ones.&lt;/p>
&lt;p>Another idea that I have in mind is more community based. I&amp;rsquo;m not sure if Google will implement the above idea or even if they do, would they make it mandatory since market already has almost a 100,000 apps without this info. BUT, if someone can take up the mantle of making a community site that documents, with the help of android users, the potential uses of all apps&amp;rsquo; permissions and also raise flags on any app having a permission without any apparent need, this would become a boon to the Android users. AppBrain, are you listening? I think this would be a good addition to your already excellent service.&lt;/p>
&lt;p>What are your ideas about solving the apps and permissions problems and removing the malware scare that looms upon us? Let me know in the comments..&lt;/p></content></item><item><title>Android vs iPhone: Security Models</title><link>https://shantanugoel.com/2010/06/25/android-vs-iphone-security-models/</link><pubDate>Fri, 25 Jun 2010 22:02:49 +0000</pubDate><guid>https://shantanugoel.com/2010/06/25/android-vs-iphone-security-models/</guid><description>&lt;p>Android and iPhone OS (iOS) have been at loggerheads for quite some time now. This is a take on which has a better security model to protect its users. I thought of writing it up because there have been a lot of discussions around me lately about which platform is more secure and I keep repeating the same points over and over at every one of them, so thought that in future I&amp;rsquo;ll just point them to this page :P&lt;/p></description><content>&lt;p>Android and iPhone OS (iOS) have been at loggerheads for quite some time now. This is a take on which has a better security model to protect its users. I thought of writing it up because there have been a lot of discussions around me lately about which platform is more secure and I keep repeating the same points over and over at every one of them, so thought that in future I&amp;rsquo;ll just point them to this page :P&lt;/p>
&lt;h3 id="disclaimer">Disclaimer:&lt;/h3>
&lt;p>A. I don&amp;rsquo;t guarantee this post to be absolutely correct as I&amp;rsquo;m no security researcher or expert but I do have some interest in this field and I&amp;rsquo;ve been a developer for some time now on different architectures and OSs especially at OS/driver level and that too in the mobile devices field, so I &amp;ldquo;might&amp;rdquo; actually be right about a few things here and there.&lt;/p>
&lt;p>B. I&amp;rsquo;m an android user myself but not of the fanboy variety. I&amp;rsquo;ll be happy to switch camps any day I get something that appeals to me better. I have love and hate points for almost all platforms available but I&amp;rsquo;m using android because &amp;ldquo;for me&amp;rdquo; it&amp;rsquo;s love points slightly outnumber the hate points.&lt;/p>
&lt;p>OK, on with the points then. Here is the table that I created for this showing points I considered and which side wins each. Don&amp;rsquo;t start flaming me though just by seeing the table :P I will be discussing the points as well below it.&lt;/p>
&lt;h3 id="security-points">Security Points:&lt;/h3>
&lt;h4 id="distribution-medium-security">Distribution Medium Security&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>Android&lt;/th>
&lt;th>iPhone&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Approval Process&lt;/td>
&lt;td>NA&lt;/td>
&lt;td>NA&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Phishing&lt;/td>
&lt;td>Lose&lt;/td>
&lt;td>Win&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="local-security">Local Security&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>Android&lt;/th>
&lt;th>iPhone&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Permissions&lt;/td>
&lt;td>Win&lt;/td>
&lt;td>Lose&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Environment/Sandbox&lt;/td>
&lt;td>Tie&lt;/td>
&lt;td>Tie&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="open-vs-closed">Open vs Closed&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>Android&lt;/th>
&lt;th>iPhone&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Open Source&lt;/td>
&lt;td>Slight Win&lt;/td>
&lt;td>Lose&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="app-development-model">App Development Model&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>Android&lt;/th>
&lt;th>iPhone&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Development Model&lt;/td>
&lt;td>Slight Win&lt;/td>
&lt;td>Lose&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="damage-control">Damage Control&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>Android&lt;/th>
&lt;th>iPhone&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Kill Switch&lt;/td>
&lt;td>Tie&lt;/td>
&lt;td>Tie&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="1-distribution-medium-security">1. Distribution Medium Security:&lt;/h3>
&lt;p>Apple vets every application that is put on the app store while Google&amp;rsquo;s Market Place is unrestricted. How does this affect you security wise?&lt;/p>
&lt;h4 id="a-approval-process">a. Approval Process&lt;/h4>
&lt;p>The biggest myth is that the vetting process is what will save you from malware on app store. IT WON&amp;rsquo;T. The Apple app approval process isn&amp;rsquo;t defined anywhere but in general it just states that it checks for apps to do what they say they will do. But they don&amp;rsquo;t check the source code of the apps and static analysis of binaries can only take you so far (Heck, they have even been inept at catching a whole lot of apps that were using their disallowed private apis which can be found easily using simple tools) . So, anyone actually wanting to write a malware can do it trivially by making the malicious code to run after the app has been approved. The trigger could be time based or could even be done over the web remotely. The app could even have encrypted payloads or download new pieces of code over the web and run them. So, we can safely say that approval process is something that can&amp;rsquo;t make things secure for you that way.&lt;/p>
&lt;h4 id="b-phishing">b. Phishing&lt;/h4>
&lt;p>This is where App store can protect you if someone put an app claiming to be from someone that it isn&amp;rsquo;t. e.g. Someone could make an app that claims to be from &amp;ldquo;Bank of America&amp;rdquo;. In apple&amp;rsquo;s case, I&amp;rsquo;m 99.99% sure that the app won&amp;rsquo;t pass the screening but in Android&amp;rsquo;s case, there won&amp;rsquo;t be any hassles for it to reach the marketplace. It could be pulled soon after as google learns about it but still even one person&amp;rsquo;s damage here is much more than what would have happened on iPhone.&lt;/p>
&lt;h3 id="2-local-security">2. Local Security:&lt;/h3>
&lt;p>What about the security in the OS itself once an app is on your phone? This is an important question because 1.) As I noted above, Apple&amp;rsquo;s app screening process isn&amp;rsquo;t robust enough to catch malware 2.) People can bypass the official distribution medium easily. Android allows to install apps from other sources on most phones by just enabling an option and a huge number of people jailbreak their iPhones and get/use this capability.&lt;/p>
&lt;h4 id="a-permissions">a. Permissions&lt;/h4>
&lt;p>On Android, an app has to explicitly declare what capabilities/data of the phone it wants to access/use and the user has to explicitly give it those permissions before it is allowed to install, irrespective of from where/how this app is being installed. So, it works even if you are installing the app from your SD card and even if you have rooted your phone. On iPhone, there is no such mechanism of restricting apps. All apps are equal and can access a lot of resources unhindered without the user knowing. So, while installing a single player only game on android you can immediately be suspicious if the app is asking for internet connection or access to your contacts data but on iPhone you will not come to know about this.&lt;/p>
&lt;h4 id="b-environment">b. Environment&lt;/h4>
&lt;p>On both platforms, the apps run in their own sandboxes with unique uuids&lt;/p>
&lt;h3 id="3-open-vs-closed">3. Open vs Closed:&lt;/h3>
&lt;p>Most of the Android code is open source while for iOS, only darwin kernel and some other things like webkit etc are open source. Now, this in itself doesn&amp;rsquo;t guarantee to make Android secure but its code does get a lot of scrutiny from open source community as well as lot of other big name companies with commercial interests in Android which allows it to find and fix more bugs and loopholes than iPhone can.&lt;/p>
&lt;h3 id="4-app-development-model">4. App Development Model:&lt;/h3>
&lt;p>Most apps for Android are written in java while those in iPhone are written in C/Objective-C. While I&amp;rsquo;m myself a big time C lover (Majority of my coding is in C/CPP) but it is indeed a very unforgiving language where you need to be very careful with what you write and has much greater chances of exploits, .e.g, Buffer overflows, as compared to java (Interestingly, all the jailbreaks for iPhone OS have been done using such exploits and have been made available day 0/day 1 mostly.)&lt;/p>
&lt;h3 id="5-damage-control">5. Damage Control:&lt;/h3>
&lt;p>What if an app actually got through everything on any of these platforms and started spreading? Both of these platforms have kill switches in the hands of Google/Apple which they can use to remove such malicious apps from the users&amp;rsquo; phones remotely.&lt;/p>
&lt;h3 id="summary">Summary:&lt;/h3>
&lt;p>Well, there is no clear winner. Apple is quite good when it comes to protecting you from phishing (though that advantage goes away if you jailbreak and use alternative means to install apps) and Android has a real sound local security system (though it also has the flaw that users might not always understand why an app is requesting a certain critical permission and install it anyways). So, take your pick and let me know what you picked :) and please do tell me if I&amp;rsquo;m wrong in any of my points or missed out on something that needs to be compared.&lt;/p></content></item><item><title>Fill Your Password To Invite Your Buddies - Not So Fast!!</title><link>https://shantanugoel.com/2008/05/16/fill-your-password-to-invite-your-buddies-not-so-fast/</link><pubDate>Fri, 16 May 2008 21:30:00 +0000</pubDate><guid>https://shantanugoel.com/2008/05/16/fill-your-password-to-invite-your-buddies-not-so-fast/</guid><description>&lt;p>For the past many years, I’ve seen a trend that has been on a meteoric rise. Whatever new service you sign on for on the internet (especially the web2.0–oh-so-cool-you-have-to-tell-everyone-about-it ones), it gives you an option to fill in your e-mail ID and password and makes a generous offer of letting all your friends know about your new avatar and let them all join in the fun. Most of the people around me, it seems, don’t think twice before gladly accepting the offer, as is made apparent from the increasing amount of automated mails I’m getting with subjects like “Hey, don’t be left out! Join me on X” or “Hi SG, Why don’t you follow me on Y”.&lt;/p></description><content>&lt;p>For the past many years, I’ve seen a trend that has been on a meteoric rise. Whatever new service you sign on for on the internet (especially the web2.0–oh-so-cool-you-have-to-tell-everyone-about-it ones), it gives you an option to fill in your e-mail ID and password and makes a generous offer of letting all your friends know about your new avatar and let them all join in the fun. Most of the people around me, it seems, don’t think twice before gladly accepting the offer, as is made apparent from the increasing amount of automated mails I’m getting with subjects like “Hey, don’t be left out! Join me on X” or “Hi SG, Why don’t you follow me on Y”.&lt;/p>
&lt;p>I just wanted to “remind” you all (because you already know it) how important your password is. You keep it safe from everyone, suspect even your friends of trying to hack into your e-mail, and then you give it away to an “unknown” entity with so much of ease, laying so much trust onto it that you won’t even put in your biological parents.&lt;/p>
&lt;p>While many of these services are genuine, but many might not be. I’m certainly against handing out your passwords to a third-party web service until it is something like google that won’t just sell you off one fine day and run off somewhere you can’t find it. But if you are compelled to do so because of some reason, I’d recommend atleast checking out what it has to say about the data it’s collecting.&lt;/p>
&lt;p>Let me take an example of a new IM service that I recently came across. It’s called IMO (or imo or whatever) and is apparently quite popular because of its multiple IM service connections through a single interface. I thought of checking out its terms etc and making a mental image of how respectable / trustworthy I found it. I had listed the following things on the blog where I had found about this site. Listing them here again for you.&lt;/p>
&lt;p>Following are the nuggets I found:&lt;/p>
&lt;p>&lt;strong>1.&lt;/strong> They have a blogspot blog. It takes hardly a few minutes to host ur own blog on ur own domain. Maybe they have some existing google connection but yet to discover it.(I read somewhere that some of these people worked at google in the past but that’s no reason to keep your blog on such a platform)&lt;/p>
&lt;p>&lt;strong>2.&lt;/strong> Shady privacy agreement.
** 2a** They mention that not only will they save ur username and pwd but may also save ur chats/messages etc.
** 2b** They might also share info with 3rd parties (written in a manner that they can do it on their own will)
** 2c** Transparency: They might not even tell u whats going on if they so decide.&lt;/p>
&lt;p>Please don’t mention about the eliteness of their “advisor panel”. This is the biggest marketing gimmick that everyone pulls off. Many times the &amp;ldquo;advisors&amp;rdquo; don&amp;rsquo;t even know the &amp;ldquo;advised&amp;rdquo; company exists.&lt;/p>
&lt;p>&lt;strong>IMP:&lt;/strong> If a site doesn’t say anything or says all goody things in its terms, that doesn’t make it clean, but if you find suspiciousness in the terms, that definitely makes a negative mark. &lt;strong>In Short, when your password is concerned, treat everyone guilty until proven innocent.&lt;/strong>&lt;/p></content></item><item><title>Want To Program Smartly In C? Use GLib</title><link>https://shantanugoel.com/2008/05/03/smart-programming-in-c-using-glib/</link><pubDate>Sat, 03 May 2008 15:30:16 +0000</pubDate><guid>https://shantanugoel.com/2008/05/03/smart-programming-in-c-using-glib/</guid><description>&lt;p>&lt;strong>GLib - An Introduction:&lt;/strong>&lt;/p>
&lt;p>&lt;a href="http://library.gnome.org/devel/glib/">GLib&lt;/a> is a utility library for C, which augments the standard C library in several purposeful ways to make your life that much easier while programming. GLib has the following things to offer you:&lt;/p>
&lt;p>**1. Portability: **The main issue that haunts any C developer is the portability of code. One cannot rely on the standard C library for this as you may find many functions that work differently under different platforms are aren&amp;rsquo;t there at all sometimes. GLib ensures that the all the functionality exposed by it remains consistent across platforms, so that you can rest assured that your code will work the way its supposed to work irrespective of the Operating System it&amp;rsquo;s being used for (Of course, this assumes that you have ensured about portability aspects of your non-GLib related source code). Moreover, GLib is available for a vast array of contemporary Operating Systems including GNU/Linux, Microsoft Windows and Mac OS X.&lt;/p></description><content>&lt;p>&lt;strong>GLib - An Introduction:&lt;/strong>&lt;/p>
&lt;p>&lt;a href="http://library.gnome.org/devel/glib/">GLib&lt;/a> is a utility library for C, which augments the standard C library in several purposeful ways to make your life that much easier while programming. GLib has the following things to offer you:&lt;/p>
&lt;p>**1. Portability: **The main issue that haunts any C developer is the portability of code. One cannot rely on the standard C library for this as you may find many functions that work differently under different platforms are aren&amp;rsquo;t there at all sometimes. GLib ensures that the all the functionality exposed by it remains consistent across platforms, so that you can rest assured that your code will work the way its supposed to work irrespective of the Operating System it&amp;rsquo;s being used for (Of course, this assumes that you have ensured about portability aspects of your non-GLib related source code). Moreover, GLib is available for a vast array of contemporary Operating Systems including GNU/Linux, Microsoft Windows and Mac OS X.&lt;/p>
&lt;p>**2. Security: **Though you still need to be careful about things like freeing allocated memories properly, etc but GLib does ensure that all its functionality is secure. Moreover, GLib has a policy of ensuring that all its functions are threadsafe. This saves you from a lot of checks and balances and locks and scheduling considerations if you had written all this yourself.&lt;/p>
&lt;p>&lt;strong>3. Useful Data Types:&lt;/strong> GLib exposes a lot of data types. Some are very basic that maintain portability across OS&amp;rsquo;s and 32-bit and 64-bit systems. e.g. you can rest assured that gint32 will always be 32 bit and gint64 will always be 64 bit data types.&lt;/p>
&lt;p>Apart from this, it also provides a lot of derived data types e.g. singly linked lists, doubly linked lists, hash tables, stacks, queues, trees, and much more. It&amp;rsquo;d basically cover most of you data structure needs that you&amp;rsquo;d have otherwise had to implement yourselves. And it also provides helper functions that makes working with them so much more easier. If you have ever used Perl, and have wished that C programming could be a bit faster like it, you will be pleasantly surprised.&lt;/p>
&lt;p>**4. Utility Functions: **GLib also provides various utility functions to ease out your manipulation of data. Some of the functions are meant as more secure and portable replacements for those provided with standard C library, while rest are meant to provide other useful functionality which you earlier had to implement in your code. Some of the major areas covered by GLib&amp;rsquo;s utility functions are String manipulation, character set manipulation and conversion (including unicode and base64), using regular expressions, file manipulation, shell functions, config file parsing (my favourite), etc.&lt;/p>
&lt;p>&lt;strong>End Note:&lt;/strong> I can understand that there would be a lot of people who believe that use of GLib is dumbing down programming in C. After all, we take pride being in control of our code and this is why we love progrmming in C because we have options to do things in our own way. Yes, that is all true but there comes a time where you&amp;rsquo;d like to spend more time in developing the core functionality of your app, or focus more on giving a rapid shape to your new idea, rather than reinventing the wheel and fumbling around with writing the helper functions. So, keeping that in mind I believe GLib is wonderful piece of code that has enabled me to churn out new apps that much faster.&lt;/p></content></item><item><title>5 Reasons I Like Linux (And 5 Why I Dislike It)</title><link>https://shantanugoel.com/2008/04/19/5-reasons-i-like-linux-and-5-why-i-dislike-it/</link><pubDate>Sat, 19 Apr 2008 20:20:40 +0000</pubDate><guid>https://shantanugoel.com/2008/04/19/5-reasons-i-like-linux-and-5-why-i-dislike-it/</guid><description>&lt;p>&lt;strong>Disclaimer Notes:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>I wrote this because these things just came into my mind today while I was reading about the impending &amp;ldquo;Hardy Heron&amp;rdquo; release related things and saw that there is a lot of FUD being spread still. So, thought of jotting down my likes/dislikes and not making it a linux v/s windows campaign. Though at a few places, it might be necessary to compare the two just to put things into perspective.&lt;/p></description><content>&lt;p>&lt;strong>Disclaimer Notes:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>I wrote this because these things just came into my mind today while I was reading about the impending &amp;ldquo;Hardy Heron&amp;rdquo; release related things and saw that there is a lot of FUD being spread still. So, thought of jotting down my likes/dislikes and not making it a linux v/s windows campaign. Though at a few places, it might be necessary to compare the two just to put things into perspective.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>These are reasons why &amp;ldquo;&lt;strong>I&lt;/strong>&amp;rdquo; like/dislike Linux and not why others might like/dislike it although you might find common patterns.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Most of my recent experience is with Ubuntu these days, so most examples would be from it as well.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>These reasons are purely from an end-user&amp;rsquo;s perspective and not from a linux developer&amp;rsquo;s perspective. So, I&amp;rsquo;m not taking into factor that I can change the kernel (or most other things&amp;rsquo;) source code because &amp;ldquo;generally&amp;rdquo; I don&amp;rsquo;t.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>This post is quite long. And if you have a flame to send out my way (which you are most welcome to do), please read it in its entirety before doing so, because many things I say at some point have some caveats covered at another point.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>5 Reasons why I like Linux:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Light on Resources&lt;/strong>: I must say that Linux is what still keeps my more than 3 years old laptop running in a prim condition with the latest and greatest of everything from technology stand-point as well as eye-candy stuff. An example: With almost every effect of Compiz Fusion turned on, hordes of screenlets and AWN enabled, an Apache/MySQL/PHP based server running, and a dozen of other applications (firefox, nautilus, terminal, GIMP, RhythmBox, Open Office Word Processor, VLC player, etc) open, my setup consumes around 500 MB of RAM. While on the other hand, if I was using Vista, It&amp;rsquo;d have demanded atleast 1 GB of RAM just to run Aero, forget about the rest of the things.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Cost&lt;/strong>: This is a big factor for me. Almost everything is free or atleast has a free alternative available. Most of the times I&amp;rsquo;ve found these free software to be much better than commercial software in terms of feature sets as well as stability. But even otherwise, when there are cases where the free alternative a bit lagging as compared to the commercial one (e.g. GIMP v/s Photoshop), I haven&amp;rsquo;t felt that my needs have ever outgrown the free software.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Ease of Use&lt;/strong>: Doing &amp;ldquo;stuff&amp;rdquo; on linux is just so easy. By &amp;ldquo;stuff&amp;rdquo;, I mean everything from doing some normal day chores, downloading files, customizing things, automating routine tasks, etc. The backbone for this is &amp;ldquo;the terminal&amp;rdquo; (not the movie :P). I can do almost anything I want from the console. It not only saves me time and frustration in executing a program, waiting for the GUI to load and then go through a series of clicks but also allows me to batch up everything into one pretty little command. Moreover, every thing has so many options that I can configure to my liking. (More on the &amp;ldquo;options&amp;rdquo; later below)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Getting Software&lt;/strong>: Getting software couldn&amp;rsquo;t be more easy.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>It generally involves typing in &lt;code>sudo apt-get install &amp;lt;software&amp;gt;&lt;/code>, pressing enter, and that&amp;rsquo;s it. The latest version is ready to roll on your machine.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Reboots are minimal. Even after thinking for quite long, it&amp;rsquo;s very hard to recall any time when I had to &amp;ldquo;log-off&amp;rdquo; my system (let alone reboot) after installing a software (or even a driver)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Updates are automatic, and not just for the OS or a few core components, but for all the software that I installed through repositories (but not for the ones which I installed from my local deb&amp;rsquo;s or compilations, which is understandable of course)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The latest fixes/patches are available very quickly. Moreover, the revision cycle for most distros lies between 6–12 months and hence, even a complete desktop upgrade is quickly available as well (as compared to the 7 year period after which Vista came out). You can even &amp;ldquo;upgrade&amp;rdquo; to the latest distro revision without having to wipe everything, though I generally prefer a clean install.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Security&lt;/strong>: Now, I agree with everyone that the reason why we don&amp;rsquo;t see many viruses for linux is because the user base is very less as compared to other OS&amp;rsquo;s but I also believe that this is not the &amp;ldquo;only&amp;rdquo; reason.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>The thing is that since most of the software is open source, so exploits are found quite quickly and patched and released rapidly. While in a closed source environments, even if a white hat reports it, the exploits go on un-noticed, un-worked upon by the developers (A good example is the recent falling of Vista during the &amp;ldquo;Pwn to Own&amp;rdquo; contest because of a known but unpatched vulnerability by Adobe, not a fault of Vista in this case though but you get my drift).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The security model otherwise is also quite tight and its very hard for someone to exploit it till the time you use common sense along with it. (A linux virus can easily wipe your &amp;ldquo;/home&amp;rdquo; without acquiring root permissions).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>5 Reasons why I dislike Linux&lt;/strong>&lt;/p>
&lt;p>These reasons irk me the most but aren&amp;rsquo;t enough for to make me move away from Linux. I mention them because getting them right would make my Linux expereince that much more joyful and probably others feels the same too. Moreover, this is not a gripe and is not a command/order to &amp;ldquo;the Linux guys&amp;rdquo; out there to fix it, because linux is of, by and for the community. And being a part of this community, I share the burden of this equally and would like to help out in making it better in whatever ways possible, developing, testing, suggesting things.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Getting Software:&lt;/strong> I had mentioned about how easy it is to get software from most distros&amp;rsquo; repositories with a single command. However, getting and installing software is also a challenge that many people face in linux. After sometime your particular version of the distro stops updating the software and will include only security fixes and such. Now, there are many good people who would backport software for your version but not all the time. You can download pacakges off the internet (debs&amp;rsquo; for ubuntu) but they might not work because of too many inter-mingled dependencies. Compiling is another option but many times, it can spiral out of hand. I hope we can better softwares like GDebi that could make this much more easier.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Options:&lt;/strong> Earlier I listed having so many options as one of my reasons to like Linux. But, sometimes, too many options tend to get to my head. This gets even more difficult when you have too many choices but no clue about what means what and which one is the best. However, the community is continously trying to make this right. A lot of documentation projects are going on, and the mailing lists, IRC networks and other forums also give out a lot of information. Especially for Ubuntu, I find a huge community based support system which always helps me out. (PS – The Ubuntu Forums are the nicest forums you&amp;rsquo;ll ever come across. I am yet to come across a post that contains words like &amp;ldquo;RTFM&amp;rdquo; or &amp;ldquo;n00b&amp;rdquo;)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Ease Of Use:&lt;/strong> Some times, just some times, the lack of a GUI for common things irks me and I wish in respect of a few things (read wi-fi) that things could &amp;ldquo;just work&amp;rdquo;. But I guess this is a trade-off that I can live with, and moreover this situation is also improving especilly due to the efforts taken by Ubuntu, Mandriva, Fedora, GNOME and KDE. (Special thanks to nm-applet ;-) ). Moreover, Hardy Heron, b43 and the latest linux kernels promise to solve the wi-fi setup issues.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Browsing&lt;/strong>: The browsing experience on linux isn&amp;rsquo;t too great. But this is not a fault of Linux as such. This is due to companies providing adequate linux support (e.g. java plugins for 64 bit) and too many sites optimizing their code for IE. But again, there is hope for this as we can already run IE on linux (IEs4Linux) plus SUN has promised a 64 bit java firefox plugin with the next JRE.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Drivers:&lt;/strong> This is again due to companies not giving proper linux support for their hardware and not even releasing their hardware details for the OSS community to develop their own drivers. However, I can understand that giving out hardware details might not be an option for these companies considering the competition, and also proper software support might be a bit unfeasible due to a smaller consumer base. But again, more and more companies are seeing the light now and releasing proper drivers for linux, with Nvidia and ATi taking the lead (When will Creative listen?). And a special thanks to the OSS community for making working drivers despite all this.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>So, this is it. After reading back through what I just wrote, I am dead sure that I will stick to Linux as the trade-offs are too meagre for me. Will you?&lt;/strong>&lt;/p></content></item><item><title>Linux: Webcam Fun</title><link>https://shantanugoel.com/2008/03/02/linux-webcam-fun/</link><pubDate>Sun, 02 Mar 2008 03:30:00 +0000</pubDate><guid>https://shantanugoel.com/2008/03/02/linux-webcam-fun/</guid><description>&lt;p>If you thought that a webcam is just for getting in visual touch with your distant friends, then you could not be more wrong. There are many other uses e.g., making videos, rudimentary security systems, etc. But I didn&amp;rsquo;t know that it&amp;rsquo;d be as simple as a a few keystrokes and a couple of clicks, until I stumbled across this article on Linux.com - &lt;a href="http://www.linux.com/feature/126186">Five fun ways to use a Linux webcam&lt;/a>. It lists out the following five things that can be achieved ever so easily with a webcam and your linux box:&lt;/p></description><content>&lt;p>If you thought that a webcam is just for getting in visual touch with your distant friends, then you could not be more wrong. There are many other uses e.g., making videos, rudimentary security systems, etc. But I didn&amp;rsquo;t know that it&amp;rsquo;d be as simple as a a few keystrokes and a couple of clicks, until I stumbled across this article on Linux.com - &lt;a href="http://www.linux.com/feature/126186">Five fun ways to use a Linux webcam&lt;/a>. It lists out the following five things that can be achieved ever so easily with a webcam and your linux box:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Record Yourself&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Make a Video Streaming webserver&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Monitor your house&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ASCIIfy your image&lt;/p>
&lt;/li>
&lt;li>
&lt;p>More fun with your videos and stills&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Do check it out at the aforementioned link.&lt;/p></content></item></channel></rss>