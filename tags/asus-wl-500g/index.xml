<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Asus WL-500g on</title><link>/tags/asus-wl-500g/</link><description>Recent content in Asus WL-500g on</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 13 Jul 2010 12:16:44 +0000</lastBuildDate><atom:link href="/tags/asus-wl-500g/index.xml" rel="self" type="application/rss+xml"/><item><title>Cannot Change Channel Problem With Asus WL-500W</title><link>/2010/07/13/cannot-change-channel-problem-with-asus-wl-500w/</link><pubDate>Tue, 13 Jul 2010 12:16:44 +0000</pubDate><guid>/2010/07/13/cannot-change-channel-problem-with-asus-wl-500w/</guid><description>Recently I found an issue with my asus wl-500w wi-fi router that I wasn&amp;rsquo;t able to change the channel on which it was transmitting. I moved to a new location which was totally jam-packed with other wi-fi networks using same channel as mine which was hampeing my connection. I tried for umpteen number of times. Changing the channel through the web configuration did not give any error but I found that it was still transmitting at channel 1.</description><content>&lt;p>Recently I found an issue with my asus wl-500w wi-fi router that I wasn&amp;rsquo;t able to change the channel on which it was transmitting. I moved to a new location which was totally jam-packed with other wi-fi networks using same channel as mine which was hampeing my connection. I tried for umpteen number of times. Changing the channel through the web configuration did not give any error but I found that it was still transmitting at channel 1. I confirmed by checking on the &amp;ldquo;Status &amp;amp; Log&amp;rdquo; page, checking the logs, and running &amp;ldquo;wl status&amp;rdquo; command through ssh and they all confirmed that it was transmitting at channel 1 only, no matter what I set it to in the configuration. I even opened an issue in the firmware project for the custom firmware (by oleg and lly) that I am using but they weren&amp;rsquo;t able to help me as the wi-fi drivers are binary only.&lt;/p>
&lt;p>But by sheer chance, I stumbled upon the solution finally by trial and error. The solution is that you should set the &amp;ldquo;Bandwidth&amp;rdquo; to 20 MHz in wi-fi configuration if you are using 802.11 G. If you set it to 40 MHz then it gets stuck somehow but as soon as I changed it to 20 MHz, I was able to see the channel change immediately after reboot. Here is the screenshot of the page where you can find this setting.&lt;/p>
&lt;p>&lt;a href="/img/uploads/asus-wl-500-w-change-channel.jpg">&lt;img src="/img/uploads/asus-wl-500-w-change-channel-thumb.jpg" alt="">&lt;/a>&lt;/p></content></item><item><title>Compiling Latest FireFly (mt-daapd) for ASUS WL-500W</title><link>/2009/07/03/compiling-latest-firefly-mt-daapd-asus-wl-500w/</link><pubDate>Fri, 03 Jul 2009 10:28:32 +0000</pubDate><guid>/2009/07/03/compiling-latest-firefly-mt-daapd-asus-wl-500w/</guid><description>FireFly is a nice DAAP based media server that allows you to listen to your music collection anywhere using any DAAP based client like iTunes, with other players (like Winamp, Rhythmbox, VLC, etc) using plugins, or it even has its own dedicated php/flash/java based clients that can be fired up on any platform any computer giving you instant nirvana.
Many people, like me, use it on their Routers or NAS boxes to access their music anywhere without having to keep their home PC running or lugging around external drives.</description><content>&lt;p>FireFly is a nice DAAP based media server that allows you to listen to your music collection anywhere using any DAAP based client like iTunes, with other players (like Winamp, Rhythmbox, VLC, etc) using plugins, or it even has its own dedicated php/flash/java based clients that can be fired up on any platform any computer giving you instant nirvana.&lt;/p>
&lt;p>Many people, like me, use it on their Routers or NAS boxes to access their music anywhere without having to keep their home PC running or lugging around external drives. However, development on this gem stopped some time ago. The last stable build released (2.4.2) was good but it doesn&amp;rsquo;t have a lot of features provided by the nightly builds in svn (subversion). And the last nightly build released (svn-1696) had a lot of broken things. It was rebuilding the database everytime, crashed around quite a bit, had a lot of security holes. So, I decided to get the latest version (trunk) of the FireFly code, as it had a lot of fixes for above issues, put in whatever was missing, and try to build it for my use.&lt;/p>
&lt;p>After a day&amp;rsquo;s worth of efforts, here it is. This latest build is the most rich in features as compared to the stable one, and is just as stable as the 2.4.2 release if not better, and also fixes all the issues shown by the svn-1696 build. The downloadable source and complete install package are attached with this post. But I&amp;rsquo;m also listing down the steps that I took to achieve this so that if anyone wants to recompile it with their own options (e.g. I haven’t included ogg/flac support in my build), they are able to do so. You can find the steps below. Please let me know if you have any queries. Also, if you want to submit any patches, I’ll be happy to incorporate them and recompile. I’m also trying to get this source and package into the unslung/optware repositories for wider distribution.&lt;/p>
&lt;p>&lt;strong>Note: Although I’ve compiled this for Asus WL-500W, it should work for most devices with a mipsel architecture (which includes all the Asus routers in this family). Also, the compilation process should work for most other architectures barring one or two steps. I’d be happy to help if you want to do so and face any issues.&lt;/strong>&lt;/p>
&lt;p>Changes and Build Steps:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>ipkg install optware-devel&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ipkg install buildroot&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Edit /opt/share/aclocal/audiofile.m4 and change AC_DEFUN(AM_PATH_AUDIOFILE, to AC_DEFUN([AM_PATH_AUDIOFILE],&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ipkg install gettext (for some missing m4 macros, libr_rpath etc)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Comment out AC_USE_SYSTEM_EXTENSIONS in configure.in (using dnl)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>aclocal -I &amp;lt;path of mt-daapd&amp;rsquo;s local m4 dir&amp;gt;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>run “autoheader” to generate config.h.in&lt;/p>
&lt;/li>
&lt;li>
&lt;p>touch config.rpath (somehow this file is not provided with gettext for us)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>change configure.in line 95, remove the ; at the end&lt;/p>
&lt;/li>
&lt;li>
&lt;p>remove -g flag and add -O2 in configure.in for optimization purpose&lt;/p>
&lt;/li>
&lt;li>
&lt;p>run “automake &amp;ndash;add-missing”&lt;/p>
&lt;/li>
&lt;li>
&lt;p>run “autoconf” - to generate configure&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ipkg install grep (for egrep)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>change /bin/sh to /opt/bin/bash in configure and install-sh&lt;/p>
&lt;/li>
&lt;li>
&lt;p>run “./configure &amp;ndash;enable-sqlite3 &amp;ndash;prefix=/opt CPFLAGS=”-D_LIBC” ” (You can also use &amp;ndash;enable-oggvorbis and/or &amp;ndash;enableflac)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>After this step, I had to make numerous changes to the source code to put in the missing functionality for database handling, removing some compilation errors, etc. You can diff the svn 1715 code with mine to see the changes.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>run “make”&lt;/p>
&lt;/li>
&lt;li>
&lt;p>run “make install”&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>And you are done. The modified source and compiled bianries can be downloaded from below.&lt;/p>
&lt;p>&lt;em>Lost the files in a server move. Sorry :(&lt;/em>&lt;/p>
&lt;p>Let me know if you have any queries or face any issues.&lt;/p></content></item><item><title>[TIP] Install Twonky on Asus WL-500W with stock firmware</title><link>/2009/02/23/tip-install-twonky-on-asus-wl-500w-with-stock-firmware/</link><pubDate>Mon, 23 Feb 2009 06:30:00 +0000</pubDate><guid>/2009/02/23/tip-install-twonky-on-asus-wl-500w-with-stock-firmware/</guid><description>Asus WL-500W is a greate wi-fi router with lots of features, one of them being able to use it as a media server to serve movies/songs over your network from a hard disk connected directly to it through USB. But the media server that is included in the official firmware leaves a lot to be desired. If you are a fan of twonky, all you would have heard so far would have been that to use it on your router, you&amp;rsquo;d have to change your firmware over to a non-official one.</description><content>&lt;p>Asus WL-500W is a greate wi-fi router with lots of features, one of them being able to use it as a media server to serve movies/songs over your network from a hard disk connected directly to it through USB. But the media server that is included in the official firmware leaves a lot to be desired. If you are a fan of twonky, all you would have heard so far would have been that to use it on your router, you&amp;rsquo;d have to change your firmware over to a non-official one. If you do not want to take any risks with the custom firmwares, I&amp;rsquo;ll tell you a simple way to use twonky with the stock firmware itself. Follow these steps:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Download Twonky (The MIPS version) and extract/save it to some place on the harddisk attached to your router (e.g. /tmp/harddisk/part0/twonky/ )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create a new shell script for starting twonky automatically (Replace the paths according to where you stored the twonky files in step 1). All you need to do is create a text file with following contents and mark it as executable. We&amp;rsquo;ll name it init.sh.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>#!/bin/sh
route add -net 224.0.0.0 netmask 240.0.0.0 dev br0
cd /tmp/harddisk/part0/twonky&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;/tmp/harddisk/part0/twonky/twonkymedia &amp;amp;
&lt;/code>&lt;/pre>&lt;ol start="3">
&lt;li>
&lt;p>Copy this script to your harddisk to where you extracted twonky files.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Open up the router&amp;rsquo;s web administration page (most probably at 192.168.1.1), go to the USB section, and put the following line under &amp;ldquo;Initial Script&amp;rdquo;:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>`/tmp/harddisk/part0/twonky/init.sh``&lt;/p>
&lt;ol start="5">
&lt;li>Save, reboot and enjoy :)&lt;/li>
&lt;/ol>
&lt;p>If you have any questions, let me know. Infact, the same tip can be used to install many other such softwares onto your Asus routers series including WL-500g, WL-500gP, WL-500W, etc.&lt;/p></content></item><item><title>[TIP] Asus WL-500W Hacks:How To Reset Web Admin Password</title><link>/2009/01/23/tip-asus-wl-500w-hackshow-to-reset-web-admin-password/</link><pubDate>Fri, 23 Jan 2009 22:41:31 +0000</pubDate><guid>/2009/01/23/tip-asus-wl-500w-hackshow-to-reset-web-admin-password/</guid><description>Most of you must be knowing by now that I bought the amazing Asus WL-500W router a few days back. This router builds on the great lineage it has in its predecessors, the WL-500g, WL-500g Deluxe, WL-500gP, WL-500gP v2 etc, and shines ahead with being much more than a router, rather a complete headless linux PC. Anyways, to the point. In most routers/modems, if you forget the password to your web-administration gui (which generally resides as 192.</description><content>&lt;p>Most of you must be knowing by now that I bought the amazing Asus WL-500W router a few days back. This router builds on the great lineage it has in its predecessors, the WL-500g, WL-500g Deluxe, WL-500gP, WL-500gP v2 etc, and shines ahead with being much more than a router, rather a complete headless linux PC. Anyways, to the point. In most routers/modems, if you forget the password to your web-administration gui (which generally resides as 192.168.1.1), the only option left is to reset the router, thereby losing all your settings etc. But not so with this little beast. If you remember your ssh password (which BTW is available if you have installed a custom firmware on our router), then you can just login through it to your router and execute the following commands to save your skin:&lt;/p>
&lt;p>&lt;code>nvram get http_passwd&lt;/code>&lt;/p>
&lt;p>This will display the current web administration password.&lt;/p>
&lt;p>&lt;code>nvram set http_passwd=&amp;quot;NewPasswd&amp;quot;&lt;/code>&lt;/p>
&lt;p>This will set the new password. But remember that you have to enter another command (given below) to make sure that your new password is saved.&lt;/p>
&lt;p>&lt;code>nvram commit&lt;/code>&lt;/p>
&lt;p>Now, just reboot and enjoy :)&lt;/p></content></item></channel></rss>