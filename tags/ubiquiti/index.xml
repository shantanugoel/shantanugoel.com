<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ubiquiti on Shantanu Vs The World</title><link>https://shantanugoel.com/tags/ubiquiti/</link><description>Recent content in Ubiquiti on Shantanu Vs The World</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>shantanu@shantanugoel.com (Shantanu Goel)</managingEditor><webMaster>shantanu@shantanugoel.com (Shantanu Goel)</webMaster><lastBuildDate>Mon, 13 Mar 2017 16:46:24 +0530</lastBuildDate><atom:link href="https://shantanugoel.com/tags/ubiquiti/index.xml" rel="self" type="application/rss+xml"/><item><title>Bypass ISP DNS hijack by changing DNS port on Ubiquiti USG router</title><link>https://shantanugoel.com/2017/03/13/bypass-isp-dns-hijack-ubiquiti-ubnt-usg/</link><pubDate>Mon, 13 Mar 2017 16:46:24 +0530</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2017/03/13/bypass-isp-dns-hijack-ubiquiti-ubnt-usg/</guid><description>The Background We talked earlier about how certain ISPs block websites by using DNS hijack methods and I had recommended using DNSCrypt to bypass it. Well, as part of my home network overhaul, I moved over from the consumer grade (but still decent enough) Asus router over to Ubiquiti stack which, among other things, lead me to use their &amp;ldquo;Unify Security Gateway (USG)&amp;rdquo; as the router. Now, this router is pretty decent and is running Ubiquiti&amp;rsquo;s EdgeOS (derived from Vyatta OS, which in turn is based on linux/debian).</description><content>&lt;h2 id="the-background">The Background&lt;/h2>
&lt;p>We talked earlier about how certain &lt;a href="https://shantanugoel.com/2016/09/17/indian-isp-act-fibernet-blocks-bit-ly-does-dns-hijacking/">ISPs block websites by using DNS hijack methods&lt;/a> and I had recommended using DNSCrypt to bypass it. Well, as part of my home network overhaul, I moved over from the consumer grade (but still decent enough) Asus router over to Ubiquiti stack which, among other things, lead me to use their &amp;ldquo;Unify Security Gateway (USG)&amp;rdquo; as the router. Now, this router is pretty decent and is running Ubiquiti&amp;rsquo;s EdgeOS (derived from Vyatta OS, which in turn is based on linux/debian). You can install and tweak a lot of stuff through command line if you&amp;rsquo;d like but alas there&amp;rsquo;s no dnscrypt-proxy available for it.&lt;/p>
&lt;p>I had the below options now to overcome my ISP&amp;rsquo;s DNS hijacking:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Compile dnscrypt manually and use it&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Run dnscrypt on another server/device internally (maybe my NAS or the ubiquiti cloudkey or something)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Use one of the other options I had originally discussed (hosts file, VPN, alternate port)&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>I rejected the first option as it meant setting up a cross compilation environment just for one program and also it may be hard to keep up in future. The 2nd option wasn&amp;rsquo;t too good either as I didn&amp;rsquo;t want my network infrastructure&amp;rsquo;s basic need of DNS to depend on another device which may not be as resilient due to other regular use. From the other earlier discussed alternatives, I didn&amp;rsquo;t want to do the manual upkeep of hosts file or fall into the expensive/slow/insecure trap of VPNs. So I settled on the next best solution of using an alternate port for my DNS queries, with the hope that the ISP is dumb (or cost conscious) enough to rely only on port number to higjack DNS and not use DPI for it (even though &lt;a href="https://shantanugoel.com/2017/01/24/act-fibernet-deep-packet-inspection-blocking-sites/">they do use DPI for at least some types of blocking&lt;/a>).&lt;/p>
&lt;h2 id="testing-the-waters">Testing the Waters&lt;/h2>
&lt;p>First thing was to try whether this would even work or not. So I tried it easily by querying for a blocked torrent site first through ISP&amp;rsquo;s DNS servers, then OpenDNS servers on default DNS port (53) and then Open DNS servers on port 5353 (Yes, OpenDNS responds to dns queries on 5353 as well, fortunately.)&lt;/p>
&lt;figure class="left" >
&lt;img src="https://shantanugoel.com/img/2017/03/dns-queries-thumb.jpg" />
&lt;/figure>
&lt;p>In the first 2 attempts, the IP returned was my ISP&amp;rsquo;s hijacked reply (pointing to their own generic server that they use to respond to blocked site requests) but in the last one (using port 5353), the DNS request went unmodified and came back with the real IP of the website. Success!&lt;/p>
&lt;h2 id="configuring-the-usg">Configuring the USG&lt;/h2>
&lt;p>So, on to the real deal. USG does have a UI option in the Unify Controller software to set custom DNS servers. However, it takes only IPs and not ports. This is understandable as I found out after going through resolv.conf manpages and several old discussions. resolv.conf&amp;rsquo;s support for alternate ports has been discussed several times and rejected in favor of other system wide solutions.&lt;/p>
&lt;p>I had a thought to use iptables to forward all requests going out to WAN port 53 to port 5353. But, this is like using a shotgun to pop balloons. Firewall solutions like this should be used rarely as they strain the traffic processing as they build up quickly.&lt;/p>
&lt;p>USG uses dnsmasq though, so there was hope. DNSmasq allows to set ports as well for nameservers as per its manpage. So, the problem statement was thus as below:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Don&amp;rsquo;t use resolv.conf at all (to avoid ISP&amp;rsquo;s DNS servers or any other DNS servers leaking traffic onto port 53)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Set OpenDNS nameserver ip/port in dnsmasq for all sites (Generally folks use it for specific sites, but the configuration syntax is flexible enough to mould it anyways and we can set it as a generic server too)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>There&amp;rsquo;s no UI option for this though, so you&amp;rsquo;ve to drop down to the CLI. Launch an ssh session to the USG ip and use the credentials that you&amp;rsquo;ve set in the unify controller to log in. Then run the below set of commands. The procedure is slightly different from a regular linux box (where you&amp;rsquo;d directly edit dnsmasq.conf) due to the specific nature of config management of ubiquiti devices.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span># Switch to configuration mode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ configure
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Below commands will generate the appropriate dnsmasq.conf automaticall
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Don&amp;#39;t use resolve.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ set service dns forwarding options &amp;#34;no-resolv&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Set the opendns nameserver for all sites
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ set service dns forwarding options &amp;#34;server=208.67.222.222#5353&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Generate the config files, save and exit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ commit;save;exit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now, you can try browsing (or doing nslookup) for the blocked website and it&amp;rsquo;ll go through succesfully. Note that like all other CLI changes for USG, the above changes can be lost whenever you make some other config change through UI or update USG firmware. To make it persistent across such events, you need to follow the &lt;a href="https://help.ubnt.com/hc/en-us/articles/215458888-UniFi-How-to-further-customize-USG-configuration-with-config-gateway-json">config.gateway json process&lt;/a>.&lt;/p></content></item></channel></rss>