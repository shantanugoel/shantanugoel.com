<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Windows on Shantanu Vs The World</title><link>https://shantanugoel.com/tags/windows/</link><description>Recent content in Windows on Shantanu Vs The World</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>shantanu@shantanugoel.com (Shantanu Goel)</managingEditor><webMaster>shantanu@shantanugoel.com (Shantanu Goel)</webMaster><lastBuildDate>Mon, 23 Jul 2012 04:46:08 +0000</lastBuildDate><atom:link href="https://shantanugoel.com/tags/windows/index.xml" rel="self" type="application/rss+xml"/><item><title>Bugs: What you see is not always what it is</title><link>https://shantanugoel.com/2012/07/23/bugs-what-you-see-is-not-always-what-it-is/</link><pubDate>Mon, 23 Jul 2012 04:46:08 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2012/07/23/bugs-what-you-see-is-not-always-what-it-is/</guid><description>Came across a neat nugget of historical information today that yet again proves that the software/hardware bug behavior that you may see on the surface might imply something totally opposite to what the problem actually is.
The &amp;ldquo;bug&amp;rdquo; existed back in the old times of the floppy drives. These drives seemed to fail very quickly on linux systems compared to MS DOS/Windows. Now, a normal observer would say linux had bad handling of the drives or was doing something messy that made these drives crap out ever so often.</description><content>&lt;p>Came across a neat nugget of historical information today that &lt;a href="http://www.ibiblio.org/harris/500milemail.html">yet again&lt;/a> proves that the software/hardware bug behavior that you may see on the surface might imply something totally opposite to what the problem actually is.&lt;/p>
&lt;p>The &amp;ldquo;bug&amp;rdquo; existed back in the old times of the floppy drives. These drives seemed to fail very quickly on linux systems compared to MS DOS/Windows. Now, a normal observer would say linux had bad handling of the drives or was doing something messy that made these drives crap out ever so often. But as it turned out, the issue was the complete opposite. The real reason behind this problem was that linux was rock solid and stable compared to MS Dos.&lt;/p>
&lt;p>Woah!! Hold on a minute, you say. How can being stable lead to hardware failure? Well, since DOS used to crash (or had to be rebooted) so often, it used to do a check on the floppy at boot up which used to shake up any dust on the drive. Since no such frequent reboots were required in linux, it caused a dust build up on the drive ultimately leading to it&amp;rsquo;s premature demise :(. Solution: A special program &amp;ldquo;diskseekd&amp;rdquo; whose sole purpose was to check the disk periodically to shake the dust out of the system and keep it happily working. Learned something nice today, isn&amp;rsquo;t it? :) Below is an excerpt frm the man page of diskseekd&lt;/p>
&lt;!-- raw HTML omitted --></content></item><item><title>The Real Threat Of Windows Phone 7</title><link>https://shantanugoel.com/2010/10/28/the-real-threat-of-windows-phone-7/</link><pubDate>Thu, 28 Oct 2010 19:48:34 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2010/10/28/the-real-threat-of-windows-phone-7/</guid><description>Many people say that Windows Phone 7 is a threat to iPhone because they are bringing in a super platform with a choice of multiple designs and multiple carriers with great Enterprise and gaming support and maintaining the lucrative integration that iPhone provides. Many also say that Windows Phone 7 is a threat to Android because it solves the problem of Apple&amp;rsquo;s draconian policies, gives choice to customers and all this without fragmenting the OS all over the place.</description><content>&lt;p>Many people say that Windows Phone 7 is a threat to iPhone because they are bringing in a super platform with a choice of multiple designs and multiple carriers with great Enterprise and gaming support and maintaining the lucrative integration that iPhone provides. Many also say that Windows Phone 7 is a threat to Android because it solves the problem of Apple&amp;rsquo;s draconian policies, gives choice to customers and all this without fragmenting the OS all over the place.&lt;/p>
&lt;p>However, I beg to differ. Windows Phone 7 is a threat to the world wide web and web apps. It plans to help the developers and users by going one up on fragmentation of Android but in the process will fragment the web app world itself. This is because the browser in WP7 is based on Internet Explorer 7. Yes, not IE 9, not IE8, but IE7, which is already four years old now.&lt;/p>
&lt;p>Right now, if you have to do a web app, you can do it in HTML5, CSS3 etc and assume that it will work over most mobile handsets out there. Enter WP7 with its archaic browser and the developer has one more headache to solve. His app will be, in most cases, incompatible with the &amp;ldquo;new&amp;rdquo; platform and so he will have to code another version that works on IE7 as well. This will not only result in wasted time and effort but in fact, the developer may even have to hold back on features that might not work well on this ugly duckling which will hold the whole pack down for God knows how much more time.&lt;/p>
&lt;p>So, there it is. If the Android fragmentation reports are true, you can just buy another handset like an iPhone but this comeback-from-the-grave monster will fragment the mobile web app world itself so that you won&amp;rsquo;t have any reprieve whichever phone you buy. So, I appeal to you. If you want a better mobile future, talk about it, write about it and let Microsoft know that it can and must do better.&lt;/p></content></item><item><title>[TIP] Add Directories Recursively To Perforce (P4) Depot</title><link>https://shantanugoel.com/2009/03/03/add-directories-recursively-to-perforce-p4-depot/</link><pubDate>Tue, 03 Mar 2009 13:30:00 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2009/03/03/add-directories-recursively-to-perforce-p4-depot/</guid><description>Perforce is an excellent revision control system for the code but the GUIs (P4WIN and P4V) are too slow to be productive. Hence, I like to do most of my work through command lines. Now, the other day I needed to add a directory and all its subdirectories and files to the repository (or perforce depot). This is a trivial task through the GUI. Just drag the top level directory onto the changelist area and the GUI takes care of everything but there is no straightforward way to do this through command line, until, I discovered the &amp;ldquo;-x&amp;rdquo; option of P4.</description><content>&lt;p>Perforce is an excellent revision control system for the code but the GUIs (P4WIN and P4V) are too slow to be productive. Hence, I like to do most of my work through command lines. Now, the other day I needed to add a directory and all its subdirectories and files to the repository (or perforce depot). This is a trivial task through the GUI. Just drag the top level directory onto the changelist area and the GUI takes care of everything but there is no straightforward way to do this through command line, until, I discovered the &amp;ldquo;-x&amp;rdquo; option of P4. So, here it is how to achieve this. Run the following command after cd&amp;rsquo;ing to the directory you want to add:&lt;/p>
&lt;p>For Unix/Linux (or if you have the unix utils installed in windows through GNUWin32, UnixUtils or Cygwin):&lt;/p>
&lt;p>&lt;code>find . -type f -print | p4 -x - add&amp;lt;/blockquote&amp;gt;&lt;/code>&lt;/p>
&lt;p>For Windows:&lt;/p>
&lt;p>&lt;code>dir /b /s /a-d | p4 -x - add&amp;lt;/blockquote&amp;gt;&lt;/code>&lt;/p>
&lt;p>If you have your own tips and tricks about perforce to carry out tasks easily that do not seem so simple in the first go through command line, please do let me know.&lt;/p></content></item><item><title>TIP: Free Downloads For Windows Vista, XP Professional, Visual Studio 2008, MSDN And Much More</title><link>https://shantanugoel.com/2008/10/08/tip-free-downloads-for-windows-vista-xp-professional-visual-studio-2008-msdn-and-much-more/</link><pubDate>Wed, 08 Oct 2008 19:31:52 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2008/10/08/tip-free-downloads-for-windows-vista-xp-professional-visual-studio-2008-msdn-and-much-more/</guid><description>If you are a student (this works for non-students as well but I expect you to be honest ;) ), you can download a whole bunch of software for free. How? Well, all you need is to become an ACM student member, and join the MSDN AA (Microsoft Developer Network Academic Alliance) ACM Student Benefit Program.
Normally it takes around 19$ for you to become a student member but you can do it for free for a limited time by going to http://campus.</description><content>&lt;p>If you are a student (this works for non-students as well but I expect you to be honest ;) ), you can download a whole bunch of software for free. How? Well, all you need is to become an ACM student member, and join the MSDN AA (Microsoft Developer Network Academic Alliance) ACM Student Benefit Program.&lt;/p>
&lt;p>Normally it takes around 19$ for you to become a student member but you can do it for free for a limited time by going to &lt;a href="http://campus.acm.org/icpc/">http://campus.acm.org/icpc/&lt;/a>&lt;/p>
&lt;p>So, the steps to get all these software for free are:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Go to the above mentioned link and sign up for ACM student membership&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Once you join, create an ACM web account&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Log into My ACM, and then opt into MSDN AA ACM Student Benefit Program (Look for the link: &lt;strong>Free Software for ACM Students&lt;/strong>)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You’ll get an approval email within 24 hours after which you can log on to your MSDN AA account and download your choice of softwares.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>The Softwares that you can now download for free through this are:&lt;/p>
&lt;p>Windows Vista
Windows XP Professional
Windows Server 2008
Visual Studio 2008 Professional
Visio Professional2007
Office Project Professional 2007
Access 2007
Visual Studio 2005 Team System SQL Server 2005
Expression Studio
Sharepoint Designer 2007
Virtual PC 2007
Virtual PC for Mac 7.0.2
Visual C# 2005 Express Edition
Visual C++ 2005 Express Edition
And much, much more!&lt;/p>
&lt;p>Let me know if this helped you out or if you have any other such free deals/tips of your own.&lt;/p></content></item><item><title>SpiderOak Promotion Code For Free Upgrade To 10 GB</title><link>https://shantanugoel.com/2008/09/12/spideroak-promotion-code-for-free-upgrade-to-10-gb/</link><pubDate>Fri, 12 Sep 2008 20:58:32 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2008/09/12/spideroak-promotion-code-for-free-upgrade-to-10-gb/</guid><description>Just a small shout out to let you guys know that you can use the discount coupon code “linkup” while signing up the excellent online backup service SpiderOak to get a major bump to 10 GB from the 2 GB that they give to normal accounts.
For those who don’t know SpiderOak is a great online data backup service, with its major strengths being truly cross paltform (Mac/Linux/Windows – 32 bit as well as 64 bit), easy interface, rsync like differential backups to save time and disk space, versioned file history, web as well as client interface, unlimited number of devices, unlimited bandwidth, etc etc.</description><content>&lt;p>Just a small shout out to let you guys know that you can use the discount coupon code “linkup” while signing up the excellent online backup service &lt;a href="http://spideroak.com/">SpiderOak&lt;/a> to get a major bump to 10 GB from the 2 GB that they give to normal accounts.&lt;/p>
&lt;p>For those who don’t know SpiderOak is a great online data backup service, with its major strengths being truly cross paltform (Mac/Linux/Windows – 32 bit as well as 64 bit), easy interface, rsync like differential backups to save time and disk space, versioned file history, web as well as client interface, unlimited number of devices, unlimited bandwidth, etc etc.&lt;/p>
&lt;p>BTW, let me know if you use any other good online backup services. And what are your views about &lt;a href="http://getdropbox.com/">Dropbox&lt;/a> that just came out of beta and even released a linux client finally…&lt;/p></content></item><item><title>Hi BIOS! My Name Is "Linux", Or Is It?</title><link>https://shantanugoel.com/2008/08/03/hi-bios-my-name-is-linux-or-is-it/</link><pubDate>Sun, 03 Aug 2008 17:44:30 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2008/08/03/hi-bios-my-name-is-linux-or-is-it/</guid><description>A couple of days ago, I read this on Matthew Garrette’s blog, where he tells us about a vendor’s BIOS trying to figure out the OS type/version and setting things around on deciding the OS it is running. The call in question was _OSI(“Linux”). He goes on to say that the action the firmware takes, on finding out if the OS is linux, was probably inaccurate and it was good that linux kernel DOES NOT identify itself as “Linux” and returns false for the _OSI(“Linux”) and instead returns true when probed for Windows.</description><content>&lt;p>A couple of days ago, I read &lt;a href="http://mjg59.livejournal.com/96270.html">this&lt;/a> on Matthew Garrette’s blog, where he tells us about a vendor’s BIOS trying to figure out the OS type/version and setting things around on deciding the OS it is running. The call in question was _OSI(“Linux”). He goes on to say that the action the firmware takes, on finding out if the OS is linux, was probably inaccurate and it was good that linux kernel DOES NOT identify itself as “Linux” and returns false for the _OSI(“Linux”) and instead returns true when probed for Windows.&lt;/p>
&lt;p>That got me thinking, the first thought being that isn’t this a BIG flaw in the kernel. I mean, trying to make the firmware aware of the OS and doing things accordingly is a good thing, right? Vendors can provide workarounds for OS flaws in this way. e.g. the thermal critical temperature event workaround that HP has for Windows Vista. If we are just emulating Vista here, then aren’t we inheriting their bugs as well? But “Never make judgements straightaway”, I have learnt in the past. So, thought about reading it a bit more. After some googling around, I came to know the sound reasoning behind the decision.&lt;/p>
&lt;ol>
&lt;li>Why not return true for _OSI(“Linux”)?&lt;/li>
&lt;/ol>
&lt;p>The difference between Linux and Windows is that the linux kernel is a continuously (and rapidly) moving target. When somebody probes for Windows 98 or Windows 2000 or Windows Vista, they can be sure about the behaviour, but Linux is too generic for us. The bug in one version of the kernel can be fixed in another one, and the behaviour changes, so one cannot rely on _OSI(“Linux”) as there is no generic/constant “Linux” interface.&lt;/p>
&lt;ol start="2">
&lt;li>Why not then support _OSI(“Linux.xx.xx.xx”) or something equivalent to signify the kernel version?&lt;/li>
&lt;/ol>
&lt;p>This is also not reliable because which kernel would this be, the mainline, Ubuntu’s kernel, Fedora’s kernel, Suse’s kernel, or some user patched kernel? Moreover, the bugs fixed in later kernel versions are often backported to earlier versions by various distros. So, again one cannot rely on the kernel version as such, and there are just too many different kernel branches out there for a vendor to check against.&lt;/p>
&lt;ol start="3">
&lt;li>Why to return true for something like _OS(“Windows 2006”)?&lt;/li>
&lt;/ol>
&lt;p>What I found out is that they do it because most vendors do most checks only if they find Windows and hence, it becomes a necessity to return true for this, for now.&lt;/p>
&lt;ol start="4">
&lt;li>But what does that mean, is it always going to remain the same?&lt;/li>
&lt;/ol>
&lt;p>Basically, what the kernel guys want is a better usage of the _OSI strings. They want the BIOS developers to check for a “capability” rather than a platform or platform version. Because consistent behaviour might be expected when checked for a platform like Windows (Actually its a platform + its version because there are separate strings for Windows 98, Windows ME, Windows NT, Windows Vista, etc) because they are slow moving targets with major changes to ACPI behaviour done only with the next version of the OS that is released after many years, but this is not true for faster targets like linux where changes happen often and can even be backported. So, essentially the situation will remain the same until vendors straighten out their code.&lt;/p>
&lt;ol start="5">
&lt;li>But is it justified for the linux developers/users to expect this to be followed by the vendors?&lt;/li>
&lt;/ol>
&lt;p>This is a tough question with no straight answer. Even though linux users are in minority but still they are significant in number, and if they pay the same money for the hardware as their windows counterparts, they should get the same level of firmware support as well. However, that said, it is also true that the vendors have to draw the line somewhere and given the rapidly changing behaviour of the kernel they cannot always be expected to keep up, especially with all the costs involved. Thats why the kernel community wants them to be aware of these inherent flaws in their design and move to a system (check for capability, not for platform) where they don’t have to “keep up” anymore. And meanwhile they absorb the strain into the kernel/drivers, emulating as Windows, and trying to make the workarounds for Windows bugs in their code instead. And they have started efforts to make the vendors aware of this linux peculiarity and are trying to document the linux behaviour&lt;/p>
&lt;p>Reading material: Thomas Renninger wrote this doc” &lt;a href="ftp://ftp.suse.com/pub/people/trenn/ACPI_BIOS_on_Linux_guide/acpi_guideline_for_vendors.pdf">ACPI BIOS Guideline For Linux&lt;/a>.&lt;/p>
&lt;p>I’m convinced with the reasoning. But as always, one man cannot look at all the angles and I might have missed the one that makes this all junk. Are you convinced too? Or do you have any other angle to provide?&lt;/p></content></item><item><title>The Biggest Flaw in Gnome UI</title><link>https://shantanugoel.com/2008/07/07/the-biggest-flaw-in-gnome-ui/</link><pubDate>Mon, 07 Jul 2008 14:28:02 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2008/07/07/the-biggest-flaw-in-gnome-ui/</guid><description>Everywhere you go, any building you enter, any OS you operate, any settings window you open, one rule remains set in stone, “THE ESCAPE DOOR”. Always give an exit path, a way to make it all go away, make it look like nothing happened. But Gnome seems to think otherwise. Any settings window you open, all you see is a “close” button.
I made a few changes and then tried to “undo” them by using the following methods:</description><content>&lt;p>Everywhere you go, any building you enter, any OS you operate, any settings window you open, one rule remains set in stone, “THE ESCAPE DOOR”. Always give an exit path, a way to make it all go away, make it look like nothing happened. But Gnome seems to think otherwise. Any settings window you open, all you see is a “close” button.&lt;/p>
&lt;p>&lt;a href="https://shantanugoel.com/img/uploads/gnome_2Dui_2Dflaw.jpg">&lt;img src="https://shantanugoel.com/img/uploads/gnome_2Dui_2Dflaw_thumb.jpg" alt="Gnome-ui-flaw">&lt;/a>&lt;/p>
&lt;p>I made a few changes and then tried to “undo” them by using the following methods:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Pressing the “close” button.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Pressing the little “x” on the upper right corner.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Pressing the “Escape” key.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Pressing “Alt+F4”.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>But no dice. Every method leads to saving of changes. The same thing occurs with EVERY dialogue box you can find in Gnome. I hate to say that this is something Windows seems to have got right (Maybe their UI designers are better than their OS programmers). What’s even more surprising is that even cross-platform apps (e.g. Firefox) give the “Apply” and “Cancel” buttons in Windows but not in Linux.&lt;/p>
&lt;p>I hope Gnome developers listen and patch this up, or if there is any “hidden” tricks up your sleeve that will allow me to “go back in time”, please do let me know.&lt;/p></content></item><item><title>Want To Program Smartly In C? Use GLib</title><link>https://shantanugoel.com/2008/05/03/smart-programming-in-c-using-glib/</link><pubDate>Sat, 03 May 2008 15:30:16 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2008/05/03/smart-programming-in-c-using-glib/</guid><description>GLib - An Introduction:
GLib is a utility library for C, which augments the standard C library in several purposeful ways to make your life that much easier while programming. GLib has the following things to offer you:
**1. Portability: **The main issue that haunts any C developer is the portability of code. One cannot rely on the standard C library for this as you may find many functions that work differently under different platforms are aren&amp;rsquo;t there at all sometimes.</description><content>&lt;p>&lt;strong>GLib - An Introduction:&lt;/strong>&lt;/p>
&lt;p>&lt;a href="http://library.gnome.org/devel/glib/">GLib&lt;/a> is a utility library for C, which augments the standard C library in several purposeful ways to make your life that much easier while programming. GLib has the following things to offer you:&lt;/p>
&lt;p>**1. Portability: **The main issue that haunts any C developer is the portability of code. One cannot rely on the standard C library for this as you may find many functions that work differently under different platforms are aren&amp;rsquo;t there at all sometimes. GLib ensures that the all the functionality exposed by it remains consistent across platforms, so that you can rest assured that your code will work the way its supposed to work irrespective of the Operating System it&amp;rsquo;s being used for (Of course, this assumes that you have ensured about portability aspects of your non-GLib related source code). Moreover, GLib is available for a vast array of contemporary Operating Systems including GNU/Linux, Microsoft Windows and Mac OS X.&lt;/p>
&lt;p>**2. Security: **Though you still need to be careful about things like freeing allocated memories properly, etc but GLib does ensure that all its functionality is secure. Moreover, GLib has a policy of ensuring that all its functions are threadsafe. This saves you from a lot of checks and balances and locks and scheduling considerations if you had written all this yourself.&lt;/p>
&lt;p>&lt;strong>3. Useful Data Types:&lt;/strong> GLib exposes a lot of data types. Some are very basic that maintain portability across OS&amp;rsquo;s and 32-bit and 64-bit systems. e.g. you can rest assured that gint32 will always be 32 bit and gint64 will always be 64 bit data types.&lt;/p>
&lt;p>Apart from this, it also provides a lot of derived data types e.g. singly linked lists, doubly linked lists, hash tables, stacks, queues, trees, and much more. It&amp;rsquo;d basically cover most of you data structure needs that you&amp;rsquo;d have otherwise had to implement yourselves. And it also provides helper functions that makes working with them so much more easier. If you have ever used Perl, and have wished that C programming could be a bit faster like it, you will be pleasantly surprised.&lt;/p>
&lt;p>**4. Utility Functions: **GLib also provides various utility functions to ease out your manipulation of data. Some of the functions are meant as more secure and portable replacements for those provided with standard C library, while rest are meant to provide other useful functionality which you earlier had to implement in your code. Some of the major areas covered by GLib&amp;rsquo;s utility functions are String manipulation, character set manipulation and conversion (including unicode and base64), using regular expressions, file manipulation, shell functions, config file parsing (my favourite), etc.&lt;/p>
&lt;p>&lt;strong>End Note:&lt;/strong> I can understand that there would be a lot of people who believe that use of GLib is dumbing down programming in C. After all, we take pride being in control of our code and this is why we love progrmming in C because we have options to do things in our own way. Yes, that is all true but there comes a time where you&amp;rsquo;d like to spend more time in developing the core functionality of your app, or focus more on giving a rapid shape to your new idea, rather than reinventing the wheel and fumbling around with writing the helper functions. So, keeping that in mind I believe GLib is wonderful piece of code that has enabled me to churn out new apps that much faster.&lt;/p></content></item><item><title>Windows App Alternatives For Linux: MSPaint</title><link>https://shantanugoel.com/2008/04/28/windows-app-alternatives-for-linux-mspaint/</link><pubDate>Mon, 28 Apr 2008 15:30:44 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2008/04/28/windows-app-alternatives-for-linux-mspaint/</guid><description>Some of you might know that I was in the hunt for a decent mspaint alternative recently. Note that I didn&amp;rsquo;t go for GIMP / Inkscape etc because they were overkill for what I wanted to do. Many a times, I just wanted to touch up a screenshot or make a simple flow image by drawing a few boxes, use a few pointing arrows, and add some text here and there.</description><content>&lt;p>Some of you might know that I was in the hunt for a decent mspaint alternative &lt;a href="https://shantanugoel.com/2008/04/03/wanted-a-good-paint-program-for-linux.html">recently&lt;/a>. Note that I didn&amp;rsquo;t go for GIMP / Inkscape etc because they were overkill for what I wanted to do. Many a times, I just wanted to touch up a screenshot or make a simple flow image by drawing a few boxes, use a few pointing arrows, and add some text here and there. All this could be done with the previous mentioned programs as well but took a bit more steps than I wanted (stroking the selections / paths for lines, boxes, circles, and even then, no arrows). I didn&amp;rsquo;t find an adequate replacement at the time but got it now, so thought of writing about it. Basically I came across 4 apps: tuxpaint, gpaint, kolourpaint and mtpaint. Won&amp;rsquo;t discuss tuxpaint here cuz I found it a little too kiddish.&lt;/p>
&lt;ul>
&lt;li>gpaint: (Available in Ubuntu repositories) gpaint is a very simplistic program that has a mspaint look and feel but feels a bit lacking. It can do basic procedures like basic shape selections, lines, boxes but that&amp;rsquo;s it. No polygon selections, brush, color picker, etc, and yeah no arrows. Moreover, it saves only in pngs.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://shantanugoel.com/img/uploads/gpaint.png">&lt;img src="https://shantanugoel.com/img/uploads/gpaint-thumb.png" alt="gpaint screenshot">&lt;/a>&lt;/p>
&lt;ul>
&lt;li>kolourpaint: (Available in Ubuntu Repositories) kolourpaint is very close to mspaint. Infact it does a bit more than mspaint. It has all the things that I mentioned as missing in gpaint, plus has basic image manipulation effects as well. I liked it quite a bit, but it had 2 drawbacks for me, still no arrows, and it depends on KDE/Qt libraries.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://shantanugoel.com/img/uploads/kolourpaint.png">&lt;img src="https://shantanugoel.com/img/uploads/kolourpaint-thumb.png" alt="kolourpaint screenshot">&lt;/a>&lt;/p>
&lt;ul>
&lt;li>mtpaint: (Available in Ubuntu Repositories from Gutsy onwards. Rest of the folks can search for a package on net, or find a suitable package or source &lt;a href="http://sourceforge.net/project/showfiles.php?group_id=155874&amp;amp;package_id=173703">here&lt;/a>) This is the software that got me most excited. It is actually a kind of lower-intermediate package that lies somewhere between mspaint and a very basic, poor man&amp;rsquo;s GIMP. It has all the features ok kolourpaint, (plus arrows at last :-) ), a small smattering of basic effects (gaussian, edge detection, blur, embossing), can work with gifs also (handles transparency and animation quite well). So, this is the one I would be sticking to for now.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://shantanugoel.com/img/uploads/mtpaint.png">&lt;img src="https://shantanugoel.com/img/uploads/mtpaint-thumb.png" alt="mtpaint screenshot">&lt;/a>&lt;/p>
&lt;p>I am using mtpaint now for my basic needs. Hope the article benefitted you as well. If I missed out on some package, then do let me know.&lt;/p></content></item><item><title>ImageMagick: Weaving Magic With Your Pictures</title><link>https://shantanugoel.com/2008/04/26/imagemagick-weaving-magic-with-your-pictures/</link><pubDate>Sat, 26 Apr 2008 06:23:18 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2008/04/26/imagemagick-weaving-magic-with-your-pictures/</guid><description>I’ve known about ImageMagick tools for quite some time now but never dabbled with it. A couple of weeks ago I played with it for some time (notice the new cascaded polaroid pics header above) and was amazed even more. Few of its shining features:
It has almost unlimited features to manipulate your images through its tools like convert, montage, mogrify etc and their long list of options.
It is available for Windows, Linux and Mac as well.</description><content>&lt;p>I’ve known about ImageMagick tools for quite some time now but never dabbled with it. A couple of weeks ago I played with it for some time (notice the new cascaded polaroid pics header above) and was amazed even more. Few of its shining features:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>It has almost unlimited features to manipulate your images through its tools like convert, montage, mogrify etc and their long list of options.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It is available for Windows, Linux and Mac as well.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Runs on web servers also (most of those nifty image sites use it for run time image manipulation)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It is amazingly fast.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Runs on the command line, which means batching of operations can be done and is also good for butter fingered people like me who are clumsy with GUI based image manipulation programs&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Has modules for interfacing with C, perl, php, C++, C#, java, etc. So, you can create your own applications around it.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It’s FREE (as in speech and as in beer)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It has an amazing documentation over at imagemagick.org and also a very thriving community, so help is just a few clicks away.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>As a very rudimentary sample of what it can do for you, take a look at my blog’s header above. I just gave it a few pics and ran a command, and it resized them, turned them into polaroid pics, rotated them at random angles, made the background transparent, strung them together to make a webpage header/banner.&lt;/p>
&lt;p>Since the command was specific for the number and names of images, I made a simple perl script to automate the command making process so you can also download this script (link at the end of post) and run it to create your own header. (You might want to tweak the $w and $h variables in the script to specify your header’s width and height). Running it would be like&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>./pano.pl &amp;lt;imagenames&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>e.g.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./pano.pl myimages/*
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After I made this script, I came across &lt;a href="http://stason.org/photos/gallery/">Stas Bekman’s photo gallery&lt;/a> which has a much better and cool stack effect with photos. And he generously agreed to share his script (much more sophisticated than my my few lines) with me. His script is also attached below.&lt;/p>
&lt;p>Let me know if you use any of these scripts (as it is or after modifying them) to create any cool effects.&lt;/p></content></item><item><title>5 Reasons I Like Linux (And 5 Why I Dislike It)</title><link>https://shantanugoel.com/2008/04/19/5-reasons-i-like-linux-and-5-why-i-dislike-it/</link><pubDate>Sat, 19 Apr 2008 20:20:40 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2008/04/19/5-reasons-i-like-linux-and-5-why-i-dislike-it/</guid><description>Disclaimer Notes:
I wrote this because these things just came into my mind today while I was reading about the impending “Hardy Heron” release related things and saw that there is a lot of FUD being spread still. So, thought of jotting down my likes/dislikes and not making it a linux v/s windows campaign. Though at a few places, it might be necessary to compare the two just to put things into perspective.</description><content>&lt;p>&lt;strong>Disclaimer Notes:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>I wrote this because these things just came into my mind today while I was reading about the impending “Hardy Heron” release related things and saw that there is a lot of FUD being spread still. So, thought of jotting down my likes/dislikes and not making it a linux v/s windows campaign. Though at a few places, it might be necessary to compare the two just to put things into perspective.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>These are reasons why “&lt;strong>I&lt;/strong>” like/dislike Linux and not why others might like/dislike it although you might find common patterns.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Most of my recent experience is with Ubuntu these days, so most examples would be from it as well.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>These reasons are purely from an end-user’s perspective and not from a linux developer’s perspective. So, I’m not taking into factor that I can change the kernel (or most other things’) source code because “generally” I don’t.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>This post is quite long. And if you have a flame to send out my way (which you are most welcome to do), please read it in its entirety before doing so, because many things I say at some point have some caveats covered at another point.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>5 Reasons why I like Linux:&lt;/strong>&lt;/p>
&lt;p>These reasons aren’t listed in any particular order. All of them are quite important for me.&lt;/p>
&lt;p>&lt;strong>1. Light on Resources&lt;/strong>: I must say that Linux is what still keeps my more than 3 years old laptop running in a prim condition with the latest and greatest of everything from technology stand-point as well as eye-candy stuff. An example: With almost every effect of Compiz Fusion turned on, hordes of screenlets and AWN enabled, an Apache/MySQL/PHP based server running, and a dozen of other applications (firefox, nautilus, terminal, GIMP, RhythmBox, Open Office Word Processor, VLC player, etc) open, my setup consumes around 500 MB of RAM. While on the other hand, if I was using Vista, It’d have demanded atleast 1 GB of RAM just to run Aero, forget about the rest of the things.&lt;/p>
&lt;p>&lt;strong>2. Cost&lt;/strong>: This is a big factor for me. Almost everything is free or atleast has a free alternative available. Most of the times I’ve found these free software to be much better than commercial software in terms of feature sets as well as stability. But even otherwise, when there are cases where the free alternative a bit lagging as compared to the commercial one (e.g. GIMP v/s Photoshop), I haven’t felt that my needs have ever outgrown the free software.&lt;/p>
&lt;p>&lt;strong>3. Ease of Use&lt;/strong>: Doing “stuff” on linux is just so easy. By “stuff”, I mean everything from doing some normal day chores, downloading files, customizing things, automating routine tasks, etc. The backbone for this is “the terminal” (not the movie :P). I can do almost anything I want from the console. It not only saves me time and frustration in executing a program, waiting for the GUI to load and then go through a series of clicks but also allows me to batch up everything into one pretty little command. Moreover, every thing has so many options that I can configure to my liking. (More on the “options” later below)&lt;/p>
&lt;p>&lt;strong>4. Getting Software&lt;/strong>: Getting software couldn’t be more easy.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>It generally involves typing in “sudo apt-get install &lt;!-- raw HTML omitted -->”, pressing enter, and that’s it. The latest version is ready to roll on your machine.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Reboots are minimal. Even after thinking for quite long, it’s very hard to recall any time when I had to “log-off” my system (let alone reboot) after installing a software (or even a driver)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Updates are automatic, and not just for the OS or a few core components, but for all the software that I installed through repositories (but not for the ones which I installed from my local deb’s or compilations, which is understandable of course)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The latest fixes/patches are available very quickly. Moreover, the revision cycle for most distros lies between 6–12 months and hence, even a complete desktop upgrade is quickly available as well (as compared to the 7 year period after which Vista came out). You can even “upgrade” to the latest distro revision without having to wipe everything, though I generally prefer a clean install.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>5. Security&lt;/strong>:Now, I agree with everyone that the reason why we don’t see many viruses for linux is because the user base is very less as compared to other OS’s but I also believe that this is not the “only” reason.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>The thing is that since most of the software is open source, so exploits are found quite quickly and patched and released rapidly. While in a closed source environments, even if a white hat reports it, the exploits go on un-noticed, un-worked upon by the developers (A good example is the recent falling of Vista during the “Pwn to Own” contest because of a known but unpatched vulnerability by Adobe, not a fault of Vista in this case though but you get my drift).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The security model otherwise is also quite tight and its very hard for someone to exploit it till the time you use common sense along with it. (A linux virus can easily wipe ur “/home” without acqurining root permissions).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>5 Reasons why I dislike Linux&lt;/strong>&lt;/p>
&lt;p>These reasons irk me the most but aren’t enough for to make me move away from Linux. I mention them because getting them right would make my Linux expereince that much more joyful and probably others feels the same too. Moreover, this is not a gripe and is not a command/order to “the Linux guys” out there to fix it, because linux is of, by and for the community. And being a part of this community, I share the burden of this equally and would like to help out in making it better in whatever ways possible, developing, testing, suggesting things.&lt;/p>
&lt;p>**1. Getting Software: **I had mentioned about how easy it is to get software from most distros’ repositories with a single command. However, getting and installing software is also a challenge that many people face in linux. After sometime your particular version of the distro stops updating the software and will include only security fixes and such. Now, there are many good people who would backport software for your version but not all the time. You can download pacakges off the internet (debs’ for ubuntu) but they might not work because of too many inter-mingled dependencies. Compiling is another option but many times, it can spiral out of hand. I hope we can better softwares like GDebi that could make this much more easier.&lt;/p>
&lt;p>**2. Options: **Earlier I listed having so many options as one of my reasons to like Linux. But, sometimes, too many options tend to get to my head. This gets even more difficult when you have too many choices but no clue about what means what and which one is the best. However, the community is continously trying to make this right. A lot of documentation projects are going on, and the mailing lists, IRC networks and other forums also give out a lot of information. Especially for Ubuntu, I find a huge community based support system which always helps me out. (PS – The Ubuntu Forums are the nicest forums you’ll ever come across. I am yet to come across a post that contains words like “RTFM” or “n00b”)&lt;/p>
&lt;p>&lt;strong>3. Ease Of Use:&lt;/strong> Some times, just some times, the lack of a GUI for common things irks me and I wish in respect of a few things (read wi-fi) that things could “just work”. But I guess this is a trade-off that I can live with, and moreover this situation is also improving especilly due to the efforts taken by Ubuntu, Mandriva, Fedora, GNOME and KDE. (Special thanks to nm-applet ;-) ). Moreover, Hardy Heron, b43 and the latest linux kernels promise to solve the wi-fi setup issues.&lt;/p>
&lt;p>&lt;strong>4. Browsing&lt;/strong>: The browsing experience on linux isn’t too great. But this is not a fault of Linux as such. This is due to companies providing adequate linux support (e.g. java plugins for 64 bit) and too many sites optimizing their code for IE. But again, there is hope for this as we can already run IE on linux (IEs4Linux) plus SUN has promised a 64 bit java firefox plugin with the next JRE.&lt;/p>
&lt;p>**5. Drivers: **This is again due to companies not giving proper linux support for their hardware and not even releasing their hardware details for the OSS community to develop their own drivers. However, I can understand that giving out hardware details might not be an option for these companies considering the competition, and also proper software support might be a bit unfeasible due to a smaller consumer base. But again, more and more companies are seeing the light now and releasing proper drivers for linux, with Nvidia and ATi taking the lead (When will Creative listen?). And a special thanks to the OSS community for making working drivers despite all this.&lt;/p>
&lt;p>&lt;strong>So, this is it. After reading back through what I just wrote, I am dead sure that I will stick to Linux as the trade-offs are too meagre for me. Will you?&lt;/strong>&lt;/p></content></item><item><title>TIP: Make Those Linux Samba Shares Accessible From Windows Mobile</title><link>https://shantanugoel.com/2008/03/30/tip-make-those-linux-samba-shares-accessible-from-windows-mobile/</link><pubDate>Sun, 30 Mar 2008 10:30:12 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2008/03/30/tip-make-those-linux-samba-shares-accessible-from-windows-mobile/</guid><description>If you have ever needed to share files between your Linux and Windows computers, you have obviously used Samba, and have been quite happy with the way it seamlessly provides access to and from shared folders/files from Windows and Linux. However, many people complain that although their smb/Samba shares are accessible from Windows, they are not able to do the same with their Windows Mobile devices. e.g., using a tool called &amp;ldquo;Resco Explorer&amp;rdquo; on Windows Mobile, all they get while searching for their linux based Samba shares is the following screenshot:</description><content>&lt;p>If you have ever needed to share files between your Linux and Windows computers, you have obviously used &lt;a href="http://en.wikipedia.org/wiki/Samba_(software)">Samba&lt;/a>, and have been quite happy with the way it seamlessly provides access to and from shared folders/files from Windows and Linux. However, many people complain that although their smb/Samba shares are accessible from Windows, they are not able to do the same with their Windows Mobile devices. e.g., using a tool called &amp;ldquo;Resco Explorer&amp;rdquo; on Windows Mobile, all they get while searching for their linux based Samba shares is the following screenshot:&lt;/p>
&lt;p>&lt;img src="https://shantanugoel.com/img/uploads/1_cant_find_computer.jpg" alt="Cannot Find Computer on Network">&lt;/p>
&lt;p>Well, there is no big magic trick to get an access to those shares, as they are already accessibly. You just need to do one more teeny little step to access them.&lt;/p>
&lt;p>The trick is that on Windows Mobile it will not detect your computer as having a shareable folder and will not show it, and it will thus not show a list of shared folders. So, what you need to do is enter the path to the folder you want to access. e.g.: If your computer&amp;rsquo;s name is &amp;ldquo;MyComp&amp;rdquo; and the folder you want to access is &amp;ldquo;MyFolder&amp;rdquo;, then you need to give the path &amp;ldquo;\MyComp\MyFolder&amp;rdquo; to the application on Windows Mobile from which you are trying to access your shares and it&amp;rsquo;ll connect without any problems. Of course, it&amp;rsquo;ll ask you for your username/pwd for which you need to enter your linux user name and password. Below screenshots tell you how to do this with Resco Explorer, however the same method can be used for other applications like Total Commander, Windows Mobile File Explorer, etc as well.&lt;/p>
&lt;ol>
&lt;li>Enter Path and click share.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://shantanugoel.com/img/uploads/2_enter_full_path.jpg" alt="Enter Full Path">&lt;/p>
&lt;ol start="2">
&lt;li>Enter User Name / Password&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://shantanugoel.com/img/uploads/3_enter_user_password.jpg" alt="Enter User Name And Password">&lt;/p>
&lt;ol start="3">
&lt;li>Its done :-)&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://shantanugoel.com/img/uploads/4_its_done.jpg" alt="Access To Share Is Done">&lt;/p>
&lt;p>Let me know if you face any issues with this.&lt;/p></content></item><item><title>Project: Shantz Copy Basket (Compatible with linux as well as windows)</title><link>https://shantanugoel.com/2008/03/16/project-shantz-copy-basket-compatible-with-linux-as-well-as-windows/</link><pubDate>Sun, 16 Mar 2008 13:26:00 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2008/03/16/project-shantz-copy-basket-compatible-with-linux-as-well-as-windows/</guid><description>I’m sure you have copied/moved files on your computer from one place to another. And I’m sure often you have to do more than just “single-shot” copying that is copy a few files to one place, move a few to another, and copy yet some more to one more location. Well, I had to do this quite a few times (e.g. I ran out of disk space recently on a partition and had to empty out my “Movies” and “Songs” folders to move a few movies/songs each to all other partitions/disks according to the space available).</description><content>&lt;p>I’m sure you have copied/moved files on your computer from one place to another. And I’m sure often you have to do more than just “single-shot” copying that is copy a few files to one place, move a few to another, and copy yet some more to one more location. Well, I had to do this quite a few times (e.g. I ran out of disk space recently on a partition and had to empty out my “Movies” and “Songs” folders to move a few movies/songs each to all other partitions/disks according to the space available). Hence, I wrote this little command line program, which behaves like a basket.&lt;/p>
&lt;p>You can put any number of files from any number of different locations into it in a single shot. It will store their locations and give them an ID. Now, you can copy/move those files to different destinations based on their IDs. What&amp;rsquo;s even better is that your basket will remain intact even across reboots. So, you can continue working on the files in the basket even for days.&lt;/p>
&lt;p>**Note: **Packages for windows as well as linux have been uploaded. If you have perl, a perl script is also given that works in both platforms without change. I have tested it on Windows XP SP2 and Ubuntu Feisty Fawn 7.04.&lt;/p></content></item><item><title>Project: Retrieve Files From Remote Computer Through E-mail</title><link>https://shantanugoel.com/2008/02/19/project-retrieve-files-from-remote-computer-through-e-mail/</link><pubDate>Tue, 19 Feb 2008 17:52:16 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2008/02/19/project-retrieve-files-from-remote-computer-through-e-mail/</guid><description>I came across this post on lifehacker today (original post and solution here), which talks about a method of retrieving files from a remote computer through e-mail. Pretty archaic, I know, but again, it is a very simple method and works behind all the firewalls and stuff . But, the catch is that it is only for mac’s. Thought of creating something similar for the PC and mashed together some code during lunch time at office to make our dear old outlook remote-file-sending-capable.</description><content>&lt;p>I came across &lt;a href="http://lifehacker.com/357710/retrieve-any-file-on-your-home-computer-by-email">this post&lt;/a> on lifehacker today (original post and solution &lt;a href="http://murphymac.com/retrieve-a-remote-file-by-email/">here&lt;/a>), which talks about a method of retrieving files from a remote computer through e-mail. Pretty archaic, I know, but again, it is a very simple method and works behind all the firewalls and stuff &lt;img src="https://shantanugoel.com/img/uploads/smile1.gif" alt="">. But, the catch is that it is only for mac’s. Thought of creating something similar for the PC and mashed together some code during lunch time at office to make our dear old outlook remote-file-sending-capable.&lt;/p></content></item><item><title>Remote File Access Through E-Mail</title><link>https://shantanugoel.com/2008/02/19/remote-file-access-through-e-mail/</link><pubDate>Tue, 19 Feb 2008 17:43:30 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2008/02/19/remote-file-access-through-e-mail/</guid><description>Introduction:
This is a (proof-of-concept) outlook macro that you can use with an outlook rule to retrieve your files from your home/office PC by sending it a mail with a subject having a predefined special keyword and the body containing the names and paths of the files. The remote PC will then mail you the files on a predefined e-mail ID.
This project came into being after reading this post at lifehacker (original post and solution here).</description><content>&lt;p>&lt;strong>Introduction:&lt;/strong>&lt;/p>
&lt;p>This is a (proof-of-concept) outlook macro that you can use with an outlook rule to retrieve your files from your home/office PC by sending it a mail with a subject having a predefined special keyword and the body containing the names and paths of the files. The remote PC will then mail you the files on a predefined e-mail ID.&lt;/p>
&lt;p>This project came into being after reading &lt;strong>&lt;a href="http://lifehacker.com/357710/retrieve-any-file-on-your-home-computer-by-email">this post&lt;/a>&lt;/strong> at lifehacker (original post and solution &lt;a href="http://murphymac.com/retrieve-a-remote-file-by-email/">here&lt;/a>). It listed a method to retrieve mails on your home/office PC by sending a &amp;ldquo;magic email&amp;rdquo; to it, but it was only for mac&amp;rsquo;s. Seeing that people wanted it for windows as well, I thought of making something up during lunch time at office.&lt;/p>
&lt;p>&lt;strong>Usage:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Download the attached zip file (shantz-outlook-remote-file-access.zip) and unzip it. It has a VB module &amp;ldquo;shantz-outlook-remote-file-access.bas&amp;rdquo; (can be opened with any text editor)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create a new macro in Outlook. Copy the code contained in Module1.bas to the main source file of the macro.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Edit the code to change the e-mail ID to which the files will be e-mailed. Save the macro.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create a new rule in Outlook. Choose to run the rule when a specific word is found in the subject. e.g. use &amp;ldquo;SendMeMyFiles&amp;rdquo;.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The action part of the rule should be &amp;ldquo;run a script&amp;rdquo;. Here you can choose the macro that you just created from the list shown by Outlook.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Save the rule and you are done.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Now try, sending a mail to the account that your outlook is configured to receive mail for, with the special keyword in the subject and a list of files (with their complete absolute paths on the remote computer) separated by semicolons (&amp;quot;;&amp;quot; without the quotes), and watch magic happen :).&lt;/p>
&lt;p>e.g.: To: &lt;a href="mailto:myemail@email.com">myemail@email.com&lt;/a>&lt;/p>
&lt;p>subject: SendMeMyFiles&lt;/p>
&lt;p>Body: c:\path\of\files\file1;d:\second\path\file2&lt;/p>
&lt;p>&lt;strong>IMPORTANT NOTES:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>For this thing to work, outlook has to be running on the remote PC as this depends on a &amp;ldquo;client-side&amp;rdquo; rule.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>This is just a proof-of-concept as of now, so there is no error handling right now. Plus the e-mail body parsing is finicky and so the e-mail body should not have anything other than the file paths and names. This might change in future if I decide to update it.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Don&amp;rsquo;t use it if your life depends on it. Use it for basic purposes and modify and improve it appropriately before you decide to use it seriously (You may submit your modifications here as well)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It has been tested only on Outlook 2003, but might work on others as well.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Let me know of any thoughts you may have about this.&lt;/p></content></item></channel></rss>