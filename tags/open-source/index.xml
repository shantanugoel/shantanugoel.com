<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Open Source on Shantanu Vs The World</title><link>https://shantanugoel.com/tags/open-source/</link><description>Recent content in Open Source on Shantanu Vs The World</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>shantanu@shantanugoel.com (Shantanu Goel)</managingEditor><webMaster>shantanu@shantanugoel.com (Shantanu Goel)</webMaster><lastBuildDate>Mon, 25 Oct 2010 11:31:06 +0000</lastBuildDate><atom:link href="https://shantanugoel.com/tags/open-source/index.xml" rel="self" type="application/rss+xml"/><item><title>Is Android Open Source Or Not?</title><link>https://shantanugoel.com/2010/10/25/android-open-source-or-not/</link><pubDate>Mon, 25 Oct 2010 11:31:06 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2010/10/25/android-open-source-or-not/</guid><description>Is Android really open source or not? That is the question being asked by almost everyone. A lot of people, especially those influenced by RDF or those who are in the news industry with no idea about OS and open source but were asked by their boss to get a scoop on this pronto, tend to bring up a few keywords and then twist them around in the way they see fit to make sure it says Android isn&amp;rsquo;t open.</description><content>&lt;p>Is Android really open source or not? That is the question being asked by almost everyone. A lot of people, especially those influenced by &lt;a href="http://en.wikipedia.org/wiki/Reality_distortion_field">RDF&lt;/a> or those who are in the news industry with no idea about OS and open source but were asked by their boss to get a scoop on this pronto, tend to bring up a few keywords and then twist them around in the way they see fit to make sure it says Android isn&amp;rsquo;t open. They don&amp;rsquo;t need to be correct, they only need the article to &amp;ldquo;&lt;strong>sound correct&lt;/strong>&amp;rdquo; by picking up sentences out of context or putting quotes only from people who agree with them. This will convince their boss and 99% of their readers who have no idea about all these things either. But the boss is happy he got a story and associated clicks. Readers are happy because they got the points to float around in their next forum flame war. They don&amp;rsquo;t have to read when someone corrects them. They have made their points and rest is all someone making noises like a rat.&lt;/p>
&lt;p>A lot out of the rest of the people, who are indeed informed, make the mistake of thinking that &amp;ldquo;Open Source = GPL&amp;rdquo; or &amp;ldquo;Open Source = Free Software&amp;rdquo;, which is not true. Open source is similar to free software but is one that choses to keep more options open. In short, Free Software Movement, as the one evangelized by FSF, is a subset of open source that tries to achieve freedom of software by restriction.&lt;/p>
&lt;p>Please also note that many people including Steve Jobs confuse people more by interchanging between open and open source. An android phone that you get may not be open, the android market may be open, etc but this discussion is purely about open-source.&lt;/p>
&lt;p>Anyways, with asbestos underwear on, I write this post to speak my mind about this matter by talking about various points thrown up by the above mentioned classes. Since this is going to be a long post, I&amp;rsquo;ll mention here the things it is going to cover:&lt;/p>
&lt;ol>
&lt;li>Allegations against Android&amp;rsquo;s open-source nature. Are they true?&lt;/li>
&lt;li>Does OSI Foundation (&lt;a href="http://www.opensource.org">Open source Initiative&lt;/a>) think that Android is open source?&lt;/li>
&lt;li>Android and open source in layman terms&lt;/li>
&lt;li>Takeaways/conclusion&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Update&lt;/strong>: Updated the article as per Tony and Kasper&amp;rsquo;s comments below. Thanks Kasper and Tony for your valuable inputs.&lt;/p>
&lt;h3 id="android-and-open-source-allegations-and-answers">Android and Open Source: Allegations and Answers&lt;/h3>
&lt;p>&lt;strong>Allegation&lt;/strong>: Google does a lot of development in private for few months and then releases the code to public.
&lt;strong>Answer&lt;/strong>: Almost every open source project I know does this. Do you think every person who works on an open source project pushes his code to the mainline 10 times when re writes a 10 line code? No. He completes the feature, tests it and then pushes it out. Individuals might do it sooner, companies might do it later but everyone pushes out their code when they feel things are fairly ready. So, Google choses to do the &amp;ldquo;push&amp;rdquo; every few months when they think their new feature set is ready. This, of course, is more influenced by the fact that they need to be competitive in the aggressive mobile market and hence not let the competitors know about the exact features but still it is well within the limits of open source. And they are doing it before/with the binary release as well.&lt;/p>
&lt;p>Also to be noted here is the fact that the &amp;ldquo;code dump&amp;rdquo; is done only for major releases. Minor fixes and even features keep trickling into the code base every now and then and these allow others to make fixes as well. e.g. Cyanogen was able to bring &amp;ldquo;802.11n&amp;rdquo; capability and was able to include various fixes including one for wi-fi sleep policies before they actually made into an OTA update for any phone.&lt;/p>
&lt;p>&lt;strong>Allegation&lt;/strong>: Only google employees can check in code to mainline.
&lt;strong>Answer&lt;/strong>: Every open source project has only a select few folks who can check in code. Most of the open source projects start with only their founders having commit access. They may or may not give commit accesses to anyone else. Check out various open source projects on sourceforge, googlecode, etc and you will find this. Most of the projects that do choose to give commit access to others, start doing it after some time when they feel the project is mature enough and they are confident enough in someone else. Android is just a hatchling, around 2 years old. It has begun making strides only now so Google may even choose to take the latter path but I can understand if Google wants to keep this as their control point because of the hustle and bustle of the mobile OS world which is much more rapid and cut throat than the desktop OS and this does not make them closed. Not only that, but seeing how everyone in the mobile world is so trigger happy with suing everyone else, it creates a legal issue for them as they would be the ones to answer if someone else brings this upon them.&lt;/p>
&lt;p>&lt;strong>Allegation&lt;/strong>: Google only accepts their own code into official android and nobody else&amp;rsquo;s.
&lt;strong>Answer&lt;/strong>: This one is hilarious. Obviously, anyone who says this hasn&amp;rsquo;t actually been to review.android.com. Just go their and check whether any merged changes have non-google, non-android email ids. Anyone can upload their patches there but the accepted ones are fairly low. This problem is present in every popular open source project, even the Linux kernel. But is more pronounced in the case of android because Google&amp;rsquo;s android team is much smaller than the number of persons working on other projects and there is red tape of a big company involved. If you want to get your patch in, just like the kernel, you need to engage with them. Talk to them in the relevant bug report, comment the code properly, give them a reason to not avoid your patch. But yes, the process is still very slow and it is eons faster to just contribute to a fork like cyanogenmod. I do hope that google does get better in this regard soon though.&lt;/p>
&lt;p>&lt;strong>Allegation&lt;/strong>: It is not possible to make a full android build from the public code tree of android.
&lt;strong>Answer&lt;/strong>: BS. Cyanogen does just fine with his full AOSP builds. People argue that Google does not release the modem/baseband code but they idiotically fail to realize that the baseband code is not part of Android at all. It is the IP of the baseband manufacturer and is specific to each hardware. Android is just the code that runs on apps hardware. Google does not indeed release the code of their built in google apps (gtalk/gmail etc) though but they are already working towards that and these apps will not be a part of the base Android system anymore. These would be standalone apps and even now you don&amp;rsquo;t need them to make a fully working android build.&lt;/p>
&lt;p>&lt;strong>Allegation&lt;/strong>: &amp;ldquo;Android&amp;rdquo; is a registered trademark and is held by Google.
&lt;strong>Answer&lt;/strong>: Linus holds the trademark for &amp;ldquo;Linux&amp;rdquo;, Mozilla foundation holds the trademark for &amp;ldquo;Firefox&amp;rdquo;, Canonical holds the trademark for &amp;ldquo;Ubuntu&amp;rdquo;. Get the drift? Basically, it is completely possible and allowed for an open source software to be trademarked.&lt;/p>
&lt;p>&lt;strong>Allegation&lt;/strong>: Google doesn&amp;rsquo;t stop the carriers/OEMs from locking down the phones, adding bloatware or custom UIs.
&lt;strong>Answer&lt;/strong>: This is an issue with carriers/OEMs and not Android. Google uses the apache software license (ASL), which is a permissive license (like MIT, BSD, etc) and hence does not stop the carriers from doing such a thing (In fact, this is the very foundation of being open, check the next passage about OSI foundation, point no. 9). Many people say they should, but if they did then they wouldn&amp;rsquo;t be open anymore, would they?
Even Linus Torvalds is against making such a stipulation of not allowing locking of phones and this is the biggest reason why the Linux Kernel (and lot of other open source projects) didn&amp;rsquo;t move to FSF&amp;rsquo;s (&lt;a href="http://www.fsf.org">Free Software Foundation&lt;/a>) GPL v3. I wonder why no one calls the Linux kernel closed hmmmm&amp;hellip;
BTW, if you are so serious about unlocked/rootable phones then buy a dev phone directly from google or get one from Synapse.&lt;/p>
&lt;h3 id="android-and-open-source-osi-foundation">Android and Open Source: OSI Foundation&lt;/h3>
&lt;p>The OSI foundation has a few guidelines to determine whether something is open source or not under their &lt;a href="http://www.opensource.org/osd.html">Open Source Definition&lt;/a>. Android uses the OSI compatible Apache Software License (ASL) but still let&amp;rsquo;s see whether Android comes up to all of them or not. If it is in conflict with even one of the requisites, we will call Android closed.&lt;/p>
&lt;ol>
&lt;li>Allow free redistribution - Check&lt;/li>
&lt;li>Give out un-obfuscated source code - Check&lt;/li>
&lt;li>Allow modifications and derived works - Check&lt;/li>
&lt;li>Allow distribution of modifications (as patches) or modified software as a whole. Can restrict the modified versions from using original name of software - Check&lt;/li>
&lt;li>No discrimination against any person or groups - Check&lt;/li>
&lt;li>No restriction of using the software on any device or field - Check&lt;/li>
&lt;li>No additional license needed - Check&lt;/li>
&lt;li>No product-specific license - Check&lt;/li>
&lt;li>No restriction on software distributed along with original software - Check&lt;/li>
&lt;li>Technology neutral, i.e., no preference for an individual technology or user interface - Check
So, Android is true to each and every point that being open demands to it. In fact, points 9 and 10 are fundamental in making it open but alas, people less oriented with open software tend to term this as being closed (as seen in the last allegation above)&lt;/li>
&lt;/ol>
&lt;h3 id="android-and-open-source-from-a-laymans-view-point">Android and Open Source: From a layman&amp;rsquo;s view point&lt;/h3>
&lt;p>Apart from the above, I would also like to share a few &amp;ldquo;layman-examples&amp;rdquo; which will let you understand for yourself why Android is open:&lt;/p>
&lt;ul>
&lt;li>You can see all the official android OS code without any restrictions&lt;/li>
&lt;li>You can download it, fork it, modify it without asking google&lt;/li>
&lt;li>You can port it to any device without asking google&lt;/li>
&lt;li>You can develop and sell your phone with Android without asking google
Now compare that with any other mobile OS you know.&lt;/li>
&lt;/ul>
&lt;h3 id="android-and-open-source-conclusion">Android and Open Source: Conclusion&lt;/h3>
&lt;p>So, the takeaways from the above wall of text are:&lt;/p>
&lt;ul>
&lt;li>Android is open-source&lt;/li>
&lt;li>Android is permissively open-source instead of being restrictive&lt;/li>
&lt;li>Android can do better in terms of community driven development but is perhaps held back by pace of competition and legalities involved. But, this in no way makes it non-open-source.&lt;/li>
&lt;/ul>
&lt;p>Let me know if you have any corrections or allegations to make :)&lt;/p></content></item><item><title>Android vs iPhone: Security Models</title><link>https://shantanugoel.com/2010/06/25/android-vs-iphone-security-models/</link><pubDate>Fri, 25 Jun 2010 22:02:49 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2010/06/25/android-vs-iphone-security-models/</guid><description>Android and iPhone OS (iOS) have been at loggerheads for quite some time now. This is a take on which has a better security model to protect its users. I thought of writing it up because there have been a lot of discussions around me lately about which platform is more secure and I keep repeating the same points over and over at every one of them, so thought that in future I&amp;rsquo;ll just point them to this page :P</description><content>&lt;p>Android and iPhone OS (iOS) have been at loggerheads for quite some time now. This is a take on which has a better security model to protect its users. I thought of writing it up because there have been a lot of discussions around me lately about which platform is more secure and I keep repeating the same points over and over at every one of them, so thought that in future I&amp;rsquo;ll just point them to this page :P&lt;/p>
&lt;p>&lt;strong>Disclaimer:&lt;/strong>&lt;/p>
&lt;p>A. I don&amp;rsquo;t guarantee this post to be absolutely correct as I&amp;rsquo;m no security researcher or expert but I do have some interest in this field and I&amp;rsquo;ve been a developer for some time now on different architectures and OSs especially at OS/driver level and that too in the mobile devices field, so I &amp;ldquo;might&amp;rdquo; actually be right about a few things here and there..&lt;/p>
&lt;p>B. I&amp;rsquo;m an android user myself but not of the fanboy variety. I&amp;rsquo;ll be happy to switch camps any day I get something that appeals to me better. I have love and hate points for almost all platforms available but I&amp;rsquo;m using android because &amp;ldquo;for me&amp;rdquo; it&amp;rsquo;s love points slightly outnumber the hate points.&lt;/p>
&lt;p>OK, on with the points then. Here is the table that I created for this showing points I considered and which side wins each. Don&amp;rsquo;t start flaming me though just by seeing the table :P I will be discussing the points as well below it.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Android
iPhone&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>1. Distribution Medium Security:&lt;/strong> Apple vets every application that is put on the app store while Google&amp;rsquo;s Market Place is unrestricted. How does this affect you security wise?&lt;/p>
&lt;p>**a. Approval Process: **The biggest myth is that the vetting process is what will save you from malware on app store. IT WON&amp;rsquo;T. The Apple app approval process isn&amp;rsquo;t defined anywhere but in general it just states that it checks for apps to do what they say they will do. But they don&amp;rsquo;t check the source code of the apps and static analysis of binaries can only take you so far (Heck, they have even been inept at catching a whole lot of apps that were using their disallowed private apis which can be found easily using simple tools) . So, anyone actually wanting to write a malware can do it trivially by making the malicious code to run after the app has been approved. The trigger could be time based or could even be done over the web remotely. The app could even have encrypted payloads or download new pieces of code over the web and run them. So, we can safely say that approval process is something that can&amp;rsquo;t make things secure for you that way.&lt;/p>
&lt;p>&lt;strong>Result: No one wins&lt;/strong>&lt;/p>
&lt;p>**
**&lt;/p>
&lt;p>&lt;strong>b. Phishing:&lt;/strong> This is where App store can protect you if someone put an app claiming to be from someone that it isn&amp;rsquo;t. e.g. Someone could make an app that claims to be from &amp;ldquo;Bank of America&amp;rdquo;. In apple&amp;rsquo;s case, I&amp;rsquo;m 99.99% sure that the app won&amp;rsquo;t pass the screening but in Android&amp;rsquo;s case, there won&amp;rsquo;t be any hassles for it to reach the marketplace. It could be pulled soon after as google learns about it but still even one person&amp;rsquo;s damage here is much more than what would have happend on iPhone.&lt;/p>
&lt;p>&lt;strong>Result: iPhone wins&lt;/strong>&lt;/p>
&lt;p>**
**&lt;/p>
&lt;p>&lt;strong>2. Local Security:&lt;/strong> What about the security in the OS itself once an app is on your phone? This is an important question because 1.) As I noted above, Apple&amp;rsquo;s app screening process isn&amp;rsquo;t robust enough to catch malware 2.) People can bypass the official distribution medium easily. Android allows to install apps from other sources on most phones by just enabling an option and a huge number of people jailbreak their iPhones and get/use this capability.&lt;/p>
&lt;p>&lt;strong>a. Permissions:&lt;/strong> On Android, an app has to explicitly declare what capabilities/data of the phone it wants to access/use and the user has to explicitly give it those permissions before it is allowed to install, irrespective of from where/how this app is being installed. So, it works even if you are installing the app from your SD card and even if you have rooted your phone. On iPhone, there is no such mechanism of restricting apps. All apps are equal and can access a lot of resources unhindered without the user knowing. So, while installing a single player only game on android you can immediately be suspicious if the app is asking for internet connection or access to your contacts data but on iPhone you will not come to know about this.&lt;/p>
&lt;p>&lt;strong>Result: Android wins&lt;/strong>&lt;/p>
&lt;p>**
**&lt;/p>
&lt;p>&lt;strong>b. Environment:&lt;/strong> On both platforms, the apps run in their own sandboxes with unique uuids&lt;/p>
&lt;p>&lt;strong>Result: Tie&lt;/strong>&lt;/p>
&lt;p>**
**&lt;/p>
&lt;p>&lt;strong>3. Open vs Closed:&lt;/strong> Most of the Android code is open source while for iOS, only darwin kernel and some other things like webkit etc are open source. Now, this in itself doesn&amp;rsquo;t gurantee to make Android secure but its code does get a lot of scrutiny from open source community as well as lot of other big name companies with commercial interests in Android which allows it to find and fix more bugs and loopholes than iPhone can.&lt;/p>
&lt;p>&lt;strong>Result: Slight win for Android&lt;/strong>&lt;/p>
&lt;p>**
**&lt;/p>
&lt;p>&lt;strong>4. App development model:&lt;/strong> Most apps for Android are written in java while those in iPhone are written in C/Objective-C. While I&amp;rsquo;m myself a big time C lover (Majority of my coding is in C/CPP) but it is indeed a very unforgiving language where you need to be very careful with what you write and has much greater chances of exploits, .e.g, Buffer overflows, as compared to java (Interestingly, all the jailbreaks for iPhone OS have been done using such exploits and have been made available day 0/day 1 mostly.)&lt;/p>
&lt;p>&lt;strong>Result: Slight win for Android&lt;/strong>&lt;/p>
&lt;p>**
**&lt;/p>
&lt;p>&lt;strong>5. Damage Control:&lt;/strong> What if an app actually got through everything on any of these platforms and started spreading? Both of these platforms have kill switches in the hands of Google/Apple which they can use to remove such malicious apps from the users&amp;rsquo; phones remotely.&lt;/p>
&lt;p>&lt;strong>Result: Tie&lt;/strong>&lt;/p>
&lt;p>**
**&lt;/p>
&lt;p>Summary: Well, there is no clear winner. Apple is quite good when it comes to protecting you from phishing (though that advantage goes away if you jailbreak and use alternative means to install apps) and Android has a real sound local security system (though it also has the flaw that users might not always understand why an app is requesting a certain critical permission and install it anyways). So, take your pick and let me know what you picked :) and please do tell me if I&amp;rsquo;m wrong in any of my points or missed out on something that needs to be compared.&lt;/p></content></item><item><title>The Solution To Your Problem Is Out There .... Somewhere</title><link>https://shantanugoel.com/2008/12/03/the-solution-to-your-problem-is-out-there-somewhere/</link><pubDate>Wed, 03 Dec 2008 15:30:00 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2008/12/03/the-solution-to-your-problem-is-out-there-somewhere/</guid><description>I got hold of a new Asus WL-500W router for me (Pics &amp;amp; specs coming up soon). The router has open source firmware so people can develop applications for it. One such app (ADOS) is that allows you to configure the router to download stuff directly to a hard disk (connected to router through USB) without the need of keeping the PC switched on. One of the app users reported the following error (Click on the pic to enlarge) that he got while using the app.</description><content>&lt;p>I got hold of a new Asus WL-500W router for me (Pics &amp;amp; specs coming up soon). The router has open source firmware so people can develop applications for it. One such app (ADOS) is that allows you to configure the router to download stuff directly to a hard disk (connected to router through USB) without the need of keeping the PC switched on. One of the app users reported the following error (Click on the pic to enlarge) that he got while using the app.&lt;/p>
&lt;p>&lt;a href="https://shantanugoel.com/img/uploads/ADOS_20error_20message.jpg">&lt;img src="https://shantanugoel.com/img/uploads/ADOS_20error_20message_thumb.jpg" alt="Asus WL-500W ADOS error message">&lt;/a>&lt;/p>
&lt;p>Let&amp;rsquo;s see what it says:&lt;/p>
&lt;p>[Error] Description: An error occured while connecting to the remote server.&lt;/p>
&lt;p>Probable Reasons: Probable reasons can be found in the error&amp;rsquo;s description. (Hmmm, lets wait &amp;amp; watch)&lt;/p>
&lt;p>Probable Solutions: Probable soulutions (sic) can be found in the error&amp;rsquo;s description. (Yay!! Alright….hey, wait a sec, how am I supposed to find a solution from a description that says &amp;ldquo;An error occured&amp;rdquo;)&lt;/p>
&lt;p>So, that&amp;rsquo;s it for now folks. Am off to the himalayas to get some training from the mahatmas in the exquisite art of psychic healing (and router apps bug fixing).&lt;/p></content></item><item><title>Creative Open Sources X-Fi Sound Card Driver…Finally</title><link>https://shantanugoel.com/2008/11/07/creative-open-sources-x-fi-sound-card-driverfinally/</link><pubDate>Fri, 07 Nov 2008 04:14:29 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2008/11/07/creative-open-sources-x-fi-sound-card-driverfinally/</guid><description>Creative has finally come to its senses and turned to the open source community to raise its X-Fi series of sound cards from the ashes on the linux platform, which got burnt mostly due to the poor quality of the drivers that Creative was giving out. The announcement for releasing the source code, licensed under GPL v2, was made on their forums. For the announcement and download details, click here.</description><content>&lt;p>Creative has finally come to its senses and turned to the open source community to raise its X-Fi series of sound cards from the ashes on the linux platform, which got burnt mostly due to the poor quality of the drivers that Creative was giving out. The announcement for releasing the source code, licensed under GPL v2, was made on their forums. For the announcement and download details, click &lt;a href="http://forums.creative.com/creativelabs/board/message?board.id=soundblaster&amp;amp;thread.id=132288">here&lt;/a>.&lt;/p>
&lt;p>I guess this is a reason for us to rejoice because of two reasons:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>This would definitely make life that much more better as the open source developers fix these particular drivers (ALSA people, start your engines)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>This also means another big inroads into the commercial world for open source as creative is definitely one of the big boys around.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Now, I wish NVidia would see the light of the day as well. Creative guys, care to take a trip down to Santa Clara to share your reasonings with our GPU brothers :)&lt;/p></content></item><item><title>Project: ShantzTodayChanger Is Now Open Source’d</title><link>https://shantanugoel.com/2008/10/30/project-shantztodaychanger-is-now-open-sourced/</link><pubDate>Thu, 30 Oct 2008 16:00:00 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2008/10/30/project-shantztodaychanger-is-now-open-sourced/</guid><description>For those who don’t know ShantzTodayChanger is a small Windows Mobile tool that allows you to cycle through your wallpapers/themes or run applications after specified intervals of time automatically and provides you a lot of tweaking options to control this.
Sometime back I formatted my laptop which I dual booted between Windows XP and Linux (Ubuntu, if you may ask). Now I installed Hardy Heron back onto thenew system within an hour but just can’t get myself motivated to “finish” the Windows install by getting and installing all the drivers after having to sit through hours pointing, clicking and rebooting to get just the base installed.</description><content>&lt;p>For those who don’t know ShantzTodayChanger is a small Windows Mobile tool that allows you to cycle through your wallpapers/themes or run applications after specified intervals of time automatically and provides you a lot of tweaking options to control this.&lt;/p>
&lt;p>Sometime back I formatted my laptop which I dual booted between Windows XP and Linux (Ubuntu, if you may ask). Now I installed Hardy Heron back onto thenew system within an hour but just can’t get myself motivated to “finish” the Windows install by getting and installing all the drivers after having to sit through hours pointing, clicking and rebooting to get just the base installed. And moreover, there is no drive in me to boot into windows now just to work on ShantzTodayChanger any more. So, I thought that I’ll release the source code so that if someone is willing to continue the development. I’ll still be available for questions, discussions, explanations etc about it if needed.&lt;/p>
&lt;p>You are free to copy, modify and redistribute it. Only things that I ask of you are that:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>You retain all credits for me and my website in the source code, final product, and other material (readme etc) intact.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Also, please provide a linkback to the original home page of shantztodaychanger if you redistribute it through some other site, otherwise I’ll be happy to host your modified versions here.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You also have to release the modified source code in its entirety.&lt;/p>
&lt;/li>
&lt;/ol></content></item><item><title>Google Releases Android Source Code</title><link>https://shantanugoel.com/2008/10/21/google-releases-android-source-code/</link><pubDate>Tue, 21 Oct 2008 17:57:52 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2008/10/21/google-releases-android-source-code/</guid><description>FOSS (Free and Open Source Software) community rejoices today as google finally lived upto their promise of releasing the android source code. Now, the things that is left to be evaluated is that how much of it is actually true, or whether there are some binary blobs still in there. Moreover, it remains to be seen that how much this converts into a “community” project instead of being ruled by Google with an iron hand.</description><content>&lt;p>FOSS (Free and Open Source Software) community rejoices today as google finally lived upto their promise of &lt;a href="http://google-opensource.blogspot.com/2008/10/android-open-source-cell-phone.html">releasing&lt;/a> the &lt;a href="http://source.android.com/">android source code&lt;/a>. Now, the things that is left to be evaluated is that how much of it is actually true, or whether there are some binary blobs still in there. Moreover, it remains to be seen that how much this converts into a “community” project instead of being ruled by Google with an iron hand. But given the interest that Android has generated so far, and given google’s reputation as a good open source promoter, I am ready to believe that this is going to be one of the biggest landmarks that mobile FOSS industry will see. And maybe, this will finally motivate me as well to get involved in the “bigger picture” finally by contributing to a project that is more than just a few thousand lines of source. What is your opinion and expectation from this development? Let me know.&lt;/p></content></item><item><title>The Why Behind "Open Source": In simple Terms</title><link>https://shantanugoel.com/2008/04/08/the-why-behind-open-source-in-simple-terms/</link><pubDate>Tue, 08 Apr 2008 14:40:43 +0000</pubDate><author>shantanu@shantanugoel.com (Shantanu Goel)</author><guid>https://shantanugoel.com/2008/04/08/the-why-behind-open-source-in-simple-terms/</guid><description>Many people ask me why are people crazy about Open Source, or why does it even exist. After all if your code is out there, you can&amp;rsquo;t make money off it, right? Well, yes and no. Now, I ain&amp;rsquo;t no open source guru, but I do my part for it. Generally my explanations are either too complex, too full of extra details or mostly just described badly for a layman that I end up on square one, i.</description><content>&lt;p>Many people ask me why are people crazy about Open Source, or why does it even exist. After all if your code is out there, you can&amp;rsquo;t make money off it, right? Well, yes and no. Now, I ain&amp;rsquo;t no open source guru, but I do my part for it. Generally my explanations are either too complex, too full of extra details or mostly just described badly for a layman that I end up on square one, i.e., not convincing the sophomore who asked the question, looking towards me for the answer. Well, lets leave it for the experts to do the hard work, eh :-). Tristan Rhodes has explained the grand scheme behind it all in terms that would even make my grand mother under stand it.&lt;/p>
&lt;p>Hit the link if you are interested in knowing more about open source or are just like me, looking for something to advocate open source to all in easy terms.&lt;/p>
&lt;p>&lt;a href="http://useopensource.blogspot.com/2007/08/why-do-people-make-software-for-free.html">Why do people make software for free?&lt;/a>&lt;/p></content></item></channel></rss>